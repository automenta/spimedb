(||,AntisymmetricRelation,SymmetricRelation).
(||,Artifact,Organism).
(||,AsexualReproduction,SexualReproduction).
(||,AstronomicalBody,GeographicArea).
(||,Attaching,Detaching).
(||,AutonomicProcess,IntentionalProcess).
(||,Bird,Mammal).
(||,Building,Room).
(||,Canine,Feline).
(||,Clothing,StationaryArtifact).
(||,ColdBloodedVertebrate,WarmBloodedVertebrate).
(||,Collection,SelfConnectedObject).
(||,Combining,Separating).
(||,ComplexNumber,RealNumber).
(||,Cooling,Heating).
(||,CorpuscularObject,Substance).
(||,Covering,Uncovering).
(||,Damaging,Repairing).
(||,Decoding,Encoding).
(||,Fabric,StationaryArtifact).
(||,FactualText,FictionalText).
(||,FloweringPlant,NonFloweringPlant).
(||,FreshWaterArea,SaltWaterArea).
(||,GasMixture,LiquidMixture).
(||,GeologicalProcess,IntentionalProcess).
(||,GovernmentOrganization,ParamilitaryOrganization).
(||,Icon,LinguisticExpression).
(||,IntentionalProcess,NaturalProcess).
(||,IntentionalProcess,WeatherProcess).
(||,IntransitiveRelation,TransitiveRelation).
(||,JoiningAnOrganization,LeavingAnOrganization).
(||,MotionDownward,MotionUpward).
(||,NounPhrase,VerbPhrase).
(||,ObjectAttitude,PropositionalAttitude).
(||,ObjectiveNorm,SubjectiveAssessmentAttribute).
(||,OrganOrTissueProcess,OrganismProcess).
(||,PathologicProcess,PhysiologicProcess).
(||,PlaneAngleMeasure,SolidAngleMeasure).
(--,exists(((#PATH2)-->#PATH1),(&&,lessThan(#NUMBER1,#NUMBER2),pathLength(#PATH1,#NUMBER1),pathLength(#PATH2,#NUMBER2),(#1-->[CutSetFn(#2)]),(#1-->[MinimalCutSetFn(#2)])))).
(--,(hole(#HOLE,#OBJ)==>overlapsSpatially(#HOLE,#OBJ))).
(--,(greaterThanByQuality(#E1,#E2,#ATT)==>equal(#E2,#E1))).
(--,(orientation(#OBJ1,#OBJ2,Above)==>connected(#OBJ1,#OBJ2))).
(--,(orientation(#OBJ1,#OBJ2,Near)==>connected(#OBJ1,#OBJ2))).
(--,(greaterThanByQuality(#E1,#E2,#ATT)==>greaterThanByQuality(#E2,#E1,#ATT))).
(--,(orientation(#OBJ1,#OBJ2,On)==>orientation(#OBJ2,#OBJ1,On))).
(--,(parallel(#LINE1,#LINE2)==>exists(#POINT,pointOfIntersection(#LINE1,#LINE2,#POINT)))).
(--,(holdsDuring(#TIME,(--,#SITUATION))==>holdsDuring(#TIME,#SITUATION))).
(--,((fills(#OBJ1,#HOLE)&&attribute(#OBJ2,Fillable))==>overlapsSpatially(#OBJ1,#OBJ2))).
(--,((side(#S,#O)&&top(#TOP,#O))==>equal(#TOP,#S))).
(--,(length(#O,#M)==>exists(#M2,(greaterThan(#M2,#M)&&linearExtent(#O,#M2))))).
(--,(attribute(#OBJ,Dry)==>exists(#SUBOBJ,(part(#SUBOBJ,#OBJ)&&attribute(#SUBOBJ,Liquid))))).
(--,(connected(#OBJ1,#OBJ2)==>((--,meetsSpatially(#OBJ1,#OBJ2))&&(--,overlapsSpatially(#OBJ1,#OBJ2))))).
(--,(traverses(#OBJ1,#OBJ2)==>((--,crosses(#OBJ1,#OBJ2))&&(--,penetrates(#OBJ1,#OBJ2))))).
(--,(beforeOrEqual(#POINT1,#POINT2)==>((--,before(#POINT1,#POINT2))&&(--,equal(#POINT1,#POINT2))))).
(--,(exactlyLocated(#OBJ,#REGION)==>exists(#OTHEROBJ,((--,equal(#OTHEROBJ,#OBJ))&&exactlyLocated(#OTHEROBJ,#REGION))))).
(--,((&&,(--,equal(#OBJ1,#OBJ2)),member(#OBJ1,#COLL),member(#OBJ2,#COLL))==>overlapsSpatially(#OBJ1,#OBJ2))).
(--,((hole(#HOLE,#OBJ1)&&part(#OBJ1,#OBJ2))==>((--,hole(#HOLE,#OBJ2))&&(--,overlapsSpatially(#HOLE,#OBJ2))))).
(--,(immediateSubclass(#CLASS1,#CLASS2)==>exists(#CLASS3,(&&,(--,equal(#CLASS1,#CLASS3)),(--,equal(#CLASS2,#CLASS3)),(#1-->#2))))).
(--,(equal(MaxFn(#NUMBER1,#NUMBER2),#NUMBER)==>(&&,(--,equal(#NUMBER,#NUMBER1)),(--,equal(#NUMBER,#NUMBER2)),(--,greaterThan(#NUMBER1,#NUMBER2)),(--,greaterThan(#NUMBER2,#NUMBER1))))).
(--,(equal(MinFn(#NUMBER1,#NUMBER2),#NUMBER)==>(&&,(--,equal(#NUMBER,#NUMBER1)),(--,equal(#NUMBER,#NUMBER2)),(--,lessThan(#NUMBER1,#NUMBER2)),(--,lessThan(#NUMBER2,#NUMBER1))))).
(--,((&&,(--,equal(#ATTR1,#ATTR2)),contraryAttribute("@ROW"),orientation(#OBJ1,#OBJ2,#ATTR1),inList(#ATTR1,ListFn("@ROW")),inList(#ATTR2,ListFn("@ROW")))==>orientation(#OBJ1,#OBJ2,#ATTR2))).
(--,(equal(RoundFn(#NUMBER1),#NUMBER2)==>((--,(greaterThanOrEqualTo(SubtractionFn(#NUMBER1,FloorFn(#NUMBER1)),"0.5")==>equal(#NUMBER2,CeilingFn(#NUMBER1))))&&(--,(lessThan(SubtractionFn(#NUMBER1,FloorFn(#NUMBER1)),"0.5")==>equal(#NUMBER2,FloorFn(#NUMBER1))))))).
(--,(connectedEngineeringComponents(#COMP1,#COMP2)==>(#1-->[EngineeringConnection]))).
(--,(hole(#HOLE,#OBJ)==>(#1-->[Hole]))).
(--,((#1-->[NullSet])==>exists(#INST,(#1-->[#2])))).
(--,((#1-->[TemporaryResidence])==>exists(#PERSON,home(#PERSON,#RESIDENCE)))).
(--,((#1-->[VariableArityRelation])==>exists(#INT,valence(#REL,#INT)))).
(--,((orientation(#O1,#O2,#P)&&(#1-->[AntiSymmetricPositionalAttribute]))==>orientation(#O2,#O1,#P))).
(--,((#1-->[Integer])==>(lessThan(#INT1,#INT2)&&lessThan(#INT2,SuccessorFn(#INT1))))).
(--,((#1-->[Integer])==>(lessThan(#INT2,#INT1)&&lessThan(PredecessorFn(#INT1),#INT2)))).
(--,((#1-->[Tree])==>exists(#LOOP,(graphPart(#LOOP,#GRAPH)&&(#1-->[GraphCircuit]))))).
(--,((#1-->[Tree])==>exists(#LOOP,(graphPart(#LOOP,#GRAPH)&&(#1-->[GraphLoop]))))).
(--,((#1-->[UnilateralGetting])==>exists(#TRANS,(subProcess(#GET,#TRANS)&&(#1-->[Transaction]))))).
(--,((#1-->[UnilateralGiving])==>exists(#TRANS,(subProcess(#GIVE,#TRANS)&&(#1-->[Transaction]))))).
(--,((&&,meetsSpatially(#ISLE,#AREA),(#1-->[GeographicArea]),(#1-->[Island]))==>(#1-->[LandArea]))).
(--,((&&,agent(#TRANSFER,#AGENT),patient(#TRANSFER,#PATIENT),(#1-->[Transfer]))==>equal(#AGENT,#PATIENT))).
(--,((&&,patient(#CONFINE,#PERSON),(#1-->[Confining]),(#1-->[Human]))==>desires(#PERSON,patient(#CONFINE,#PERSON)))).
(--,(equal(CeilingFn(#NUMBER),#INT)==>exists(#OTHERINT,(&&,lessThan(#OTHERINT,#INT),greaterThanOrEqualTo(#OTHERINT,#NUMBER),(#1-->[Integer]))))).
(--,(equal(FloorFn(#NUMBER),#INT)==>exists(#OTHERINT,(&&,greaterThan(#OTHERINT,#INT),lessThanOrEqualTo(#OTHERINT,#NUMBER),(#1-->[Integer]))))).
(--,((&&,experiencer(#BIRTH,#ORG),equal(#BW,WhenFn(#BIRTH)),holdsDuring(#TIME,attribute(#ORG,Embryonic)),(#1-->[Birth]))==>overlapsTemporally(#TIME,#BW))).
(--,((&&,eventLocated(#X,#L),prevents(#X,#P),equal(WhenFn(#X),#T))==>holdsDuring(#T,exists(#Y,(eventLocated(#Y,#L)&&(#1-->[#2])))))).
(--,((&&,patient(#CHANGE,#OBJ),holdsDuring(BeginFn(WhenFn(#CHANGE)),possesses(#AGENT1,#OBJ)),holdsDuring(EndFn(WhenFn(#CHANGE)),possesses(#AGENT2,#OBJ)),(#1-->[ChangeOfPossession]))==>equal(#AGENT1,#AGENT2))).
(--,((#1-->[Object])==>((--,attribute(#OBJ,Monochromatic))&&(--,attribute(#OBJ,Polychromatic))))).
(--,((property(#ITEM,#VALUE)&&(#1-->[TruthValue]))==>((--,(#1-->[Proposition]))&&(--,(#1-->[Sentence]))))).
(--,((#1-->[Abstract])==>exists(#POINT,(||,located(#ABS,#POINT),time(#ABS,#POINT))))).
(--,(immediateInstance(#ENTITY,#CLASS)==>exists(#SUBCLASS,(&&,(--,equal(#SUBCLASS,#CLASS)),(#1-->#2),(#1-->[#2]))))).
(--,((#1-->[Formula])==>(&&,(--,decreasesLikelihood(#FORMULA1,#FORMULA2)),(--,increasesLikelihood(#FORMULA1,#FORMULA2)),(--,independentProbability(#FORMULA1,#FORMULA2))))).
(--,((#1-->[Morpheme])==>exists(#OTHERMORPH,(&&,(--,equal(#OTHERMORPH,#MORPH)),part(#OTHERMORPH,#MORPH),(#1-->[Morpheme]))))).
(--,((&&,(--,equal(#REL1,#REL2)),(("@ROW2")-->#REL1),disjointRelation(#REL1,#REL2),(#1-->[Predicate]))==>(("@ROW2")-->#REL2))).
(--,((#1-->[Residence])==>((--,(#1-->[House]))&&(--,exists(#BUILDING,(part(#RESIDENCE,#BUILDING)&&(#1-->[ResidentialBuilding]))))))).
(--,((&&,subProcess(#MANEUVER,#CONTEST),(#1-->[Maneuver]),(#1-->[ViolentContest]))==>((--,(#1-->[Attack]))&&(--,(#1-->[DefensiveManeuver]))))).
(--,((agent(#ACT,#AGENT)&&(#1-->[OrganizationalProcess]))==>((--,(#1-->[Organization]))&&(--,exists(#ORG,(member(#AGENT,#ORG)&&(#1-->[Organization]))))))).
(--,((agent(#ACT,#AGENT)&&(#1-->[ReligiousProcess]))==>((--,(#1-->[ReligiousOrganization]))&&(--,exists(#ORG,(member(#AGENT,#ORG)&&(#1-->[ReligiousOrganization]))))))).
(--,((patient(#PROC,#BIO)&&(#1-->[TherapeuticProcess]))==>((--,(#1-->[Organism]))&&(--,exists(#ORG,(part(#BIO,#ORG)&&(#1-->[Organism]))))))).
(--,((&&,parent(#CHILD,#PARENT),result(#REP,#CHILD),agent(#REP,#PARENT),(#1-->[SexualReproduction]))==>((--,father(#CHILD,#PARENT))&&(--,mother(#CHILD,#PARENT))))).
(--,((#1-->[Animal])==>((--,exists(#ATTR,(attribute(#ANIMAL,#ATTR)&&(#1-->[BodyPosition]))))&&(--,exists(#MOTION,(agent(#MOTION,#ANIMAL)&&(#1-->[BodyMotion]))))))).
(--,((agent(#WAR,#AGENT)&&(#1-->[War]))==>(&&,(--,(#1-->[GeopoliticalArea])),(--,(#1-->[Organization])),(--,forall(#MEMBER,(member(#MEMBER,#AGENT)==>(#1-->[GeopoliticalArea]))))))).
(--,(exhaustiveAttribute(#ATTRCLASS,"@ROW")==>exists(#EL,((--,exists(((#NUMBER)-->#ATTR),(equal(#EL,#ATTR)&&equal(#ATTR,ListOrderFn(ListFn("@ROW"),#NUMBER)))))&&(#1-->[#2]))))).
(--,((&&,graphPart(#ARC,#GRAPH),equal(InitialNodeFn(#ARC),#NODE),(#1-->[GraphArc]),(#1-->[GraphPath]))==>exists(#OTHER,((--,equal(#OTHER,#ARC))&&equal(InitialNodeFn(#OTHER),#NODE))))).
(--,((&&,graphPart(#ARC,#GRAPH),equal(TerminalNodeFn(#ARC),#NODE),(#1-->[GraphArc]),(#1-->[GraphPath]))==>exists(#OTHER,((--,equal(#OTHER,#ARC))&&equal(TerminalNodeFn(#OTHER),#NODE))))).
(--,((#1-->[Island])==>exists(((#PART1,#PART2)-->#AREA),(&&,(--,part(#AREA,#ISLAND)),(--,part(#ISLAND,#AREA)),part(#PART1,#ISLAND),meetsSpatially(#PART1,#PART2),part(#PART2,#AREA),(#1-->[LandArea]))))).
(--,((#1-->[Tree])==>exists(((#ARC2,#NODE)-->#ARC1),(&&,(--,equal(#ARC1,#ARC2)),graphPart(#ARC1,#GRAPH),graphPart(#ARC2,#GRAPH),graphPart(#NODE,#GRAPH),equal(TerminalNodeFn(#ARC1),#NODE),equal(TerminalNodeFn(#ARC2),#NODE))))).
(--,((&&,greaterThanOrEqualTo(#TEMP2,#TEMP1),boilingPoint(#TYPE,MeasureFn(#TEMP1,#MEASURE)),holdsDuring(#TIME,measure(#SUBSTANCE,MeasureFn(#TEMP2,#MEASURE))),(#1-->[#2]),(#1-->[UnitOfTemperature]))==>((--,holdsDuring(#TIME,attribute(#SUBSTANCE,Gas)))&&(--,exists(#BOIL,(&&,patient(#BOIL,#SUBSTANCE),overlapsTemporally(WhenFn(#BOIL),#TIME),(#1-->[Boiling]))))))).
(--,((&&,lessThan(#TEMP2,#TEMP1),meltingPoint(#TYPE,MeasureFn(#TEMP1,#MEASURE)),holdsDuring(#TIME,measure(#SUBSTANCE,MeasureFn(#TEMP2,#MEASURE))),(#1-->[#2]),(#1-->[UnitOfTemperature]))==>((--,holdsDuring(#TIME,attribute(#SUBSTANCE,Solid)))&&(--,exists(#FREEZE,(&&,patient(#FREEZE,#SUBSTANCE),overlapsTemporally(WhenFn(#FREEZE),#TIME),(#1-->[Freezing]))))))).
(--,((&&,lessThan(#TEMP3,#TEMP1),greaterThan(#TEMP3,#TEMP2),boilingPoint(#TYPE,MeasureFn(#TEMP1,#MEASURE)),meltingPoint(#TYPE,MeasureFn(#TEMP2,#MEASURE)),holdsDuring(#TIME,measure(#SUBSTANCE,MeasureFn(#TEMP3,#MEASURE))),(#1-->[#2]),(#1-->[UnitOfTemperature]))==>((--,holdsDuring(#TIME,attribute(#SUBSTANCE,Liquid)))&&(--,exists(#MELT,(&&,patient(#BOIL,#SUBSTANCE),overlapsTemporally(WhenFn(#MELT),#TIME),(#1-->[Melting]))))))).
(--,(modalAttribute(#FORMULA,Permission)<=>modalAttribute(#FORMULA,Prohibition))).
(--,(modalAttribute(#FORMULA,Necessity)<=>modalAttribute((--,#FORMULA),Possibility))).
(--,(modalAttribute(#FORMULA,Obligation)<=>modalAttribute((--,#FORMULA),Permission))).
(--,(disjointDecomposition(#CLASS,#ROW1,#ROW2,#ROW3)<=>((--,#1)&&(--,#2)))).
(--,(greaterThanOrEqualTo(#NUMBER1,#NUMBER2)<=>((--,equal(#NUMBER1,#NUMBER2))&&(--,greaterThan(#NUMBER1,#NUMBER2))))).
(--,(lessThanOrEqualTo(#NUMBER1,#NUMBER2)<=>((--,equal(#NUMBER1,#NUMBER2))&&(--,lessThan(#NUMBER1,#NUMBER2))))).
(--,(orientation(#OBJ1,#OBJ2,Adjacent)<=>((--,connected(#OBJ1,#OBJ2))&&(--,orientation(#OBJ1,#OBJ2,Near))))).
(--,(orientation(#OBJ1,#OBJ2,Below)<=>((--,orientation(#OBJ2,#OBJ1,Above))&&(--,orientation(#OBJ2,#OBJ1,On))))).
(--,(($0-->[Above])<=>($0-->[Below]))).
(--,(($0-->[Audible])<=>($0-->[Inaudible]))).
(--,(($0-->[Awake])<=>($0-->[Unconscious]))).
(--,(($0-->[Damp])<=>($0-->[Dry]))).
(--,(($0-->[Dead])<=>($0-->[Living]))).
(--,(($0-->[Embryonic])<=>($0-->[Larval]))).
(--,(($0-->[False])<=>($0-->[True]))).
(--,(($0-->[Female])<=>($0-->[Male]))).
(--,(($0-->[FullyFormed])<=>($0-->[NonFullyFormed]))).
(--,(($0-->[Horizontal])<=>($0-->[Vertical]))).
(--,(($0-->[Illuminated])<=>($0-->[Unilluminated]))).
(--,(($0-->[Left])<=>($0-->[Right]))).
(--,(($0-->[Likely])<=>($0-->[Unlikely]))).
(--,(($0-->[Liquid])<=>($0-->[Solid]))).
(--,(($0-->[Monochromatic])<=>($0-->[Polychromatic]))).
(--,(($0-->[North])<=>($0-->[South]))).
(--,(($0-->[Pliable])<=>($0-->[Rigid]))).
(--,(($0-->[Rough])<=>($0-->[Smooth]))).
(--,(equal(GreatestCommonDivisorFn("@ROW"),#NUMBER)==>exists(#GREATER,(greaterThan(#GREATER,#NUMBER)&&forall(#ELEMENT,(inList(#ELEMENT,ListFn("@ROW"))==>equal(RemainderFn(#ELEMENT,#GREATER),0))))))).
(--,(equal(LeastCommonMultipleFn("@ROW"),#NUMBER)==>exists(#LESS,(lessThan(#LESS,#NUMBER)&&forall(#ELEMENT,(inList(#ELEMENT,ListFn("@ROW"))==>equal(RemainderFn(#LESS,#ELEMENT),0))))))).
(--,((#1-->[NonnegativeRealNumber])==>((--,equal(SignumFn(#NUMBER),0))&&(--,equal(SignumFn(#NUMBER),1))))).
(--,(((#1-->[LeapYear])&&(#1-->[YearFn(#2)]))==>(&&,(--,equal(RemainderFn(#NUMBER,4),0)),(--,equal(RemainderFn(#NUMBER,400),0)),equal(RemainderFn(#NUMBER,100),0)))).
(--,((equal(AbsoluteValueFn(#NUMBER1),#NUMBER2)&&(#1-->[RealNumber]))<=>(&&,(--,equal(#NUMBER1,#NUMBER2)),(--,(#1-->[NegativeRealNumber])),(--,(#1-->[NonnegativeRealNumber])),(--,equal(#NUMBER2,SubtractionFn(0,#NUMBER1)))))).
(AbnormalAnatomicalStructure-->AnatomicalStructure).
(Abstract-->Entity).
(Adjective-->Word).
(Adverb-->Word).
(Advertising-->Disseminating).
(AgeGroup-->GroupOfPeople).
(Agent-->Object).
(Air-->GasMixture).
(AlethicAttribute-->ObjectiveNorm).
(Alga-->NonFloweringPlant).
(Ambulating-->BodyMotion).
(Ambulating-->IntentionalProcess).
(Ambulating-->Translocation).
(Amphibian-->ColdBloodedVertebrate).
(AnatomicalStructure-->OrganicObject).
(AngleMeasure-->ConstantQuantity).
(AnimacyAttribute-->BiologicalAttribute).
(Animal-->Organism).
(AnimalAnatomicalStructure-->AnatomicalStructure).
(AnimalLanguage-->Language).
(AnimalSubstance-->BodySubstance).
(AntiSymmetricPositionalAttribute-->PositionalAttribute).
(AntisymmetricRelation-->BinaryRelation).
(Ape-->Primate).
(April-->Month).
(AquaticMammal-->Mammal).
(Arachnid-->Arthropod).
(AreaMeasure-->FunctionQuantity).
(Argument-->Proposition).
(ArtWork-->Artifact).
(Arthropod-->Invertebrate).
(Artifact-->Object).
(ArtificialLanguage-->Language).
(AsexualReproduction-->Replication).
(AssociativeFunction-->BinaryFunction).
(AstronomicalBody-->Object).
(AsymmetricRelation-->AntisymmetricRelation).
(AsymmetricRelation-->IrreflexiveRelation).
(Atom-->ElementalSubstance).
(AtomicNucleus-->SubatomicParticle).
(Attaching-->DualObjectProcess).
(AttachingDevice-->Device).
(Attack-->Maneuver).
(Attribute-->Abstract).
(August-->Month).
(AutonomicProcess-->PhysiologicProcess).
(Bacterium-->Microorganism).
(Battle-->ViolentContest).
(BeliefGroup-->GroupOfPeople).
(Betting-->FinancialTransaction).
(BinaryFunction-->Function).
(BinaryFunction-->InheritableRelation).
(BinaryFunction-->TernaryRelation).
(BinaryNumber-->RealNumber).
(BinaryPredicate-->BinaryRelation).
(BinaryPredicate-->InheritableRelation).
(BinaryPredicate-->Predicate).
(BinaryRelation-->InheritableRelation).
(BinaryRelation-->Relation).
(BiologicalAttribute-->InternalAttribute).
(BiologicalProcess-->InternalChange).
(BiologicallyActiveSubstance-->Substance).
(Bird-->WarmBloodedVertebrate).
(Birth-->OrganismProcess).
(Blood-->BodySubstance).
(BodyCavity-->BodyPart).
(BodyCovering-->BodyPart).
(BodyJunction-->BodyPart).
(BodyMotion-->Motion).
(BodyPart-->AnatomicalStructure).
(BodyPosition-->BiologicalAttribute).
(BodySubstance-->Substance).
(BodyVessel-->BodyCavity).
(Boiling-->StateChange).
(Bone-->AnimalSubstance).
(Bone-->Tissue).
(Borrowing-->Getting).
(Breathing-->AutonomicProcess).
(Breathing-->OrganismProcess).
(Building-->StationaryArtifact).
(Business-->CommercialAgent).
(Business-->Organization).
(Buying-->FinancialTransaction).
(Calculating-->IntentionalPsychologicalProcess).
(Canine-->Carnivore).
(Carbohydrate-->Nutrient).
(Carnivore-->Mammal).
(Carrying-->Transfer).
(CaseRole-->AsymmetricRelation).
(CaseRole-->BinaryPredicate).
(CaseRole-->InheritableRelation).
(Cell-->BodyPart).
(Certificate-->Text).
(ChangeOfPossession-->SocialInteraction).
(Character-->SymbolicString).
(ChemicalDecomposition-->ChemicalProcess).
(ChemicalDecomposition-->Separating).
(ChemicalProcess-->InternalChange).
(ChemicalSynthesis-->ChemicalProcess).
(ChemicalSynthesis-->Combining).
(Circle-->Oval).
(City-->GeopoliticalArea).
(City-->LandArea).
(Classifying-->IntentionalPsychologicalProcess).
(ClosedTwoDimensionalFigure-->TwoDimensionalFigure).
(Clothing-->WearableItem).
(Cloud-->GasMixture).
(CognitiveAgent-->SentientAgent).
(ColdBloodedVertebrate-->Vertebrate).
(Collection-->Object).
(ColorAttribute-->VisualAttribute).
(Coloring-->SurfaceChange).
(Combining-->DualObjectProcess).
(Combustion-->ChemicalDecomposition).
(CommercialAgent-->Agent).
(CommercialService-->FinancialTransaction).
(CommercialService-->ServiceProcess).
(Committing-->LinguisticCommunication).
(Communication-->ContentBearingProcess).
(Communication-->SocialInteraction).
(CommutativeFunction-->BinaryFunction).
(Comparing-->DualObjectProcess).
(Comparing-->IntentionalPsychologicalProcess).
(ComplexNumber-->Number).
(CompositeUnitOfMeasure-->FunctionQuantity).
(CompositeUnitOfMeasure-->UnitOfMeasure).
(CompoundSubstance-->PureSubstance).
(ComputerLanguage-->ArtificialLanguage).
(ComputerProgram-->Procedure).
(ComputerProgramming-->ContentDevelopment).
(Condensing-->StateChange).
(Confining-->Keeping).
(ConsciousnessAttribute-->StateOfMind).
(ConstantQuantity-->PhysicalQuantity).
(ConstructedLanguage-->ArtificialLanguage).
(ConstructedLanguage-->HumanLanguage).
(Constructing-->Making).
(ContentBearingObject-->ContentBearingPhysical).
(ContentBearingObject-->CorpuscularObject).
(ContentBearingPhysical-->Physical).
(ContentBearingProcess-->ContentBearingPhysical).
(ContentBearingProcess-->Process).
(ContentDevelopment-->IntentionalProcess).
(Contest-->SocialInteraction).
(ContestAttribute-->ObjectiveNorm).
(Continent-->LandArea).
(ContinuousFunction-->Function).
(Cooking-->Making).
(Cooling-->Decreasing).
(Cooperation-->SocialInteraction).
(Corporation-->Business).
(Corporation-->LegalAgent).
(CorpuscularObject-->SelfConnectedObject).
(Counting-->Calculating).
(County-->GeopoliticalArea).
(County-->LandArea).
(Covering-->Putting).
(Creation-->InternalChange).
(Crustacean-->Arthropod).
(Currency-->FinancialInstrument).
(CurrencyMeasure-->ConstantQuantity).
(Cutting-->Poking).
(Damaging-->InternalChange).
(Dancing-->BodyMotion).
(Day-->TimeInterval).
(Death-->OrganismProcess).
(December-->Month).
(Deciding-->Selecting).
(Declaring-->LinguisticCommunication).
(Decoding-->Writing).
(Decreasing-->QuantityChange).
(DeductiveArgument-->Argument).
(DefensiveManeuver-->Maneuver).
(Demonstrating-->Disseminating).
(DeonticAttribute-->ObjectiveNorm).
(Designing-->ContentDevelopment).
(Designing-->IntentionalPsychologicalProcess).
(Destruction-->Damaging).
(Detaching-->DualObjectProcess).
(DevelopmentalAttribute-->BiologicalAttribute).
(Device-->Artifact).
(DiagnosticProcess-->Investigating).
(Digesting-->AutonomicProcess).
(Digesting-->OrganismProcess).
(DirectedGraph-->Graph).
(Directing-->LinguisticCommunication).
(DirectionChange-->Motion).
(DirectionalAttribute-->PositionalAttribute).
(Disagreeing-->Stating).
(Discovering-->IntentionalPsychologicalProcess).
(DiseaseOrSyndrome-->BiologicalAttribute).
(Disseminating-->Communication).
(Drinking-->Ingesting).
(Driving-->Guiding).
(Drying-->Removing).
(DualObjectProcess-->Process).
(Eating-->Ingesting).
(EducationalOrganization-->Organization).
(EducationalProcess-->Guiding).
(Egg-->AnimalAnatomicalStructure).
(Egg-->ReproductiveBody).
(Election-->OrganizationalProcess).
(Electron-->SubatomicParticle).
(ElementalSubstance-->PureSubstance).
(EmotionalState-->StateOfMind).
(Encoding-->Writing).
(EngineeringComponent-->Device).
(EngineeringConnection-->EngineeringComponent).
(Enzyme-->Protein).
(EquivalenceRelation-->ReflexiveRelation).
(EquivalenceRelation-->SymmetricRelation).
(EquivalenceRelation-->TransitiveRelation).
(EthnicGroup-->GroupOfPeople).
(Evaporating-->StateChange).
(EvenInteger-->Integer).
(Experimenting-->Investigating).
(Explanation-->DeductiveArgument).
(Expressing-->Communication).
(Fabric-->Artifact).
(FactualText-->Text).
(Falling-->MotionDownward).
(Falling-->Translocation).
(FamilyGroup-->GroupOfPeople).
(FatTissue-->Tissue).
(February-->Month).
(Feline-->Carnivore).
(Fern-->NonFloweringPlant).
(FictionalText-->Text).
(FieldOfStudy-->Proposition).
(FinancialInstrument-->Certificate).
(FinancialTransaction-->Transaction).
(FiniteSet-->Set).
(Fish-->ColdBloodedVertebrate).
(FloweringPlant-->Plant).
(Formula-->Sentence).
(Freezing-->StateChange).
(FrequencyMeasure-->TimeDependentQuantity).
(FreshWaterArea-->WaterArea).
(Friday-->Day).
(FruitOrVegetable-->PlantAnatomicalStructure).
(FruitOrVegetable-->ReproductiveBody).
(Function-->InheritableRelation).
(Function-->SingleValuedRelation).
(FunctionQuantity-->PhysicalQuantity).
(Funding-->Giving).
(Fungus-->Organism).
(Game-->Contest).
(Game-->RecreationOrExercise).
(GasMixture-->Mixture).
(GasMotion-->Motion).
(GeographicArea-->Region).
(GeologicalProcess-->InternalChange).
(GeologicalProcess-->Motion).
(GeometricFigure-->ShapeAttribute).
(GeometricPoint-->GeometricFigure).
(GeopoliticalArea-->Agent).
(GeopoliticalArea-->GeographicArea).
(Gesture-->BodyMotion).
(Gesture-->Communication).
(Getting-->ChangeOfPossession).
(Giving-->ChangeOfPossession).
(GivingBack-->Giving).
(Gland-->Organ).
(Government-->GovernmentOrganization).
(Government-->LegalAgent).
(GovernmentOrganization-->Organization).
(Grabbing-->Attaching).
(Grabbing-->Touching).
(Graduation-->LeavingAnOrganization).
(Graph-->Abstract).
(GraphArc-->GraphElement).
(GraphCircuit-->GraphPath).
(GraphElement-->Abstract).
(GraphLoop-->GraphArc).
(GraphNode-->GraphElement).
(GraphPath-->DirectedGraph).
(Group-->Agent).
(Group-->Collection).
(GroupOfPeople-->Group).
(Growth-->AutonomicProcess).
(Guiding-->IntentionalProcess).
(Hearing-->Perception).
(Heating-->Increasing).
(Hiring-->JoiningAnOrganization).
(Hole-->Region).
(Hominid-->Primate).
(HoofedMammal-->Mammal).
(Hormone-->BiologicallyActiveSubstance).
(Hormone-->BodySubstance).
(Hour-->TimeInterval).
(House-->ResidentialBuilding).
(House-->SingleFamilyResidence).
(Human-->CognitiveAgent).
(Human-->Hominid).
(HumanLanguage-->Language).
(Hunting-->Pursuing).
(Icon-->ContentBearingPhysical).
(ImaginaryNumber-->Number).
(Impacting-->Touching).
(Impelling-->Transfer).
(Increasing-->QuantityChange).
(InductiveArgument-->Argument).
(InformationMeasure-->ConstantQuantity).
(Ingesting-->OrganismProcess).
(InheritableRelation-->Relation).
(Injecting-->Inserting).
(Injuring-->Damaging).
(Injuring-->PathologicProcess).
(Insect-->Arthropod).
(Inserting-->Putting).
(Integer-->RationalNumber).
(IntentionalProcess-->Process).
(IntentionalPsychologicalProcess-->IntentionalProcess).
(IntentionalPsychologicalProcess-->PsychologicalProcess).
(IntentionalRelation-->InheritableRelation).
(IntentionalRelation-->Relation).
(InternalAttribute-->Attribute).
(InternalChange-->Process).
(Interpreting-->IntentionalPsychologicalProcess).
(IntransitiveRelation-->BinaryRelation).
(InvalidDeductiveArgument-->DeductiveArgument).
(Invertebrate-->Animal).
(Investigating-->IntentionalProcess).
(IrrationalNumber-->RealNumber).
(IrreflexiveRelation-->BinaryRelation).
(Island-->LandArea).
(January-->Month).
(JoiningAnOrganization-->OrganizationalProcess).
(Judging-->Selecting).
(JudicialOrganization-->Organization).
(JudicialProcess-->PoliticalProcess).
(July-->Month).
(June-->Month).
(Keeping-->IntentionalProcess).
(Killing-->Destruction).
(LandArea-->GeographicArea).
(LandTransitway-->LandArea).
(LandTransitway-->Transitway).
(Language-->LinguisticExpression).
(LeapYear-->Year).
(Learning-->IntentionalPsychologicalProcess).
(LeavingAnOrganization-->OrganizationalProcess).
(LegalAction-->Contest).
(LegalAgent-->Agent).
(LegalDecision-->Declaring).
(LegalDecision-->JudicialProcess).
(Lending-->Giving).
(LengthMeasure-->ConstantQuantity).
(LinguisticCommunication-->Communication).
(LinguisticExpression-->ContentBearingPhysical).
(LiquidMixture-->Mixture).
(LiquidMotion-->Motion).
(List-->Relation).
(Listening-->Hearing).
(Listening-->IntentionalProcess).
(LocalizablePlace-->GeographicArea).
(LogicalOperator-->Predicate).
(Looking-->IntentionalProcess).
(Looking-->Seeing).
(Machine-->Device).
(Maintaining-->IntentionalProcess).
(Making-->Creation).
(Making-->IntentionalProcess).
(MakingInstrumentalMusic-->MakingMusic).
(MakingMusic-->RadiatingSound).
(MakingVocalMusic-->MakingMusic).
(MakingVocalMusic-->Vocalizing).
(Mammal-->WarmBloodedVertebrate).
(Man-->Human).
(Managing-->Guiding).
(Managing-->OrganizationalProcess).
(Maneuver-->IntentionalProcess).
(ManualHumanLanguage-->HumanLanguage).
(Manufacture-->Making).
(Manufacturer-->Corporation).
(March-->Month).
(Marsupial-->Mammal).
(MassMeasure-->ConstantQuantity).
(Matriculation-->JoiningAnOrganization).
(May-->Month).
(Measuring-->Calculating).
(MeasuringDevice-->Device).
(Meat-->SelfConnectedObject).
(Meeting-->SocialInteraction).
(Melting-->StateChange).
(MercantileOrganization-->Corporation).
(Metal-->ElementalSubstance).
(Microorganism-->Organism).
(MilitaryForce-->PoliticalOrganization).
(MilitaryOrganization-->GovernmentOrganization).
(MilitaryOrganization-->MilitaryForce).
(MilitaryProcess-->OrganizationalProcess).
(MilitaryProcess-->PoliticalProcess).
(Mineral-->Substance).
(Minute-->TimeInterval).
(Mixture-->Substance).
(Molecule-->CompoundSubstance).
(Mollusk-->Invertebrate).
(Monday-->Day).
(Monkey-->Primate).
(Month-->TimeInterval).
(Morpheme-->LinguisticExpression).
(Moss-->NonFloweringPlant).
(Motion-->Process).
(MotionDownward-->Motion).
(MotionPicture-->Text).
(MotionUpward-->Motion).
(MultiGraph-->Graph).
(Muscle-->AnimalSubstance).
(Muscle-->Tissue).
(MusicalInstrument-->Device).
(Myriapod-->Arthropod).
(Naming-->Declaring).
(Nation-->GeopoliticalArea).
(Nation-->LandArea).
(NaturalLanguage-->HumanLanguage).
(NaturalProcess-->Process).
(NaturalSubstance-->Substance).
(NegativeInteger-->Integer).
(NegativeInteger-->NegativeRealNumber).
(NegativeRealNumber-->RealNumber).
(Neutron-->SubatomicParticle).
(NonCompositeUnitOfMeasure-->ConstantQuantity).
(NonCompositeUnitOfMeasure-->UnitOfMeasure).
(NonFloweringPlant-->Plant).
(NonnegativeInteger-->Integer).
(NonnegativeInteger-->NonnegativeRealNumber).
(NonnegativeRealNumber-->RealNumber).
(NormativeAttribute-->RelationalAttribute).
(Noun-->Word).
(NounPhrase-->Phrase).
(November-->Month).
(Number-->Quantity).
(Nutrient-->BiologicallyActiveSubstance).
(Object-->Physical).
(ObjectAttitude-->InheritableRelation).
(ObjectAttitude-->IntentionalRelation).
(ObjectiveNorm-->NormativeAttribute).
(October-->Month).
(OddInteger-->Integer).
(Offering-->Committing).
(OlfactoryAttribute-->PerceptualAttribute).
(OneDimensionalFigure-->GeometricFigure).
(OneToOneFunction-->UnaryFunction).
(OpenTwoDimensionalFigure-->TwoDimensionalFigure).
(Ordering-->Directing).
(Organ-->BodyPart).
(OrganOrTissueProcess-->AutonomicProcess).
(OrganicObject-->CorpuscularObject).
(OrganicObject-->OrganicThing).
(OrganicThing-->SelfConnectedObject).
(Organism-->Agent).
(Organism-->OrganicObject).
(OrganismProcess-->PhysiologicProcess).
(Organization-->Agent).
(Organization-->Group).
(OrganizationalProcess-->IntentionalProcess).
(Oval-->ClosedTwoDimensionalFigure).
(ParamilitaryOrganization-->MilitaryForce).
(PartialOrderingRelation-->AntisymmetricRelation).
(PartialOrderingRelation-->ReflexiveRelation).
(PartialOrderingRelation-->TotalValuedRelation).
(PartialOrderingRelation-->TransitiveRelation).
(PartialValuedRelation-->Relation).
(ParticleWord-->Word).
(Patent-->Certificate).
(PathologicProcess-->BiologicalProcess).
(Perception-->PsychologicalProcess).
(PerceptualAttribute-->RelationalAttribute).
(PermanentResidence-->Residence).
(Phrase-->LinguisticExpression).
(Physical-->Entity).
(PhysicalAttribute-->InternalAttribute).
(PhysicalQuantity-->Quantity).
(PhysicalState-->InternalAttribute).
(PhysicalSystem-->Physical).
(PhysiologicProcess-->BiologicalProcess).
(Plan-->Procedure).
(PlaneAngleMeasure-->AngleMeasure).
(Planning-->IntentionalPsychologicalProcess).
(Plant-->Organism).
(PlantAnatomicalStructure-->AnatomicalStructure).
(PlantSubstance-->BodySubstance).
(Poisoning-->Injuring).
(Poking-->IntentionalProcess).
(PoliceOrganization-->GovernmentOrganization).
(PoliticalOrganization-->Organization).
(PoliticalProcess-->OrganizationalProcess).
(Pollen-->PlantAnatomicalStructure).
(Pollen-->ReproductiveBody).
(Position-->SocialRole).
(PositionalAttribute-->RelationalAttribute).
(PositiveInteger-->NonnegativeInteger).
(PositiveInteger-->PositiveRealNumber).
(PositiveRealNumber-->NonnegativeRealNumber).
(Precipitation-->Falling).
(Precipitation-->WaterMotion).
(Precipitation-->WeatherProcess).
(Predicate-->InheritableRelation).
(Predicate-->Relation).
(Predicting-->IntentionalPsychologicalProcess).
(PrepositionalPhrase-->Phrase).
(Pretending-->SocialInteraction).
(PrimaryColor-->ColorAttribute).
(Primate-->Mammal).
(PrimeNumber-->Integer).
(ProbabilityAttribute-->ObjectiveNorm).
(ProbabilityRelation-->InheritableRelation).
(ProbabilityRelation-->Relation).
(Procedure-->Proposition).
(Process-->Physical).
(Product-->Artifact).
(Proposition-->Abstract).
(PropositionalAttitude-->AsymmetricRelation).
(PropositionalAttitude-->InheritableRelation).
(PropositionalAttitude-->IntentionalRelation).
(Protein-->Nutrient).
(Proton-->SubatomicParticle).
(PseudoGraph-->Graph).
(PsychologicalAttribute-->BiologicalAttribute).
(PsychologicalDysfunction-->DiseaseOrSyndrome).
(PsychologicalDysfunction-->PsychologicalAttribute).
(PsychologicalProcess-->BiologicalProcess).
(Publication-->ContentDevelopment).
(Publication-->Manufacture).
(PureSubstance-->Substance).
(Pursuing-->IntentionalProcess).
(Putting-->Transfer).
(Quantity-->Abstract).
(QuantityChange-->InternalChange).
(QuaternaryFunction-->Function).
(QuaternaryFunction-->InheritableRelation).
(QuaternaryFunction-->QuintaryRelation).
(QuaternaryPredicate-->InheritableRelation).
(QuaternaryPredicate-->Predicate).
(QuaternaryPredicate-->QuaternaryRelation).
(QuaternaryRelation-->InheritableRelation).
(QuaternaryRelation-->Relation).
(Questioning-->Directing).
(QuintaryPredicate-->InheritableRelation).
(QuintaryPredicate-->Predicate).
(QuintaryPredicate-->QuintaryRelation).
(QuintaryRelation-->InheritableRelation).
(QuintaryRelation-->Relation).
(Radiating-->Motion).
(RadiatingElectromagnetic-->Radiating).
(RadiatingInfrared-->RadiatingElectromagnetic).
(RadiatingLight-->RadiatingElectromagnetic).
(RadiatingNuclear-->Radiating).
(RadiatingSound-->Radiating).
(RadiatingXRay-->RadiatingElectromagnetic).
(RationalNumber-->RealNumber).
(Reading-->ContentDevelopment).
(RealNumber-->Number).
(Reasoning-->IntentionalPsychologicalProcess).
(RecreationOrExercise-->IntentionalProcess).
(ReflexiveRelation-->BinaryRelation).
(Region-->Object).
(RegulatoryProcess-->Guiding).
(Relation-->Abstract).
(RelationExtendedToQuantities-->InheritableRelation).
(RelationExtendedToQuantities-->Relation).
(RelationalAttribute-->Attribute).
(Releasing-->Transfer).
(ReligiousOrganization-->BeliefGroup).
(ReligiousOrganization-->Organization).
(ReligiousProcess-->OrganizationalProcess).
(Remembering-->PsychologicalProcess).
(Removing-->Transfer).
(Repairing-->IntentionalProcess).
(Replication-->OrganismProcess).
(RepresentationalArtWork-->ArtWork).
(RepresentationalArtWork-->Icon).
(ReproductiveBody-->BodyPart).
(Reptile-->ColdBloodedVertebrate).
(Requesting-->Directing).
(Residence-->StationaryArtifact).
(ResidentialBuilding-->Building).
(ResidentialBuilding-->Residence).
(Roadway-->LandTransitway).
(Rodent-->Mammal).
(Room-->StationaryArtifact).
(Running-->Ambulating).
(SaltWaterArea-->WaterArea).
(SaturationAttribute-->InternalAttribute).
(Saturday-->Day).
(Searching-->Investigating).
(Second-->TimeInterval).
(Seed-->PlantAnatomicalStructure).
(Seed-->ReproductiveBody).
(Seeing-->Perception).
(Selecting-->IntentionalPsychologicalProcess).
(SelfConnectedObject-->Object).
(Selling-->FinancialTransaction).
(Sentence-->LinguisticExpression).
(SentientAgent-->Agent).
(Separating-->DualObjectProcess).
(September-->Month).
(SequenceFunction-->OneToOneFunction).
(ServiceProcess-->SocialInteraction).
(Set-->SetOrClass).
(SetOrClass-->Abstract).
(SexAttribute-->BiologicalAttribute).
(SexualReproduction-->Replication).
(ShapeAttribute-->StructureAttribute).
(ShapeChange-->InternalChange).
(Shooting-->Impelling).
(ShoreArea-->LandArea).
(Singing-->MakingVocalMusic).
(SingleAgentProcess-->Process).
(SingleFamilyResidence-->PermanentResidence).
(SingleValuedRelation-->InheritableRelation).
(SingleValuedRelation-->Relation).
(Smelling-->Perception).
(Smoke-->Cloud).
(SocialInteraction-->IntentionalProcess).
(SocialRole-->RelationalAttribute).
(SocialUnit-->GroupOfPeople).
(SolidAngleMeasure-->AngleMeasure).
(Solution-->LiquidMixture).
(SoundAttribute-->PerceptualAttribute).
(SpatialRelation-->InheritableRelation).
(SpatialRelation-->Relation).
(SpokenHumanLanguage-->HumanLanguage).
(Spore-->PlantAnatomicalStructure).
(Spore-->ReproductiveBody).
(Sport-->Game).
(StateChange-->InternalChange).
(StateOfMind-->PsychologicalAttribute).
(StateOrProvince-->GeopoliticalArea).
(StateOrProvince-->LandArea).
(Stating-->LinguisticCommunication).
(StationaryArtifact-->Artifact).
(StructureAttribute-->InternalAttribute).
(SubatomicParticle-->ElementalSubstance).
(SubjectiveAssessmentAttribute-->NormativeAttribute).
(SubjectiveStrongNegativeAttribute-->SubjectiveAssessmentAttribute).
(SubjectiveStrongPositiveAttribute-->SubjectiveAssessmentAttribute).
(SubjectiveWeakNegativeAttribute-->SubjectiveAssessmentAttribute).
(SubjectiveWeakPositiveAttribute-->SubjectiveAssessmentAttribute).
(Substance-->SelfConnectedObject).
(Substituting-->DualObjectProcess).
(Substituting-->Transfer).
(Summary-->Text).
(Sunday-->Day).
(Supposing-->LinguisticCommunication).
(SurfaceChange-->InternalChange).
(Surgery-->TherapeuticProcess).
(Suspension-->LiquidMixture).
(Swimming-->BodyMotion).
(Swimming-->IntentionalProcess).
(SymbolicString-->ContentBearingObject).
(SymmetricPositionalAttribute-->PositionalAttribute).
(SymmetricRelation-->BinaryRelation).
(SyntheticSubstance-->Substance).
(SystemeInternationalUnit-->UnitOfMeasure).
(TactilePerception-->Perception).
(TasteAttribute-->PerceptualAttribute).
(Tasting-->Perception).
(TemperatureMeasure-->ConstantQuantity).
(TemporalRelation-->InheritableRelation).
(TemporalRelation-->Relation).
(TemporaryResidence-->Residence).
(TerminatingEmployment-->LeavingAnOrganization).
(TernaryFunction-->Function).
(TernaryFunction-->InheritableRelation).
(TernaryFunction-->QuaternaryRelation).
(TernaryPredicate-->InheritableRelation).
(TernaryPredicate-->Predicate).
(TernaryPredicate-->TernaryRelation).
(TernaryRelation-->InheritableRelation).
(TernaryRelation-->Relation).
(Text-->Artifact).
(Text-->ContentBearingObject).
(Text-->LinguisticExpression).
(TextureAttribute-->PerceptualAttribute).
(TherapeuticProcess-->Repairing).
(ThreeDimensionalFigure-->GeometricFigure).
(Thursday-->Day).
(TimeDependentQuantity-->UnaryConstantFunctionQuantity).
(TimeDuration-->TimeMeasure).
(TimeInterval-->TimePosition).
(TimeMeasure-->ConstantQuantity).
(TimePoint-->TimePosition).
(TimePosition-->TimeMeasure).
(TimeZone-->RelationalAttribute).
(Tissue-->BodySubstance).
(TotalOrderingRelation-->PartialOrderingRelation).
(TotalOrderingRelation-->TrichotomizingRelation).
(TotalValuedRelation-->InheritableRelation).
(TotalValuedRelation-->Relation).
(Touching-->Transfer).
(TraitAttribute-->PsychologicalAttribute).
(Transaction-->ChangeOfPossession).
(Transaction-->DualObjectProcess).
(Transfer-->Translocation).
(TransitiveRelation-->BinaryRelation).
(Transitway-->Region).
(Transitway-->SelfConnectedObject).
(Translating-->ContentDevelopment).
(Translating-->DualObjectProcess).
(Translocation-->Motion).
(Transportation-->Translocation).
(TransportationDevice-->Device).
(Tree-->DirectedGraph).
(TrichotomizingRelation-->BinaryRelation).
(TruthValue-->RelationalAttribute).
(Tuesday-->Day).
(TwoDimensionalAngle-->OpenTwoDimensionalFigure).
(TwoDimensionalFigure-->GeometricFigure).
(UnaryConstantFunctionQuantity-->FunctionQuantity).
(UnaryFunction-->BinaryRelation).
(UnaryFunction-->Function).
(UnaryFunction-->InheritableRelation).
(Uncovering-->Removing).
(Ungrasping-->Detaching).
(UnilateralGetting-->Getting).
(UnilateralGiving-->Giving).
(UniqueList-->List).
(UnitOfAngularMeasure-->NonCompositeUnitOfMeasure).
(UnitOfArea-->CompositeUnitOfMeasure).
(UnitOfAtmosphericPressure-->CompositeUnitOfMeasure).
(UnitOfCurrency-->NonCompositeUnitOfMeasure).
(UnitOfDuration-->NonCompositeUnitOfMeasure).
(UnitOfFrequency-->CompositeUnitOfMeasure).
(UnitOfInformation-->NonCompositeUnitOfMeasure).
(UnitOfLength-->NonCompositeUnitOfMeasure).
(UnitOfMass-->NonCompositeUnitOfMeasure).
(UnitOfMeasure-->PhysicalQuantity).
(UnitOfMeasureMultiplier-->TotalValuedRelation).
(UnitOfMeasureMultiplier-->UnaryFunction).
(UnitOfTemperature-->NonCompositeUnitOfMeasure).
(UnitOfVolume-->CompositeUnitOfMeasure).
(ValidDeductiveArgument-->DeductiveArgument).
(VariableArityRelation-->Relation).
(Vehicle-->TransportationDevice).
(Verb-->Word).
(VerbPhrase-->Phrase).
(Vertebrate-->Animal).
(ViolentContest-->Contest).
(Virus-->Microorganism).
(VisualAttribute-->PerceptualAttribute).
(Vitamin-->Nutrient).
(VolumeMeasure-->FunctionQuantity).
(Voting-->Deciding).
(Walking-->Ambulating).
(War-->ViolentContest).
(WarmBloodedVertebrate-->Vertebrate).
(Water-->CompoundSubstance).
(WaterArea-->GeographicArea).
(WaterCloud-->Cloud).
(WaterMotion-->LiquidMotion).
(Weapon-->Device).
(WearableItem-->Artifact).
(WeatherProcess-->Motion).
(Wednesday-->Day).
(Week-->TimeInterval).
(Wetting-->Putting).
(Wind-->GasMotion).
(Woman-->Human).
(Word-->LinguisticExpression).
(Worm-->Invertebrate).
(Writing-->ContentDevelopment).
(Year-->TimeInterval).
rangeSubclass(CutSetFn,GraphPath).
rangeSubclass(DayFn,Day).
subAttribute(Dead,Unconscious).
subrelation(DensityFn,PerFn).
rangeSubclass(EditionFn,ContentBearingObject).
subAttribute(Embryonic,NonFullyFormed).
rangeSubclass(FoodForFn,SelfConnectedObject).
subAttribute(Gas,Fluid).
rangeSubclass(GraphPathFn,GraphPath).
rangeSubclass(HourFn,Hour).
rangeSubclass(IntervalFn,ConstantQuantity).
subAttribute(Larval,NonFullyFormed).
subAttribute(Law,Obligation).
subAttribute(Liquid,Fluid).
rangeSubclass(MakingFn,Object).
rangeSubclass(MinimalCutSetFn,GraphPath).
rangeSubclass(MinuteFn,Minute).
rangeSubclass(MonthFn,Month).
successorAttribute(NonFullyFormed,FullyFormed).
subAttribute(Plasma,Fluid).
rangeSubclass(PowerSetFn,SetOrClass).
subAttribute(Promise,Obligation).
rangeSubclass(RecurrentTimeIntervalFn,TimeInterval).
rangeSubclass(SecondFn,Second).
subrelation(SpeedFn,PerFn).
rangeSubclass(TemporalCompositionFn,TimeInterval).
subAttribute(Wet,Damp).
rangeSubclass(YearFn,Year).
subrelation(abstractCounterpart,represents).
subrelation(age,measure).
subrelation(agent,involvedInEvent).
subrelation(altitude,distance).
subrelation(ancestor,familyRelation).
subrelation(angleOfFigure,geometricPart).
subrelation(attends,experiencer).
subrelation(attribute,property).
subrelation(barometricPressure,measure).
subrelation(before,beforeOrEqual).
subrelation(believes,inScopeOfInterest).
subrelation(bottom,superficialPart).
subrelation(brother,sibling).
subrelation(causes,relatedEvent).
subrelation(changesLocation,moves).
subrelation(completelyFills,partiallyFills).
subrelation(component,part).
subrelation(connectedEngineeringComponents,connected).
subrelation(connectsEngineeringComponents,connects).
subrelation(considers,inScopeOfInterest).
disjointRelation(contains,part).
subrelation(contains,partlyLocated).
subrelation(containsInformation,represents).
disjointRelation(crosses,connected).
subrelation(crosses,traverses).
subrelation(date,time).
subrelation(daughter,parent).
disjointRelation(decreasesLikelihood,independentProbability).
disjointRelation(deprivesNorm,confersNorm).
subrelation(depth,distance).
subrelation(desires,inScopeOfInterest).
subrelation(destination,involvedInEvent).
subrelation(developmentalForm,attribute).
subrelation(direction,involvedInEvent).
subrelation(during,overlapsTemporally).
subrelation(during,temporalPart).
subrelation(element,instance).
subrelation(engineeringSubcomponent,properPart).
subrelation(equivalentContentInstance,subsumesContentInstance).
subrelation(eventLocated,eventPartlyLocated).
subrelation(eventPartlyLocated,involvedInEvent).
subrelation(eventPartlyLocated,partlyLocated).
subrelation(exactlyLocated,located).
subrelation(experiencer,involvedInEvent).
subrelation(familyRelation,relative).
subrelation(father,parent).
subrelation(fills,completelyFills).
subrelation(fills,properlyFills).
subrelation(finishes,temporalPart).
subrelation(geographicSubregion,located).
subrelation(geographicSubregion,properPart).
subrelation(geopoliticalSubdivision,geographicSubregion).
subrelation(grasps,meetsSpatially).
trichotomizingOn(greaterThan,RealNumber).
inverse(greaterThan,lessThan).
trichotomizingOn(greaterThanOrEqualTo,RealNumber).
inverse(greaterThanOrEqualTo,lessThanOrEqualTo).
subrelation(height,linearExtent).
subrelation(home,inhabits).
subrelation(husband,spouse).
inverse(husband,wife).
subrelation(immediateInstance,instance).
subrelation(immediateSubclass,subclass).
disjointRelation(increasesLikelihood,decreasesLikelihood).
disjointRelation(increasesLikelihood,independentProbability).
subrelation(initialList,subList).
subrelation(instrument,patient).
subrelation(interiorPart,part).
subrelation(knows,inScopeOfInterest).
subrelation(length,linearExtent).
trichotomizingOn(lessThan,RealNumber).
trichotomizingOn(lessThanOrEqualTo,RealNumber).
subrelation(linearExtent,measure).
subrelation(located,partlyLocated).
disjointRelation(manner,attribute).
subrelation(manner,property).
disjointRelation(meetsSpatially,overlapsSpatially).
subrelation(member,part).
subrelation(modalAttribute,property).
subrelation(mother,parent).
subrelation(moves,involvedInEvent).
subrelation(mutualAcquaintance,acquaintance).
subrelation(names,refers).
subrelation(needs,inScopeOfInterest).
subrelation(origin,involvedInEvent).
subrelation(overlapsSpatially,connected).
subrelation(parent,familyRelation).
subrelation(partiallyFills,located).
subrelation(path,eventPartlyLocated).
subrelation(patient,involvedInEvent).
subrelation(penetrates,traverses).
subrelation(piece,part).
subrelation(pointOfFigure,geometricPart).
subrelation(properPart,part).
subrelation(properlyFills,partiallyFills).
subrelation(realization,represents).
subrelation(represents,refers).
disjointRelation(resource,instrument).
subrelation(resource,patient).
disjointRelation(resource,result).
disjointRelation(result,instrument).
subrelation(result,patient).
subrelation(sibling,familyRelation).
subrelation(side,superficialPart).
subrelation(sister,sibling).
inverse(smaller,larger).
subrelation(son,parent).
subrelation(spouse,legalRelation).
subrelation(spouse,mutualAcquaintance).
subrelation(spouse,relative).
subrelation(starts,temporalPart).
disjointRelation(stays,home).
subrelation(stays,inhabits).
disjointRelation(subAttribute,successorAttribute).
subrelation(subCollection,part).
subrelation(subOrganization,subCollection).
subrelation(subPlan,subProposition).
subrelation(subset,subclass).
subrelation(subsumedExternalConcept,relatedExternalConcept).
disjointRelation(subsumedExternalConcept,subsumingExternalConcept).
subrelation(subsumingExternalConcept,relatedExternalConcept).
subrelation(superficialPart,part).
subrelation(surface,superficialPart).
subrelation(synonymousExternalConcept,relatedExternalConcept).
disjointRelation(synonymousExternalConcept,subsumedExternalConcept).
disjointRelation(synonymousExternalConcept,subsumingExternalConcept).
subrelation(temporallyBetween,temporallyBetweenOrEqual).
subrelation(top,superficialPart).
subrelation(truth,property).
subrelation(uniqueIdentifier,names).
subrelation(wants,inScopeOfInterest).
subrelation(weight,measure).
subrelation(width,linearExtent).
subrelation(wife,spouse).
partition(Ambulating,Walking,Running).
partition(AnatomicalStructure,AnimalAnatomicalStructure,PlantAnatomicalStructure).
partition(AnatomicalStructure,BodyPart,AbnormalAnatomicalStructure).
exhaustiveAttribute(AnimacyAttribute,Living,Dead).
partition(Animal,Vertebrate,Invertebrate).
partition(Argument,DeductiveArgument,InductiveArgument).
partition(Attribute,InternalAttribute,RelationalAttribute).
partition(ChemicalProcess,ChemicalSynthesis,ChemicalDecomposition).
partition(DeductiveArgument,ValidDeductiveArgument,InvalidDeductiveArgument).
exhaustiveAttribute(DevelopmentalAttribute,FullyFormed,NonFullyFormed).
termFormat(EnglishLanguage,MakingInstrumentalMusic,"instrumental music").
termFormat(EnglishLanguage,MakingMusic,"making music").
termFormat(EnglishLanguage,MakingVocalMusic,"singing").
termFormat(EnglishLanguage,average,"average").
termFormat(EnglishLanguage,comment,"comment").
termFormat(EnglishLanguage,eventLocated,"event located").
termFormat(EnglishLanguage,eventPartlyLocated,"event partly located").
partition(Entity,Physical,Abstract).
partition(GeographicArea,WaterArea,LandArea).
partition(GraphElement,GraphNode,GraphArc).
partition(Human,Man,Woman).
partition(HumanLanguage,NaturalLanguage,ConstructedLanguage).
partition(HumanLanguage,SpokenHumanLanguage,ManualHumanLanguage).
partition(Integer,NegativeInteger,NonnegativeInteger).
partition(Integer,OddInteger,EvenInteger).
partition(LiquidMixture,Solution,Suspension).
comment(MakingMusic,"Changing the old Music to &%MakingMusic to be more consistent with
the verb-form that &%Process seem to take. (09-14-2011)","KJN").
partition(MakingMusic,MakingInstrumentalMusic,MakingVocalMusic).
comment(MakingVocalMusic,"Currently, &%VocalMusic also inherits from &%Speaking.  Changing
this to more general &%Vocalizing.  Acapella groups today use their &%VocalCord to create
music in ways that are more than just speaking. (09-14-2011)","KJN").
partition(OrganicObject,Organism,AnatomicalStructure).
partition(Physical,Object,Process).
partition(PhysicalQuantity,ConstantQuantity,FunctionQuantity).
partition(PsychologicalAttribute,StateOfMind,TraitAttribute).
partition(PureSubstance,CompoundSubstance,ElementalSubstance).
partition(QuantityChange,Increasing,Decreasing).
partition(RealNumber,NegativeRealNumber,NonnegativeRealNumber).
partition(RealNumber,RationalNumber,IrrationalNumber).
partition(Relation,TotalValuedRelation,PartialValuedRelation).
disjointDecomposition(Residence,PermanentResidence,TemporaryResidence).
partition(SetOrClass,Set,Class).
exhaustiveAttribute(SexAttribute,Female,Male).
partition(Substance,PureSubstance,Mixture).
partition(Substance,SyntheticSubstance,NaturalSubstance).
partition(TimePosition,TimeInterval,TimePoint).
partition(TwoDimensionalFigure,OpenTwoDimensionalFigure,ClosedTwoDimensionalFigure).
partition(UnitOfMeasure,CompositeUnitOfMeasure,NonCompositeUnitOfMeasure).
disjointDecomposition(ColdBloodedVertebrate,Amphibian,Fish,Reptile).
disjointDecomposition(Invertebrate,Worm,Mollusk,Arthropod).
disjointDecomposition(Language,AnimalLanguage,HumanLanguage,ComputerLanguage).
disjointDecomposition(NonFloweringPlant,Alga,Fern,Moss).
partition(Number,RealNumber,ImaginaryNumber,ComplexNumber).
disjointDecomposition(Nutrient,Protein,Carbohydrate,Vitamin).
disjointDecomposition(Phrase,VerbPhrase,NounPhrase,PrepositionalPhrase).
disjointDecomposition(Primate,Ape,Monkey,Hominid).
partition(Relation,Predicate,Function,List).
disjointDecomposition(Tissue,Bone,Muscle,FatTissue).
disjointDecomposition(Arthropod,Arachnid,Myriapod,Insect,Crustacean).
partition(GeometricFigure,GeometricPoint,OneDimensionalFigure,TwoDimensionalFigure,ThreeDimensionalFigure).
partition(Organism,Animal,Plant,Fungus,Microorganism).
disjointDecomposition(Abstract,Quantity,Attribute,SetOrClass,Relation,Proposition).
disjointDecomposition(Mammal,AquaticMammal,HoofedMammal,Marsupial,Rodent,Primate).
exhaustiveAttribute(PhysicalState,Solid,Fluid,Liquid,Gas,Plasma).
disjointDecomposition(Relation,BinaryRelation,TernaryRelation,QuaternaryRelation,QuintaryRelation,VariableArityRelation).
partition(Word,Noun,Verb,Adjective,Adverb,ParticleWord).
partition(Communication,Stating,Supposing,Directing,Committing,Expressing,Declaring).
equal(MeasureFn(#NUMBER,Amu),MeasureFn(MultiplicationFn(#NUMBER,"1.6605402"),Gram)).
equal(MeasureFn(#NUMBER,BritishThermalUnit),MeasureFn(MultiplicationFn(#NUMBER,"1055.0559"),Joule)).
equal(MeasureFn(#NUMBER,Calorie),MeasureFn(MultiplicationFn(#NUMBER,"4.1868"),Joule)).
equal(MeasureFn(#NUMBER,CelsiusDegree),MeasureFn(SubtractionFn(#NUMBER,"273.15"),KelvinDegree)).
equal(MeasureFn(#NUMBER,Centimeter),MeasureFn(MultiplicationFn(#NUMBER,"0.01"),Meter)).
equal(MeasureFn(#NUMBER,ElectronVolt),MeasureFn(MultiplicationFn(#NUMBER,"1.6021774"),Joule)).
equal(MeasureFn(#NUMBER,EuroCent),MeasureFn(MultiplicationFn(#NUMBER,"0.01"),EuroDollar)).
equal(MeasureFn(#NUMBER,FootLength),MeasureFn(MultiplicationFn(#NUMBER,"0.3048"),Meter)).
equal(MeasureFn(#NUMBER,Inch),MeasureFn(MultiplicationFn(#NUMBER,"0.0254"),Meter)).
equal(MeasureFn(#NUMBER,Mile),MeasureFn(MultiplicationFn(#NUMBER,"1609.344"),Meter)).
equal(MeasureFn(#NUMBER,Millimeter),MeasureFn(MultiplicationFn(#NUMBER,"0.001"),Meter)).
equal(MeasureFn(#NUMBER,PoundForce),MeasureFn(MultiplicationFn(#NUMBER,"4.448222"),Newton)).
equal(MeasureFn(#NUMBER,PoundMass),MeasureFn(MultiplicationFn(#NUMBER,"453.59238"),Gram)).
equal(MeasureFn(#NUMBER,RankineDegree),MeasureFn(MultiplicationFn(#NUMBER,"1.8"),KelvinDegree)).
equal(MeasureFn(#NUMBER,Slug),MeasureFn(MultiplicationFn(#NUMBER,"14593.9"),Gram)).
equal(MeasureFn(#NUMBER,UnitedKingdomGallon),MeasureFn(MultiplicationFn(#NUMBER,"4.54609"),Liter)).
equal(MeasureFn(#NUMBER,UnitedStatesCent),MeasureFn(MultiplicationFn(#NUMBER,"0.01"),UnitedStatesDollar)).
equal(MeasureFn(#NUMBER,UnitedStatesGallon),MeasureFn(MultiplicationFn(#NUMBER,"3.7854118"),Liter)).
forall("@ROW"(#ITEM),initialList(ListFn("@ROW"),ListFn("@ROW",#ITEM))).
forall("@ROW"(#ITEM),equal(ListOrderFn(ListFn("@ROW",#ITEM),ListLengthFn(ListFn("@ROW",#ITEM))),#ITEM)).
forall("@ROW"(#ITEM),equal(ListLengthFn(ListFn("@ROW",#ITEM)),SuccessorFn(ListLengthFn(ListFn("@ROW"))))).
(Above-->[AntiSymmetricPositionalAttribute]).
(Above-->[PositionalAttribute]).
(AbsoluteValueFn-->[TotalValuedRelation]).
(AbsoluteValueFn-->[UnaryFunction]).
(AdditionFn-->[AssociativeFunction]).
(AdditionFn-->[BinaryFunction]).
(AdditionFn-->[CommutativeFunction]).
(AdditionFn-->[RelationExtendedToQuantities]).
(AdditionFn-->[TotalValuedRelation]).
(Adjacent-->[SymmetricPositionalAttribute]).
(Ampere-->[CompositeUnitOfMeasure]).
(Ampere-->[SystemeInternationalUnit]).
(Amu-->[UnitOfMass]).
(Angstrom-->[UnitOfLength]).
(AngularDegree-->[UnitOfAngularMeasure]).
(Asleep-->[ConsciousnessAttribute]).
(AssignmentFn-->[Function]).
(AssignmentFn-->[VariableArityRelation]).
(AtomGram-->[UnitOfMass]).
(Audible-->[SoundAttribute]).
(Awake-->[ConsciousnessAttribute]).
(BackFn-->[AsymmetricRelation]).
(BackFn-->[IrreflexiveRelation]).
(BackFn-->[PartialValuedRelation]).
(BackFn-->[SpatialRelation]).
(BackFn-->[UnaryFunction]).
(Becquerel-->[CompositeUnitOfMeasure]).
(Becquerel-->[SystemeInternationalUnit]).
(BeginFn-->[TemporalRelation]).
(BeginFn-->[TotalValuedRelation]).
(BeginFn-->[UnaryFunction]).
(BeginNodeFn-->[TotalValuedRelation]).
(BeginNodeFn-->[UnaryFunction]).
(Below-->[AntiSymmetricPositionalAttribute]).
(Below-->[PositionalAttribute]).
(Bit-->[UnitOfInformation]).
(Black-->[PrimaryColor]).
(Blue-->[PrimaryColor]).
(BritishThermalUnit-->[CompositeUnitOfMeasure]).
(Byte-->[UnitOfInformation]).
(Calorie-->[CompositeUnitOfMeasure]).
(Candela-->[CompositeUnitOfMeasure]).
(Candela-->[SystemeInternationalUnit]).
(CardinalityFn-->[AsymmetricRelation]).
(CardinalityFn-->[TotalValuedRelation]).
(CardinalityFn-->[UnaryFunction]).
(CeilingFn-->[TotalValuedRelation]).
(CeilingFn-->[UnaryFunction]).
(CelsiusDegree-->[SystemeInternationalUnit]).
(CelsiusDegree-->[UnitOfTemperature]).
(CenterOfCircleFn-->[TotalValuedRelation]).
(CenterOfCircleFn-->[UnaryFunction]).
(Centimeter-->[UnitOfLength]).
(CentralTimeZone-->[TimeZone]).
(ComplementFn-->[TotalValuedRelation]).
(ComplementFn-->[UnaryFunction]).
(CoordinatedUniversalTimeZone-->[TimeZone]).
(CosineFn-->[TotalValuedRelation]).
(CosineFn-->[UnaryFunction]).
(Coulomb-->[CompositeUnitOfMeasure]).
(Coulomb-->[SystemeInternationalUnit]).
(Cup-->[UnitOfVolume]).
(CutSetFn-->[UnaryFunction]).
(Damp-->[SaturationAttribute]).
(DayDuration-->[UnitOfDuration]).
(DayFn-->[BinaryFunction]).
(DayFn-->[PartialValuedRelation]).
(DayFn-->[TemporalRelation]).
(Dead-->[AnimacyAttribute]).
(DenominatorFn-->[TotalValuedRelation]).
(DenominatorFn-->[UnaryFunction]).
(DensityFn-->[BinaryFunction]).
(DensityFn-->[TotalValuedRelation]).
(DivisionFn-->[AssociativeFunction]).
(DivisionFn-->[BinaryFunction]).
(DivisionFn-->[PartialValuedRelation]).
(DivisionFn-->[RelationExtendedToQuantities]).
(Dry-->[SaturationAttribute]).
(East-->[DirectionalAttribute]).
(EasternTimeZone-->[TimeZone]).
(EditionFn-->[BinaryFunction]).
(EditionFn-->[PartialValuedRelation]).
(ElectronVolt-->[CompositeUnitOfMeasure]).
(EndFn-->[TemporalRelation]).
(EndFn-->[TotalValuedRelation]).
(EndFn-->[UnaryFunction]).
(EndNodeFn-->[TotalValuedRelation]).
(EndNodeFn-->[UnaryFunction]).
(EnglishLanguage-->[NaturalLanguage]).
(EnglishLanguage-->[SpokenHumanLanguage]).
(EuroCent-->[UnitOfCurrency]).
(EuroDollar-->[UnitOfCurrency]).
(ExponentiationFn-->[BinaryFunction]).
(ExponentiationFn-->[RelationExtendedToQuantities]).
(ExponentiationFn-->[TotalValuedRelation]).
(ExtensionFn-->[PartialValuedRelation]).
(ExtensionFn-->[UnaryFunction]).
(FahrenheitDegree-->[UnitOfTemperature]).
(False-->[TruthValue]).
(Farad-->[CompositeUnitOfMeasure]).
(Farad-->[SystemeInternationalUnit]).
(Female-->[SexAttribute]).
(Fillable-->[ShapeAttribute]).
(Flammable-->[PhysicalAttribute]).
(FloorFn-->[TotalValuedRelation]).
(FloorFn-->[UnaryFunction]).
(Fluid-->[PhysicalState]).
(FoodForFn-->[UnaryFunction]).
(FootLength-->[UnitOfLength]).
(FrontFn-->[AsymmetricRelation]).
(FrontFn-->[IrreflexiveRelation]).
(FrontFn-->[PartialValuedRelation]).
(FrontFn-->[SpatialRelation]).
(FrontFn-->[UnaryFunction]).
(FullyFormed-->[DevelopmentalAttribute]).
(FutureFn-->[TemporalRelation]).
(FutureFn-->[TotalValuedRelation]).
(FutureFn-->[UnaryFunction]).
(Gas-->[PhysicalState]).
(GeneralizedIntersectionFn-->[TotalValuedRelation]).
(GeneralizedIntersectionFn-->[UnaryFunction]).
(GeneralizedUnionFn-->[TotalValuedRelation]).
(GeneralizedUnionFn-->[UnaryFunction]).
(GigaFn-->[UnitOfMeasureMultiplier]).
(GovernmentFn-->[PartialValuedRelation]).
(GovernmentFn-->[UnaryFunction]).
(Gram-->[SystemeInternationalUnit]).
(Gram-->[UnitOfMass]).
(GraphPathFn-->[BinaryFunction]).
(GraphPathFn-->[TotalValuedRelation]).
(Gray-->[CompositeUnitOfMeasure]).
(Gray-->[SystemeInternationalUnit]).
(GreatestCommonDivisorFn-->[Function]).
(GreatestCommonDivisorFn-->[PartialValuedRelation]).
(GreatestCommonDivisorFn-->[VariableArityRelation]).
(Henry-->[CompositeUnitOfMeasure]).
(Henry-->[SystemeInternationalUnit]).
(Hertz-->[SystemeInternationalUnit]).
(Hertz-->[UnitOfFrequency]).
(HoleHostFn-->[AsymmetricRelation]).
(HoleHostFn-->[SpatialRelation]).
(HoleHostFn-->[TotalValuedRelation]).
(HoleHostFn-->[UnaryFunction]).
(HoleSkinFn-->[AsymmetricRelation]).
(HoleSkinFn-->[SpatialRelation]).
(HoleSkinFn-->[TotalValuedRelation]).
(HoleSkinFn-->[UnaryFunction]).
(Horizontal-->[PositionalAttribute]).
(Horsepower-->[CompositeUnitOfMeasure]).
(HourDuration-->[UnitOfDuration]).
(HourFn-->[BinaryFunction]).
(HourFn-->[PartialValuedRelation]).
(HourFn-->[TemporalRelation]).
(Illuminated-->[VisualAttribute]).
(ImaginaryPartFn-->[TotalValuedRelation]).
(ImaginaryPartFn-->[UnaryFunction]).
(ImmediateFamilyFn-->[TotalValuedRelation]).
(ImmediateFamilyFn-->[UnaryFunction]).
(ImmediateFutureFn-->[TemporalRelation]).
(ImmediateFutureFn-->[TotalValuedRelation]).
(ImmediateFutureFn-->[UnaryFunction]).
(ImmediatePastFn-->[TemporalRelation]).
(ImmediatePastFn-->[TotalValuedRelation]).
(ImmediatePastFn-->[UnaryFunction]).
(Inaudible-->[SoundAttribute]).
(Inch-->[UnitOfLength]).
(InchMercury-->[UnitOfAtmosphericPressure]).
(InitialNodeFn-->[PartialValuedRelation]).
(InitialNodeFn-->[UnaryFunction]).
(IntegerSquareRootFn-->[PartialValuedRelation]).
(IntegerSquareRootFn-->[UnaryFunction]).
(IntersectionFn-->[BinaryFunction]).
(IntersectionFn-->[TotalValuedRelation]).
(IntervalFn-->[BinaryFunction]).
(IntervalFn-->[TotalValuedRelation]).
(Joule-->[CompositeUnitOfMeasure]).
(Joule-->[SystemeInternationalUnit]).
(KappaFn-->[BinaryFunction]).
(KappaFn-->[PartialValuedRelation]).
(KelvinDegree-->[SystemeInternationalUnit]).
(KelvinDegree-->[UnitOfTemperature]).
(KiloByte-->[UnitOfInformation]).
(KiloFn-->[UnitOfMeasureMultiplier]).
(Kilogram-->[SystemeInternationalUnit]).
(Kilogram-->[UnitOfMass]).
(Kilometer-->[UnitOfLength]).
(Law-->[DeonticAttribute]).
(LeastCommonMultipleFn-->[Function]).
(LeastCommonMultipleFn-->[PartialValuedRelation]).
(LeastCommonMultipleFn-->[VariableArityRelation]).
(Left-->[AntiSymmetricPositionalAttribute]).
(Left-->[PositionalAttribute]).
(Likely-->[ProbabilityAttribute]).
(Liquid-->[PhysicalState]).
(ListConcatenateFn-->[BinaryFunction]).
(ListConcatenateFn-->[TotalValuedRelation]).
(ListFn-->[Function]).
(ListFn-->[VariableArityRelation]).
(ListLengthFn-->[TotalValuedRelation]).
(ListLengthFn-->[UnaryFunction]).
(ListOrderFn-->[BinaryFunction]).
(ListOrderFn-->[PartialValuedRelation]).
(Liter-->[UnitOfVolume]).
(Living-->[AnimacyAttribute]).
(LogFn-->[BinaryFunction]).
(Lumen-->[CompositeUnitOfMeasure]).
(Lumen-->[SystemeInternationalUnit]).
(Lux-->[CompositeUnitOfMeasure]).
(Lux-->[SystemeInternationalUnit]).
(MagnitudeFn-->[TotalValuedRelation]).
(MagnitudeFn-->[UnaryFunction]).
(MakingFn-->[UnaryFunction]).
(Male-->[SexAttribute]).
(MaxFn-->[AssociativeFunction]).
(MaxFn-->[BinaryFunction]).
(MaxFn-->[CommutativeFunction]).
(MaxFn-->[RelationExtendedToQuantities]).
(MaxFn-->[TotalValuedRelation]).
(MaximalWeightedPathFn-->[BinaryFunction]).
(MaximalWeightedPathFn-->[TotalValuedRelation]).
(MeasureFn-->[BinaryFunction]).
(MeasureFn-->[TotalValuedRelation]).
(MegaByte-->[UnitOfInformation]).
(MegaFn-->[UnitOfMeasureMultiplier]).
(MereologicalDifferenceFn-->[BinaryFunction]).
(MereologicalDifferenceFn-->[SpatialRelation]).
(MereologicalDifferenceFn-->[TotalValuedRelation]).
(MereologicalProductFn-->[BinaryFunction]).
(MereologicalProductFn-->[SpatialRelation]).
(MereologicalProductFn-->[TotalValuedRelation]).
(MereologicalSumFn-->[BinaryFunction]).
(MereologicalSumFn-->[SpatialRelation]).
(MereologicalSumFn-->[TotalValuedRelation]).
(Meter-->[SystemeInternationalUnit]).
(Meter-->[UnitOfLength]).
(MicroFn-->[UnitOfMeasureMultiplier]).
(Mile-->[UnitOfLength]).
(MilliFn-->[UnitOfMeasureMultiplier]).
(Millimeter-->[UnitOfLength]).
(MinFn-->[AssociativeFunction]).
(MinFn-->[BinaryFunction]).
(MinFn-->[CommutativeFunction]).
(MinFn-->[RelationExtendedToQuantities]).
(MinFn-->[TotalValuedRelation]).
(MinimalCutSetFn-->[UnaryFunction]).
(MinimalWeightedPathFn-->[BinaryFunction]).
(MinimalWeightedPathFn-->[TotalValuedRelation]).
(MinuteDuration-->[UnitOfDuration]).
(MinuteFn-->[BinaryFunction]).
(MinuteFn-->[PartialValuedRelation]).
(MinuteFn-->[TemporalRelation]).
(MmMercury-->[UnitOfAtmosphericPressure]).
(Mole-->[SystemeInternationalUnit]).
(Mole-->[UnitOfMass]).
(Monochromatic-->[ColorAttribute]).
(MonthDuration-->[UnitOfDuration]).
(MonthFn-->[BinaryFunction]).
(MonthFn-->[PartialValuedRelation]).
(MonthFn-->[TemporalRelation]).
(MountainTimeZone-->[TimeZone]).
(MultiplicationFn-->[AssociativeFunction]).
(MultiplicationFn-->[BinaryFunction]).
(MultiplicationFn-->[CommutativeFunction]).
(MultiplicationFn-->[RelationExtendedToQuantities]).
(MultiplicationFn-->[TotalValuedRelation]).
(NanoFn-->[UnitOfMeasureMultiplier]).
(Near-->[SymmetricPositionalAttribute]).
(Necessity-->[AlethicAttribute]).
(NegativeInfinity-->[TimePoint]).
(Newton-->[CompositeUnitOfMeasure]).
(Newton-->[SystemeInternationalUnit]).
(NonFullyFormed-->[DevelopmentalAttribute]).
(North-->[DirectionalAttribute]).
(NullList-->[List]).
(NumberE-->[PositiveRealNumber]).
(NumeratorFn-->[TotalValuedRelation]).
(NumeratorFn-->[UnaryFunction]).
(Obligation-->[DeonticAttribute]).
(Ohm-->[CompositeUnitOfMeasure]).
(Ohm-->[SystemeInternationalUnit]).
(On-->[AntiSymmetricPositionalAttribute]).
(Ounce-->[UnitOfVolume]).
(PacificTimeZone-->[TimeZone]).
(Pascal-->[CompositeUnitOfMeasure]).
(Pascal-->[SystemeInternationalUnit]).
(PastFn-->[TemporalRelation]).
(PastFn-->[TotalValuedRelation]).
(PastFn-->[UnaryFunction]).
(PathWeightFn-->[UnaryFunction]).
(PerFn-->[BinaryFunction]).
(PerFn-->[TotalValuedRelation]).
(Permission-->[DeonticAttribute]).
(Pi-->[PositiveRealNumber]).
(PicoFn-->[UnitOfMeasureMultiplier]).
(Pint-->[UnitOfVolume]).
(Plasma-->[PhysicalState]).
(Pliable-->[InternalAttribute]).
(Polychromatic-->[ColorAttribute]).
(PositiveInfinity-->[TimePoint]).
(Possibility-->[AlethicAttribute]).
(PoundForce-->[CompositeUnitOfMeasure]).
(PoundMass-->[UnitOfMass]).
(PowerSetFn-->[TotalValuedRelation]).
(PowerSetFn-->[UnaryFunction]).
(PredecessorFn-->[TotalValuedRelation]).
(PredecessorFn-->[UnaryFunction]).
(PremisesFn-->[TotalValuedRelation]).
(PremisesFn-->[UnaryFunction]).
(ProbabilityFn-->[AsymmetricRelation]).
(ProbabilityFn-->[ProbabilityRelation]).
(ProbabilityFn-->[TotalValuedRelation]).
(ProbabilityFn-->[UnaryFunction]).
(Prohibition-->[DeonticAttribute]).
(PropertyFn-->[TotalValuedRelation]).
(PropertyFn-->[UnaryFunction]).
(Prostrate-->[BodyPosition]).
(Quart-->[UnitOfVolume]).
(Radian-->[SystemeInternationalUnit]).
(Radian-->[UnitOfAngularMeasure]).
(RankineDegree-->[UnitOfTemperature]).
(RationalNumberFn-->[UnaryFunction]).
(RealNumberFn-->[UnaryFunction]).
(ReciprocalFn-->[RelationExtendedToQuantities]).
(ReciprocalFn-->[TotalValuedRelation]).
(ReciprocalFn-->[UnaryFunction]).
(RecurrentTimeIntervalFn-->[BinaryFunction]).
(RecurrentTimeIntervalFn-->[PartialValuedRelation]).
(RecurrentTimeIntervalFn-->[TemporalRelation]).
(Red-->[PrimaryColor]).
(RelativeComplementFn-->[BinaryFunction]).
(RelativeComplementFn-->[TotalValuedRelation]).
(RelativeTimeFn-->[BinaryFunction]).
(RelativeTimeFn-->[TemporalRelation]).
(RelativeTimeFn-->[TotalValuedRelation]).
(RemainderFn-->[BinaryFunction]).
(RemainderFn-->[PartialValuedRelation]).
(RemainderFn-->[RelationExtendedToQuantities]).
(Right-->[AntiSymmetricPositionalAttribute]).
(Right-->[PositionalAttribute]).
(Rigid-->[InternalAttribute]).
(Rough-->[TextureAttribute]).
(RoundFn-->[RelationExtendedToQuantities]).
(RoundFn-->[TotalValuedRelation]).
(RoundFn-->[UnaryFunction]).
(SecondDuration-->[SystemeInternationalUnit]).
(SecondDuration-->[UnitOfDuration]).
(SecondFn-->[BinaryFunction]).
(SecondFn-->[PartialValuedRelation]).
(SecondFn-->[TemporalRelation]).
(Siemens-->[CompositeUnitOfMeasure]).
(Siemens-->[SystemeInternationalUnit]).
(Sievert-->[CompositeUnitOfMeasure]).
(Sievert-->[SystemeInternationalUnit]).
(SignumFn-->[TotalValuedRelation]).
(SignumFn-->[UnaryFunction]).
(SineFn-->[TotalValuedRelation]).
(SineFn-->[UnaryFunction]).
(Sitting-->[BodyPosition]).
(Slug-->[UnitOfMass]).
(Smooth-->[TextureAttribute]).
(Solid-->[PhysicalState]).
(South-->[DirectionalAttribute]).
(SpeedFn-->[BinaryFunction]).
(SpeedFn-->[TotalValuedRelation]).
(SquareRootFn-->[UnaryFunction]).
(Standing-->[BodyPosition]).
(Steradian-->[SystemeInternationalUnit]).
(Steradian-->[UnitOfAngularMeasure]).
(SubtractionFn-->[AssociativeFunction]).
(SubtractionFn-->[BinaryFunction]).
(SubtractionFn-->[RelationExtendedToQuantities]).
(SubtractionFn-->[TotalValuedRelation]).
(SuccessorFn-->[TotalValuedRelation]).
(SuccessorFn-->[UnaryFunction]).
(TangentFn-->[TotalValuedRelation]).
(TangentFn-->[UnaryFunction]).
(TemporalCompositionFn-->[BinaryFunction]).
(TemporalCompositionFn-->[TemporalRelation]).
(TemporalCompositionFn-->[TotalValuedRelation]).
(TeraFn-->[UnitOfMeasureMultiplier]).
(TerminalNodeFn-->[PartialValuedRelation]).
(TerminalNodeFn-->[UnaryFunction]).
(Tesla-->[CompositeUnitOfMeasure]).
(Tesla-->[SystemeInternationalUnit]).
(TimeIntervalFn-->[BinaryFunction]).
(TimeIntervalFn-->[PartialValuedRelation]).
(TimeIntervalFn-->[TemporalRelation]).
(True-->[TruthValue]).
(Unconscious-->[ConsciousnessAttribute]).
(Unemployed-->[SocialRole]).
(Unilluminated-->[VisualAttribute]).
(UnionFn-->[BinaryFunction]).
(UnionFn-->[TotalValuedRelation]).
(UnitFn-->[TotalValuedRelation]).
(UnitFn-->[UnaryFunction]).
(UnitedKingdomGallon-->[UnitOfVolume]).
(UnitedStatesCent-->[UnitOfCurrency]).
(UnitedStatesDollar-->[UnitOfCurrency]).
(UnitedStatesGallon-->[UnitOfVolume]).
(Unlikely-->[ProbabilityAttribute]).
(VelocityFn-->[QuaternaryFunction]).
(VelocityFn-->[TotalValuedRelation]).
(Vertical-->[PositionalAttribute]).
(Volt-->[CompositeUnitOfMeasure]).
(Volt-->[SystemeInternationalUnit]).
(Watt-->[CompositeUnitOfMeasure]).
(Watt-->[SystemeInternationalUnit]).
(WealthFn-->[TotalValuedRelation]).
(WealthFn-->[UnaryFunction]).
(Weber-->[CompositeUnitOfMeasure]).
(Weber-->[SystemeInternationalUnit]).
(WeekDuration-->[UnitOfDuration]).
(West-->[DirectionalAttribute]).
(Wet-->[SaturationAttribute]).
(WhenFn-->[TemporalRelation]).
(WhenFn-->[TotalValuedRelation]).
(WhenFn-->[UnaryFunction]).
(WhereFn-->[BinaryFunction]).
(WhereFn-->[SpatialRelation]).
(WhereFn-->[TotalValuedRelation]).
(White-->[PrimaryColor]).
(YearDuration-->[UnitOfDuration]).
(YearFn-->[TemporalRelation]).
(YearFn-->[TotalValuedRelation]).
(YearFn-->[UnaryFunction]).
(Yellow-->[PrimaryColor]).
(abstractCounterpart-->[BinaryPredicate]).
(acquaintance-->[BinaryPredicate]).
(age-->[SingleValuedRelation]).
(agent-->[CaseRole]).
(agent-->[PartialValuedRelation]).
(altitude-->[PartialValuedRelation]).
(altitude-->[SingleValuedRelation]).
(ancestor-->[IrreflexiveRelation]).
(ancestor-->[TotalValuedRelation]).
(ancestor-->[TransitiveRelation]).
(angleOfFigure-->[BinaryPredicate]).
(angularMeasure-->[BinaryPredicate]).
(angularMeasure-->[TotalValuedRelation]).
(arcWeight-->[BinaryPredicate]).
(arcWeight-->[SingleValuedRelation]).
(atomicNumber-->[AsymmetricRelation]).
(atomicNumber-->[BinaryPredicate]).
(atomicNumber-->[PartialValuedRelation]).
(attends-->[CaseRole]).
(attends-->[PartialValuedRelation]).
(attribute-->[AsymmetricRelation]).
(attribute-->[IrreflexiveRelation]).
(attribute-->[TotalValuedRelation]).
(authors-->[AsymmetricRelation]).
(authors-->[BinaryPredicate]).
(average-->[BinaryPredicate]).
(average-->[PartialValuedRelation]).
(average-->[SingleValuedRelation]).
(barometricPressure-->[AsymmetricRelation]).
(barometricPressure-->[BinaryPredicate]).
(before-->[IrreflexiveRelation]).
(before-->[TemporalRelation]).
(before-->[TransitiveRelation]).
(beforeOrEqual-->[BinaryPredicate]).
(beforeOrEqual-->[PartialOrderingRelation]).
(beforeOrEqual-->[TemporalRelation]).
(believes-->[BinaryPredicate]).
(believes-->[PropositionalAttitude]).
(between-->[SpatialRelation]).
(between-->[TernaryPredicate]).
(betweenOnPath-->[QuaternaryPredicate]).
(betweenOnPath-->[SpatialRelation]).
(boilingPoint-->[BinaryPredicate]).
(bottom-->[BinaryPredicate]).
(brother-->[IrreflexiveRelation]).
(brother-->[PartialValuedRelation]).
(brother-->[TransitiveRelation]).
(capability-->[TernaryPredicate]).
(causes-->[AsymmetricRelation]).
(causes-->[BinaryPredicate]).
(causesProposition-->[AsymmetricRelation]).
(causesProposition-->[BinaryPredicate]).
(causesSubclass-->[AsymmetricRelation]).
(causesSubclass-->[BinaryPredicate]).
(changesLocation-->[CaseRole]).
(changesLocation-->[TotalValuedRelation]).
(citizen-->[AsymmetricRelation]).
(citizen-->[BinaryPredicate]).
(closedOn-->[AsymmetricRelation]).
(closedOn-->[BinaryPredicate]).
(comment-->[TernaryPredicate]).
(completelyFills-->[AsymmetricRelation]).
(conclusion-->[BinaryPredicate]).
(conclusion-->[SingleValuedRelation]).
(conclusion-->[TotalValuedRelation]).
(conditionalProbability-->[ProbabilityRelation]).
(conditionalProbability-->[TernaryPredicate]).
(confersNorm-->[TernaryPredicate]).
(confersObligation-->[TernaryPredicate]).
(confersRight-->[TernaryPredicate]).
(connected-->[BinaryPredicate]).
(connected-->[ReflexiveRelation]).
(connected-->[SpatialRelation]).
(connected-->[SymmetricRelation]).
(connectedEngineeringComponents-->[IrreflexiveRelation]).
(connectedEngineeringComponents-->[PartialValuedRelation]).
(connectedEngineeringComponents-->[SymmetricRelation]).
(connects-->[SpatialRelation]).
(connects-->[TernaryPredicate]).
(considers-->[BinaryPredicate]).
(considers-->[PropositionalAttitude]).
(consistent-->[BinaryPredicate]).
(consistent-->[SymmetricRelation]).
(contains-->[AsymmetricRelation]).
(contains-->[PartialValuedRelation]).
(contains-->[SpatialRelation]).
(containsInformation-->[AsymmetricRelation]).
(containsInformation-->[BinaryPredicate]).
(contraryAttribute-->[Predicate]).
(contraryAttribute-->[VariableArityRelation]).
(cooccur-->[BinaryPredicate]).
(cooccur-->[EquivalenceRelation]).
(cooccur-->[TemporalRelation]).
(copy-->[BinaryPredicate]).
(copy-->[EquivalenceRelation]).
(crosses-->[AsymmetricRelation]).
(crosses-->[TransitiveRelation]).
(date-->[AsymmetricRelation]).
(date-->[BinaryPredicate]).
(date-->[SingleValuedRelation]).
(decreasesLikelihood-->[BinaryPredicate]).
(decreasesLikelihood-->[IrreflexiveRelation]).
(decreasesLikelihood-->[ProbabilityRelation]).
(deprivesNorm-->[TernaryPredicate]).
(depth-->[SingleValuedRelation]).
(desires-->[BinaryPredicate]).
(desires-->[PropositionalAttitude]).
(destination-->[CaseRole]).
(destination-->[PartialValuedRelation]).
(developmentalForm-->[AsymmetricRelation]).
(developmentalForm-->[BinaryPredicate]).
(developmentalForm-->[TransitiveRelation]).
(diameter-->[BinaryPredicate]).
(diameter-->[SingleValuedRelation]).
(diameter-->[TotalValuedRelation]).
(direction-->[CaseRole]).
(direction-->[PartialValuedRelation]).
(disjoint-->[BinaryPredicate]).
(disjoint-->[SymmetricRelation]).
(disjointDecomposition-->[Predicate]).
(disjointDecomposition-->[VariableArityRelation]).
(disjointRelation-->[BinaryPredicate]).
(disjointRelation-->[IrreflexiveRelation]).
(disjointRelation-->[PartialValuedRelation]).
(distance-->[SingleValuedRelation]).
(distance-->[SpatialRelation]).
(distance-->[TernaryPredicate]).
(distance-->[TotalValuedRelation]).
(distributes-->[BinaryPredicate]).
(documentation-->[TernaryPredicate]).
(domain-->[TernaryPredicate]).
(domainSubclass-->[TernaryPredicate]).
(duration-->[AsymmetricRelation]).
(duration-->[BinaryPredicate]).
(duration-->[TotalValuedRelation]).
(during-->[IrreflexiveRelation]).
(during-->[TransitiveRelation]).
(earlier-->[BinaryPredicate]).
(earlier-->[IrreflexiveRelation]).
(earlier-->[TemporalRelation]).
(earlier-->[TotalValuedRelation]).
(earlier-->[TransitiveRelation]).
(editor-->[AsymmetricRelation]).
(editor-->[BinaryPredicate]).
(element-->[AsymmetricRelation]).
(element-->[BinaryPredicate]).
(employs-->[BinaryPredicate]).
(entails-->[BinaryPredicate]).
(equal-->[BinaryPredicate]).
(equal-->[EquivalenceRelation]).
(equal-->[RelationExtendedToQuantities]).
(equivalenceRelationOn-->[AsymmetricRelation]).
(equivalenceRelationOn-->[BinaryPredicate]).
(equivalentContentClass-->[EquivalenceRelation]).
(equivalentContentInstance-->[EquivalenceRelation]).
(eventLocated-->[CaseRole]).
(eventLocated-->[TotalValuedRelation]).
(eventPartlyLocated-->[CaseRole]).
(eventPartlyLocated-->[PartialValuedRelation]).
(exhaustiveAttribute-->[Predicate]).
(exhaustiveAttribute-->[VariableArityRelation]).
(exhaustiveDecomposition-->[Predicate]).
(exhaustiveDecomposition-->[VariableArityRelation]).
(experiencer-->[CaseRole]).
(experiencer-->[PartialValuedRelation]).
(exploits-->[AsymmetricRelation]).
(exploits-->[BinaryPredicate]).
(expressedInLanguage-->[AsymmetricRelation]).
(expressedInLanguage-->[BinaryPredicate]).
(externalImage-->[BinaryPredicate]).
(faces-->[BinaryPredicate]).
(familyRelation-->[BinaryPredicate]).
(father-->[PartialValuedRelation]).
(father-->[SingleValuedRelation]).
(fills-->[AsymmetricRelation]).
(finishes-->[IrreflexiveRelation]).
(finishes-->[TemporalRelation]).
(finishes-->[TotalValuedRelation]).
(finishes-->[TransitiveRelation]).
(format-->[TernaryPredicate]).
(frequency-->[AsymmetricRelation]).
(frequency-->[BinaryPredicate]).
(geographicSubregion-->[AsymmetricRelation]).
(geographicSubregion-->[BinaryPredicate]).
(geographicSubregion-->[TransitiveRelation]).
(geometricDistance-->[SingleValuedRelation]).
(geometricDistance-->[TernaryPredicate]).
(geometricDistance-->[TotalValuedRelation]).
(geometricPart-->[BinaryPredicate]).
(geometricPart-->[PartialOrderingRelation]).
(geopoliticalSubdivision-->[AsymmetricRelation]).
(geopoliticalSubdivision-->[TransitiveRelation]).
(graphMeasure-->[BinaryPredicate]).
(graphPart-->[AsymmetricRelation]).
(graphPart-->[BinaryPredicate]).
(graphPart-->[IrreflexiveRelation]).
(graphPart-->[TotalValuedRelation]).
(greaterThan-->[BinaryPredicate]).
(greaterThan-->[IrreflexiveRelation]).
(greaterThan-->[RelationExtendedToQuantities]).
(greaterThan-->[TotalValuedRelation]).
(greaterThan-->[TransitiveRelation]).
(greaterThanByQuality-->[TernaryPredicate]).
(greaterThanOrEqualTo-->[BinaryPredicate]).
(greaterThanOrEqualTo-->[PartialOrderingRelation]).
(greaterThanOrEqualTo-->[RelationExtendedToQuantities]).
(hasPurpose-->[AsymmetricRelation]).
(hasPurpose-->[BinaryPredicate]).
(hasPurposeForAgent-->[TernaryPredicate]).
(hasSkill-->[AsymmetricRelation]).
(hasSkill-->[BinaryPredicate]).
(hinders-->[BinaryPredicate]).
(hinders-->[IrreflexiveRelation]).
(hinders-->[PartialValuedRelation]).
(hindersSubclass-->[BinaryPredicate]).
(hindersSubclass-->[IrreflexiveRelation]).
(hindersSubclass-->[PartialValuedRelation]).
(holdsDuring-->[AsymmetricRelation]).
(holdsDuring-->[BinaryPredicate]).
(holdsObligation-->[AsymmetricRelation]).
(holdsObligation-->[BinaryPredicate]).
(holdsRight-->[AsymmetricRelation]).
(holdsRight-->[BinaryPredicate]).
(hole-->[AsymmetricRelation]).
(hole-->[BinaryPredicate]).
(hole-->[SpatialRelation]).
(husband-->[AsymmetricRelation]).
(husband-->[IrreflexiveRelation]).
(husband-->[PartialValuedRelation]).
(identicalListItems-->[BinaryPredicate]).
(identicalListItems-->[EquivalenceRelation]).
(identityElement-->[AsymmetricRelation]).
(identityElement-->[BinaryPredicate]).
(immediateInstance-->[AsymmetricRelation]).
(immediateInstance-->[IntransitiveRelation]).
(immediateInstance-->[TotalValuedRelation]).
(immediateSubclass-->[AsymmetricRelation]).
(immediateSubclass-->[IntransitiveRelation]).
(inList-->[AsymmetricRelation]).
(inList-->[BinaryPredicate]).
(inList-->[IrreflexiveRelation]).
(inList-->[PartialValuedRelation]).
(inScopeOfInterest-->[BinaryPredicate]).
(inScopeOfInterest-->[IntentionalRelation]).
(increasesLikelihood-->[BinaryPredicate]).
(increasesLikelihood-->[IrreflexiveRelation]).
(increasesLikelihood-->[ProbabilityRelation]).
(independentProbability-->[BinaryPredicate]).
(independentProbability-->[ProbabilityRelation]).
(independentProbability-->[SymmetricRelation]).
(inhabits-->[AsymmetricRelation]).
(inhabits-->[BinaryPredicate]).
(initialList-->[BinaryPredicate]).
(initialList-->[PartialOrderingRelation]).
(instance-->[BinaryPredicate]).
(instrument-->[CaseRole]).
(instrument-->[PartialValuedRelation]).
(interiorPart-->[AsymmetricRelation]).
(interiorPart-->[TransitiveRelation]).
(inverse-->[BinaryPredicate]).
(inverse-->[IntransitiveRelation]).
(inverse-->[IrreflexiveRelation]).
(inverse-->[PartialValuedRelation]).
(inverse-->[SymmetricRelation]).
(involvedInEvent-->[AsymmetricRelation]).
(involvedInEvent-->[BinaryPredicate]).
(irreflexiveOn-->[AsymmetricRelation]).
(irreflexiveOn-->[BinaryPredicate]).
(knows-->[BinaryPredicate]).
(knows-->[PropositionalAttitude]).
(larger-->[BinaryPredicate]).
(larger-->[IrreflexiveRelation]).
(larger-->[SpatialRelation]).
(larger-->[TotalValuedRelation]).
(larger-->[TransitiveRelation]).
(leader-->[AsymmetricRelation]).
(leader-->[BinaryPredicate]).
(leader-->[SingleValuedRelation]).
(legalRelation-->[BinaryPredicate]).
(legalRelation-->[SymmetricRelation]).
(length-->[SingleValuedRelation]).
(lessThan-->[BinaryPredicate]).
(lessThan-->[IrreflexiveRelation]).
(lessThan-->[RelationExtendedToQuantities]).
(lessThan-->[TransitiveRelation]).
(lessThanOrEqualTo-->[BinaryPredicate]).
(lessThanOrEqualTo-->[PartialOrderingRelation]).
(lessThanOrEqualTo-->[RelationExtendedToQuantities]).
(lineMeasure-->[BinaryPredicate]).
(lineMeasure-->[TotalValuedRelation]).
(links-->[TernaryPredicate]).
(located-->[AntisymmetricRelation]).
(located-->[TotalValuedRelation]).
(located-->[TransitiveRelation]).
(manner-->[AsymmetricRelation]).
(manner-->[IrreflexiveRelation]).
(manner-->[TotalValuedRelation]).
(material-->[BinaryPredicate]).
(measure-->[AsymmetricRelation]).
(measure-->[BinaryPredicate]).
(meetsSpatially-->[IrreflexiveRelation]).
(meetsSpatially-->[SymmetricRelation]).
(meetsTemporally-->[AsymmetricRelation]).
(meetsTemporally-->[BinaryPredicate]).
(meetsTemporally-->[IntransitiveRelation]).
(meetsTemporally-->[TemporalRelation]).
(meetsTemporally-->[TotalValuedRelation]).
(meltingPoint-->[BinaryPredicate]).
(member-->[AsymmetricRelation]).
(member-->[IntransitiveRelation]).
(modalAttribute-->[AsymmetricRelation]).
(modalAttribute-->[BinaryPredicate]).
(modalAttribute-->[IrreflexiveRelation]).
(modalAttribute-->[PartialValuedRelation]).
(monetaryValue-->[AsymmetricRelation]).
(monetaryValue-->[BinaryPredicate]).
(monetaryValue-->[SingleValuedRelation]).
(mother-->[PartialValuedRelation]).
(mother-->[SingleValuedRelation]).
(moves-->[CaseRole]).
(moves-->[TotalValuedRelation]).
(multiplicativeFactor-->[BinaryPredicate]).
(multiplicativeFactor-->[TransitiveRelation]).
(mutualAcquaintance-->[BinaryPredicate]).
(mutualAcquaintance-->[SymmetricRelation]).
(needs-->[BinaryPredicate]).
(needs-->[ObjectAttitude]).
(occupiesPosition-->[TernaryPredicate]).
(orientation-->[SpatialRelation]).
(orientation-->[TernaryPredicate]).
(origin-->[CaseRole]).
(origin-->[PartialValuedRelation]).
(overlapsPartially-->[BinaryPredicate]).
(overlapsPartially-->[IrreflexiveRelation]).
(overlapsPartially-->[PartialValuedRelation]).
(overlapsPartially-->[SymmetricRelation]).
(overlapsSpatially-->[ReflexiveRelation]).
(overlapsSpatially-->[SymmetricRelation]).
(overlapsTemporally-->[BinaryPredicate]).
(overlapsTemporally-->[ReflexiveRelation]).
(overlapsTemporally-->[SymmetricRelation]).
(overlapsTemporally-->[TemporalRelation]).
(parallel-->[BinaryPredicate]).
(parent-->[AsymmetricRelation]).
(parent-->[BinaryPredicate]).
(parent-->[IntransitiveRelation]).
(parent-->[TotalValuedRelation]).
(part-->[PartialOrderingRelation]).
(part-->[SpatialRelation]).
(partialOrderingOn-->[AsymmetricRelation]).
(partialOrderingOn-->[BinaryPredicate]).
(partiallyFills-->[AsymmetricRelation]).
(partiallyFills-->[SpatialRelation]).
(partition-->[Predicate]).
(partition-->[VariableArityRelation]).
(partlyLocated-->[BinaryPredicate]).
(partlyLocated-->[SpatialRelation]).
(partlyLocated-->[TotalValuedRelation]).
(path-->[CaseRole]).
(path-->[TotalValuedRelation]).
(pathLength-->[AsymmetricRelation]).
(pathLength-->[BinaryPredicate]).
(pathLength-->[IrreflexiveRelation]).
(patient-->[CaseRole]).
(patient-->[PartialValuedRelation]).
(penetrates-->[AsymmetricRelation]).
(penetrates-->[IntransitiveRelation]).
(penetrates-->[PartialValuedRelation]).
(pointOfFigure-->[BinaryPredicate]).
(pointOfIntersection-->[TernaryPredicate]).
(possesses-->[AsymmetricRelation]).
(possesses-->[BinaryPredicate]).
(precondition-->[AsymmetricRelation]).
(precondition-->[BinaryPredicate]).
(precondition-->[TransitiveRelation]).
(prefers-->[IntentionalRelation]).
(prefers-->[TernaryPredicate]).
(premise-->[BinaryPredicate]).
(premise-->[TotalValuedRelation]).
(prevents-->[BinaryPredicate]).
(prevents-->[IrreflexiveRelation]).
(prevents-->[PartialValuedRelation]).
(preventsSubclass-->[BinaryPredicate]).
(preventsSubclass-->[IrreflexiveRelation]).
(preventsSubclass-->[PartialValuedRelation]).
(properPart-->[AsymmetricRelation]).
(properPart-->[TransitiveRelation]).
(properlyFills-->[AsymmetricRelation]).
(property-->[BinaryPredicate]).
(publishes-->[AsymmetricRelation]).
(publishes-->[BinaryPredicate]).
(radius-->[BinaryPredicate]).
(radius-->[SingleValuedRelation]).
(radius-->[TotalValuedRelation]).
(range-->[AsymmetricRelation]).
(range-->[BinaryPredicate]).
(rangeSubclass-->[AsymmetricRelation]).
(rangeSubclass-->[BinaryPredicate]).
(realization-->[AsymmetricRelation]).
(refers-->[BinaryPredicate]).
(reflexiveOn-->[AsymmetricRelation]).
(reflexiveOn-->[BinaryPredicate]).
(relatedEvent-->[BinaryPredicate]).
(relatedEvent-->[SymmetricRelation]).
(relatedExternalConcept-->[TernaryPredicate]).
(relatedInternalConcept-->[BinaryPredicate]).
(relatedInternalConcept-->[EquivalenceRelation]).
(relative-->[BinaryPredicate]).
(relative-->[SymmetricRelation]).
(representsForAgent-->[TernaryPredicate]).
(representsInLanguage-->[TernaryPredicate]).
(resource-->[CaseRole]).
(resource-->[PartialValuedRelation]).
(resourceExhausted-->[AsymmetricRelation]).
(resourceExhausted-->[BinaryPredicate]).
(resourceExhausted-->[CaseRole]).
(resourceExhausted-->[PartialValuedRelation]).
(result-->[CaseRole]).
(result-->[PartialValuedRelation]).
(sibling-->[BinaryPredicate]).
(sibling-->[IrreflexiveRelation]).
(sibling-->[PartialValuedRelation]).
(sibling-->[SymmetricRelation]).
(side-->[BinaryPredicate]).
(sister-->[IrreflexiveRelation]).
(sister-->[PartialValuedRelation]).
(sister-->[TransitiveRelation]).
(smaller-->[BinaryPredicate]).
(smaller-->[IrreflexiveRelation]).
(smaller-->[SpatialRelation]).
(smaller-->[TotalValuedRelation]).
(smaller-->[TransitiveRelation]).
(spouse-->[IrreflexiveRelation]).
(spouse-->[PartialValuedRelation]).
(spouse-->[SymmetricRelation]).
(starts-->[IrreflexiveRelation]).
(starts-->[TemporalRelation]).
(starts-->[TotalValuedRelation]).
(starts-->[TransitiveRelation]).
(subAttribute-->[BinaryPredicate]).
(subAttribute-->[PartialOrderingRelation]).
(subCollection-->[BinaryPredicate]).
(subCollection-->[PartialOrderingRelation]).
(subGraph-->[BinaryPredicate]).
(subGraph-->[ReflexiveRelation]).
(subGraph-->[TransitiveRelation]).
(subList-->[BinaryPredicate]).
(subList-->[PartialOrderingRelation]).
(subOrganization-->[PartialOrderingRelation]).
(subPlan-->[IrreflexiveRelation]).
(subPlan-->[PartialValuedRelation]).
(subPlan-->[TransitiveRelation]).
(subProcess-->[BinaryPredicate]).
(subProcess-->[PartialOrderingRelation]).
(subProposition-->[BinaryPredicate]).
(subProposition-->[IrreflexiveRelation]).
(subProposition-->[PartialValuedRelation]).
(subProposition-->[TransitiveRelation]).
(subSystem-->[BinaryPredicate]).
(subclass-->[BinaryPredicate]).
(subclass-->[PartialOrderingRelation]).
(subrelation-->[BinaryPredicate]).
(subrelation-->[PartialOrderingRelation]).
(subsumesContentClass-->[BinaryPredicate]).
(subsumesContentClass-->[PartialOrderingRelation]).
(subsumesContentInstance-->[BinaryPredicate]).
(subsumesContentInstance-->[PartialOrderingRelation]).
(successorAttribute-->[AsymmetricRelation]).
(successorAttribute-->[BinaryPredicate]).
(successorAttributeClosure-->[BinaryPredicate]).
(successorAttributeClosure-->[IrreflexiveRelation]).
(successorAttributeClosure-->[PartialValuedRelation]).
(successorAttributeClosure-->[TransitiveRelation]).
(superficialPart-->[IrreflexiveRelation]).
(superficialPart-->[PartialValuedRelation]).
(superficialPart-->[TransitiveRelation]).
(surface-->[AsymmetricRelation]).
(systemPart-->[BinaryPredicate]).
(temporalPart-->[BinaryPredicate]).
(temporalPart-->[PartialOrderingRelation]).
(temporalPart-->[TemporalRelation]).
(temporallyBetween-->[PartialValuedRelation]).
(temporallyBetween-->[TemporalRelation]).
(temporallyBetween-->[TernaryPredicate]).
(temporallyBetweenOrEqual-->[PartialValuedRelation]).
(temporallyBetweenOrEqual-->[TemporalRelation]).
(temporallyBetweenOrEqual-->[TernaryPredicate]).
(termFormat-->[TernaryPredicate]).
(time-->[AsymmetricRelation]).
(time-->[BinaryPredicate]).
(time-->[TemporalRelation]).
(time-->[TotalValuedRelation]).
(top-->[BinaryPredicate]).
(totalOrderingOn-->[AsymmetricRelation]).
(totalOrderingOn-->[BinaryPredicate]).
(transactionAmount-->[BinaryPredicate]).
(transactionAmount-->[SingleValuedRelation]).
(transactionAmount-->[TotalValuedRelation]).
(traverses-->[BinaryPredicate]).
(traverses-->[SpatialRelation]).
(trichotomizingOn-->[AsymmetricRelation]).
(trichotomizingOn-->[BinaryPredicate]).
(uniqueIdentifier-->[PartialValuedRelation]).
(uniqueIdentifier-->[SingleValuedRelation]).
(uses-->[AsymmetricRelation]).
(uses-->[BinaryPredicate]).
(valence-->[AsymmetricRelation]).
(valence-->[BinaryPredicate]).
(valence-->[SingleValuedRelation]).
(version-->[AsymmetricRelation]).
(version-->[BinaryPredicate]).
(version-->[TransitiveRelation]).
(wants-->[BinaryPredicate]).
(wants-->[ObjectAttitude]).
(wears-->[BinaryPredicate]).
(weight-->[BinaryPredicate]).
(width-->[SingleValuedRelation]).
(wife-->[AsymmetricRelation]).
(wife-->[IrreflexiveRelation]).
exists(#THING,(#1-->[Entity])).
"=>"(((#1-->#2)&&(#1-->[#2])),(#1-->[#2])).
"=>"((subAttribute(#ATTR1,#ATTR2)&&(#1-->[#2])),(#1-->[#2])).
"=>"((subOrganization(#ORG,#GOV)&&(#1-->[GovernmentOrganization])),(#1-->[GovernmentOrganization])).
"=>"(((#1-->[#2])&&(#1-->[IntervalFn(#2,#3)])),(#1-->[#2])).
"=>"((&&,(#1-->InheritableRelation),subrelation(#PRED1,#PRED2),(#1-->[#2])),(#1-->[#2])).
"=>"((&&,(#1-->Organism),parent(#CHILD,#PARENT),(#1-->[#2])),(#1-->[#2])).
"=>"((&&,(#1-->Substance),part(#PART,#OBJECT),(#1-->[#2])),(#1-->[#2])).
"=>"((equal(#PREMISES,PremisesFn(#ARGUMENT))&&(#1-->[Argument])),(premise(#ARGUMENT,#PROPOSITION)<=>subProposition(#PROPOSITION,#PREMISES))).
"=>"(((--,(#1-->[DirectedGraph]))&&graphPart(#PATH,#GRAPH)),(equal(GraphPathFn(#NODE1,#NODE2),#PATH)<=>equal(GraphPathFn(#NODE2,#NODE1),#PATH))).
identityElement(AdditionFn,0).
identityElement(DivisionFn,1).
identityElement(MultiplicationFn,1).
identityElement(SubtractionFn,0).
domainSubclass(DayFn,2,Month).
domainSubclass(EditionFn,1,ContentBearingObject).
domainSubclass(FoodForFn,1,Organism).
domainSubclass(GeneralizedIntersectionFn,1,SetOrClass).
domainSubclass(GeneralizedUnionFn,1,SetOrClass).
domainSubclass(HourFn,2,Day).
domainSubclass(MakingFn,1,Making).
domainSubclass(MinuteFn,2,Hour).
domainSubclass(MonthFn,1,Month).
domainSubclass(MonthFn,2,Year).
domainSubclass(RecurrentTimeIntervalFn,1,TimeInterval).
domainSubclass(RecurrentTimeIntervalFn,2,TimeInterval).
domainSubclass(SecondFn,2,Minute).
domainSubclass(TemporalCompositionFn,2,TimeInterval).
domainSubclass(atomicNumber,1,ElementalSubstance).
domainSubclass(authors,2,ContentBearingObject).
domainSubclass(boilingPoint,1,PureSubstance).
domainSubclass(capability,1,Process).
domainSubclass(causesSubclass,1,Process).
domainSubclass(causesSubclass,2,Process).
domainSubclass(editor,2,Text).
domainSubclass(equivalentContentClass,1,ContentBearingPhysical).
domainSubclass(equivalentContentClass,2,ContentBearingPhysical).
domainSubclass(exhaustiveAttribute,1,Attribute).
domainSubclass(frequency,1,Process).
domainSubclass(hasSkill,1,Process).
domainSubclass(hinders,2,Process).
domainSubclass(hindersSubclass,1,Process).
domainSubclass(hindersSubclass,2,Process).
domainSubclass(material,1,Substance).
domainSubclass(meltingPoint,1,PureSubstance).
domainSubclass(precondition,1,Process).
domainSubclass(precondition,2,Process).
domainSubclass(prevents,2,Process).
domainSubclass(preventsSubclass,1,Process).
domainSubclass(preventsSubclass,2,Process).
domainSubclass(publishes,2,Text).
domainSubclass(rangeSubclass,2,SetOrClass).
domainSubclass(subsumesContentClass,1,ContentBearingPhysical).
domainSubclass(subsumesContentClass,2,ContentBearingPhysical).
domainSubclass(version,1,Artifact).
domainSubclass(version,2,Artifact).
domain(AbsoluteValueFn,(RealNumber,1)).
domain(AdditionFn,(Quantity,1)).
domain(AdditionFn,(Quantity,2)).
domain(AssignmentFn,(Entity,2)).
domain(AssignmentFn,(Function,1)).
domain(BackFn,(SelfConnectedObject,1)).
domain(BeginFn,(TimeInterval,1)).
domain(BeginNodeFn,(GraphPath,1)).
domain(CeilingFn,(RealNumber,1)).
domain(CenterOfCircleFn,(Circle,1)).
domain(ComplementFn,(SetOrClass,1)).
domain(CosineFn,(PlaneAngleMeasure,1)).
domain(CutSetFn,(Graph,1)).
domain(DayFn,(PositiveInteger,1)).
domain(DenominatorFn,(RealNumber,1)).
domain(DensityFn,(MassMeasure,1)).
domain(DensityFn,(VolumeMeasure,2)).
domain(DivisionFn,(Quantity,1)).
domain(DivisionFn,(Quantity,2)).
domain(EditionFn,(PositiveInteger,2)).
domain(EndFn,(TimeInterval,1)).
domain(EndNodeFn,(GraphPath,1)).
domain(ExponentiationFn,(Integer,2)).
domain(ExponentiationFn,(Quantity,1)).
domain(ExtensionFn,(Attribute,1)).
domain(FloorFn,(RealNumber,1)).
domain(FrontFn,(SelfConnectedObject,1)).
domain(FutureFn,(TimePosition,1)).
domain(GigaFn,(UnitOfMeasure,1)).
domain(GovernmentFn,(GeopoliticalArea,1)).
domain(GraphPathFn,(GraphNode,1)).
domain(GraphPathFn,(GraphNode,2)).
domain(GreatestCommonDivisorFn,(Number,1)).
domain(HoleHostFn,(Hole,1)).
domain(HoleSkinFn,(Hole,1)).
domain(HourFn,(NonnegativeInteger,1)).
domain(ImaginaryPartFn,(ComplexNumber,1)).
domain(ImmediateFamilyFn,(Human,1)).
domain(ImmediateFutureFn,(TimePosition,1)).
domain(ImmediatePastFn,(TimePosition,1)).
domain(InitialNodeFn,(GraphArc,1)).
domain(IntegerSquareRootFn,(RealNumber,1)).
domain(IntersectionFn,(SetOrClass,1)).
domain(IntersectionFn,(SetOrClass,2)).
domain(IntervalFn,(ConstantQuantity,1)).
domain(IntervalFn,(ConstantQuantity,2)).
domain(KappaFn,(Formula,2)).
domain(KappaFn,(SymbolicString,1)).
domain(KiloFn,(UnitOfMeasure,1)).
domain(LeastCommonMultipleFn,(Number,1)).
domain(ListConcatenateFn,(List,1)).
domain(ListConcatenateFn,(List,2)).
domain(ListFn,(Entity,1)).
domain(ListLengthFn,(List,1)).
domain(ListOrderFn,(List,1)).
domain(ListOrderFn,(PositiveInteger,2)).
domain(LogFn,(PositiveInteger,2)).
domain(LogFn,(RealNumber,1)).
domain(MagnitudeFn,(PhysicalQuantity,1)).
domain(MaxFn,(Quantity,1)).
domain(MaxFn,(Quantity,2)).
domain(MaximalWeightedPathFn,(GraphNode,1)).
domain(MaximalWeightedPathFn,(GraphNode,2)).
domain(MeasureFn,(RealNumber,1)).
domain(MeasureFn,(UnitOfMeasure,2)).
domain(MegaFn,(UnitOfMeasure,1)).
domain(MereologicalDifferenceFn,(Object,1)).
domain(MereologicalDifferenceFn,(Object,2)).
domain(MereologicalProductFn,(Object,1)).
domain(MereologicalProductFn,(Object,2)).
domain(MereologicalSumFn,(Object,1)).
domain(MereologicalSumFn,(Object,2)).
domain(MicroFn,(UnitOfMeasure,1)).
domain(MilliFn,(UnitOfMeasure,1)).
domain(MinFn,(Quantity,1)).
domain(MinFn,(Quantity,2)).
domain(MinimalCutSetFn,(Graph,1)).
domain(MinimalWeightedPathFn,(GraphNode,1)).
domain(MinimalWeightedPathFn,(GraphNode,2)).
domain(MinuteFn,(NonnegativeInteger,1)).
domain(MultiplicationFn,(Quantity,1)).
domain(MultiplicationFn,(Quantity,2)).
domain(NanoFn,(UnitOfMeasure,1)).
domain(NumeratorFn,(RealNumber,1)).
domain(PastFn,(TimePosition,1)).
domain(PathWeightFn,(GraphPath,1)).
domain(PerFn,(PhysicalQuantity,1)).
domain(PerFn,(PhysicalQuantity,2)).
domain(PicoFn,(UnitOfMeasure,1)).
domain(PowerSetFn,(SetOrClass,1)).
domain(PredecessorFn,(Integer,1)).
domain(PremisesFn,(Argument,1)).
domain(ProbabilityFn,(Formula,1)).
domain(PropertyFn,(Agent,1)).
domain(RationalNumberFn,(Number,1)).
domain(RealNumberFn,(Number,1)).
domain(ReciprocalFn,(Quantity,1)).
domain(RelativeComplementFn,(SetOrClass,1)).
domain(RelativeComplementFn,(SetOrClass,2)).
domain(RelativeTimeFn,(TimePosition,1)).
domain(RelativeTimeFn,(TimeZone,2)).
domain(RemainderFn,(Quantity,1)).
domain(RemainderFn,(Quantity,2)).
domain(RoundFn,(Quantity,1)).
domain(SecondFn,(PositiveRealNumber,1)).
domain(SignumFn,(RealNumber,1)).
domain(SineFn,(PlaneAngleMeasure,1)).
domain(SpeedFn,(LengthMeasure,1)).
domain(SpeedFn,(TimeDuration,2)).
domain(SquareRootFn,(RealNumber,1)).
domain(SubtractionFn,(Quantity,1)).
domain(SubtractionFn,(Quantity,2)).
domain(SuccessorFn,(Integer,1)).
domain(TangentFn,(PlaneAngleMeasure,1)).
domain(TemporalCompositionFn,(TimeInterval,1)).
domain(TeraFn,(UnitOfMeasure,1)).
domain(TerminalNodeFn,(GraphArc,1)).
domain(TimeIntervalFn,(TimePoint,1)).
domain(TimeIntervalFn,(TimePoint,2)).
domain(UnionFn,(SetOrClass,1)).
domain(UnionFn,(SetOrClass,2)).
domain(UnitFn,(PhysicalQuantity,1)).
domain(VelocityFn,(DirectionalAttribute,4)).
domain(VelocityFn,(LengthMeasure,1)).
domain(VelocityFn,(Region,3)).
domain(VelocityFn,(TimeDuration,2)).
domain(WealthFn,(Agent,1)).
domain(WhenFn,(Physical,1)).
domain(WhereFn,(Physical,1)).
domain(WhereFn,(TimePoint,2)).
domain(YearFn,(Integer,1)).
domain(abstractCounterpart,(Abstract,1)).
domain(abstractCounterpart,(Physical,2)).
domain(acquaintance,(Human,1)).
domain(acquaintance,(Human,2)).
domain(age,(TimeDuration,2)).
domain(agent,(Agent,2)).
domain(agent,(Process,1)).
domain(ancestor,(Organism,1)).
domain(ancestor,(Organism,2)).
domain(angleOfFigure,(GeometricFigure,2)).
domain(angleOfFigure,(TwoDimensionalAngle,1)).
domain(angularMeasure,(PlaneAngleMeasure,2)).
domain(angularMeasure,(TwoDimensionalAngle,1)).
domain(arcWeight,(GraphArc,1)).
domain(arcWeight,(Quantity,2)).
domain(atomicNumber,(PositiveInteger,2)).
domain(attends,(Demonstrating,1)).
domain(attends,(Human,2)).
domain(attribute,(Object,1)).
domain(authors,(Agent,1)).
domain(average,(List,1)).
domain(average,(RealNumber,2)).
domain(barometricPressure,(Object,1)).
domain(barometricPressure,(UnitOfAtmosphericPressure,2)).
domain(before,(TimePoint,1)).
domain(before,(TimePoint,2)).
domain(beforeOrEqual,(TimePoint,1)).
domain(beforeOrEqual,(TimePoint,2)).
domain(believes,(CognitiveAgent,1)).
domain(believes,(Formula,2)).
domain(between,(Object,1)).
domain(between,(Object,2)).
domain(between,(Object,3)).
domain(betweenOnPath,(Object,1)).
domain(betweenOnPath,(Object,2)).
domain(betweenOnPath,(Object,3)).
domain(betweenOnPath,(Object,4)).
domain(boilingPoint,(TemperatureMeasure,2)).
domain(bottom,(SelfConnectedObject,1)).
domain(bottom,(SelfConnectedObject,2)).
domain(brother,(Human,2)).
domain(brother,(Man,1)).
domain(capability,(CaseRole,2)).
domain(capability,(Object,3)).
domain(causes,(Process,1)).
domain(causes,(Process,2)).
domain(causesProposition,(Formula,1)).
domain(causesProposition,(Formula,2)).
domain(changesLocation,(Object,2)).
domain(changesLocation,(Translocation,1)).
domain(citizen,(Human,1)).
domain(citizen,(Nation,2)).
domain(closedOn,(Function,1)).
domain(closedOn,(SetOrClass,2)).
domain(comment,(Entity,1)).
domain(comment,(SymbolicString,2)).
domain(comment,(SymbolicString,3)).
domain(component,(CorpuscularObject,1)).
domain(component,(CorpuscularObject,2)).
domain(conclusion,(Argument,1)).
domain(conclusion,(Proposition,2)).
domain(conditionalProbability,(Formula,1)).
domain(conditionalProbability,(Formula,2)).
domain(conditionalProbability,(RealNumber,3)).
domain(confersNorm,(Entity,1)).
domain(confersNorm,(Formula,2)).
domain(confersNorm,(ObjectiveNorm,3)).
domain(confersObligation,(CognitiveAgent,3)).
domain(confersObligation,(Entity,2)).
domain(confersObligation,(Formula,1)).
domain(confersRight,(CognitiveAgent,3)).
domain(confersRight,(Entity,2)).
domain(confersRight,(Formula,1)).
domain(connected,(Object,1)).
domain(connected,(Object,2)).
domain(connectedEngineeringComponents,(EngineeringComponent,1)).
domain(connectedEngineeringComponents,(EngineeringComponent,2)).
domain(connects,(Object,1)).
domain(connects,(Object,2)).
domain(connects,(Object,3)).
domain(connectsEngineeringComponents,(EngineeringComponent,2)).
domain(connectsEngineeringComponents,(EngineeringComponent,3)).
domain(connectsEngineeringComponents,(EngineeringConnection,1)).
domain(considers,(CognitiveAgent,1)).
domain(considers,(Formula,2)).
domain(consistent,(Proposition,1)).
domain(consistent,(Proposition,2)).
domain(contains,(Object,2)).
domain(contains,(SelfConnectedObject,1)).
domain(containsInformation,(ContentBearingPhysical,1)).
domain(containsInformation,(Proposition,2)).
domain(contraryAttribute,(Attribute,1)).
domain(cooccur,(Physical,1)).
domain(cooccur,(Physical,2)).
domain(copy,(Object,1)).
domain(copy,(Object,2)).
domain(date,(Day,2)).
domain(date,(Physical,1)).
domain(daughter,(Organism,1)).
domain(daughter,(Organism,2)).
domain(decreasesLikelihood,(Formula,1)).
domain(decreasesLikelihood,(Formula,2)).
domain(deprivesNorm,(Entity,1)).
domain(deprivesNorm,(Formula,2)).
domain(deprivesNorm,(ObjectiveNorm,3)).
domain(desires,(CognitiveAgent,1)).
domain(desires,(Formula,2)).
domain(destination,(Entity,2)).
domain(destination,(Process,1)).
domain(developmentalForm,(DevelopmentalAttribute,2)).
domain(developmentalForm,(OrganicObject,1)).
domain(diameter,(Circle,1)).
domain(diameter,(LengthMeasure,2)).
domain(direction,(PositionalAttribute,2)).
domain(direction,(Process,1)).
domain(disjoint,(SetOrClass,1)).
domain(disjoint,(SetOrClass,2)).
domain(disjointDecomposition,(Class,1)).
domain(disjointDecomposition,(Class,2)).
domain(disjointRelation,(Relation,1)).
domain(disjointRelation,(Relation,2)).
domain(distance,(LengthMeasure,3)).
domain(distance,(Physical,1)).
domain(distance,(Physical,2)).
domain(distributes,(BinaryFunction,1)).
domain(distributes,(BinaryFunction,2)).
domain(documentation,(Entity,1)).
domain(documentation,(HumanLanguage,2)).
domain(documentation,(SymbolicString,3)).
domain(domainSubclass,(PositiveInteger,2)).
domain(domainSubclass,(Relation,1)).
domain(domainSubclass,(SetOrClass,3)).
domain(duration,(TimeDuration,2)).
domain(duration,(TimeInterval,1)).
domain(during,(TimeInterval,1)).
domain(during,(TimeInterval,2)).
domain(earlier,(TimeInterval,1)).
domain(earlier,(TimeInterval,2)).
domain(editor,(Agent,1)).
domain(element,(Entity,1)).
domain(element,(Set,2)).
domain(employs,(CognitiveAgent,2)).
domain(employs,(Organization,1)).
domain(engineeringSubcomponent,(EngineeringComponent,1)).
domain(engineeringSubcomponent,(EngineeringComponent,2)).
domain(entails,(Formula,1)).
domain(entails,(Formula,2)).
domain(equal,(Entity,1)).
domain(equal,(Entity,2)).
domain(equivalenceRelationOn,(BinaryRelation,1)).
domain(equivalenceRelationOn,(SetOrClass,2)).
domain(equivalentContentInstance,(ContentBearingPhysical,1)).
domain(equivalentContentInstance,(ContentBearingPhysical,2)).
domain(eventPartlyLocated,(Object,2)).
domain(eventPartlyLocated,(Process,1)).
domain(exhaustiveAttribute,(Attribute,2)).
domain(exhaustiveDecomposition,(Class,1)).
domain(exhaustiveDecomposition,(Class,2)).
domain(experiencer,(Agent,2)).
domain(experiencer,(Process,1)).
domain(exploits,(Agent,2)).
domain(exploits,(Object,1)).
domain(expressedInLanguage,(Language,2)).
domain(expressedInLanguage,(LinguisticExpression,1)).
domain(externalImage,(Entity,1)).
domain(externalImage,(SymbolicString,2)).
domain(faces,(DirectionalAttribute,2)).
domain(faces,(Object,1)).
domain(familyRelation,(Organism,1)).
domain(familyRelation,(Organism,2)).
domain(father,(Organism,1)).
domain(father,(Organism,2)).
domain(fills,(Hole,2)).
domain(fills,(Object,1)).
domain(finishes,(TimeInterval,1)).
domain(finishes,(TimeInterval,2)).
domain(format,(Entity,2)).
domain(format,(Language,1)).
domain(format,(SymbolicString,3)).
domain(frequency,(TimeDuration,2)).
domain(geographicSubregion,(GeographicArea,1)).
domain(geographicSubregion,(GeographicArea,2)).
domain(geometricDistance,(GeometricPoint,1)).
domain(geometricDistance,(GeometricPoint,2)).
domain(geometricDistance,(LengthMeasure,3)).
domain(geometricPart,(GeometricFigure,1)).
domain(geometricPart,(GeometricFigure,2)).
domain(geopoliticalSubdivision,(GeopoliticalArea,1)).
domain(geopoliticalSubdivision,(GeopoliticalArea,2)).
domain(graphMeasure,(Graph,1)).
domain(graphMeasure,(UnitOfMeasure,2)).
domain(graphPart,(Graph,2)).
domain(graphPart,(GraphElement,1)).
domain(grasps,(Animal,1)).
domain(grasps,(Object,2)).
domain(greaterThan,(Quantity,1)).
domain(greaterThan,(Quantity,2)).
domain(greaterThanByQuality,(Attribute,3)).
domain(greaterThanByQuality,(Entity,1)).
domain(greaterThanByQuality,(Entity,2)).
domain(greaterThanOrEqualTo,(Quantity,1)).
domain(greaterThanOrEqualTo,(Quantity,2)).
domain(hasPurpose,(Formula,2)).
domain(hasPurpose,(Physical,1)).
domain(hasPurposeForAgent,(Agent,3)).
domain(hasPurposeForAgent,(Formula,2)).
domain(hasPurposeForAgent,(Physical,1)).
domain(hasSkill,(Agent,2)).
domain(height,(LengthMeasure,2)).
domain(height,(SelfConnectedObject,1)).
domain(hinders,(Process,1)).
domain(holdsDuring,(Formula,2)).
domain(holdsDuring,(TimePosition,1)).
domain(holdsObligation,(CognitiveAgent,2)).
domain(holdsObligation,(Formula,1)).
domain(holdsRight,(CognitiveAgent,2)).
domain(holdsRight,(Formula,1)).
domain(hole,(Hole,1)).
domain(hole,(SelfConnectedObject,2)).
domain(home,(Human,1)).
domain(home,(PermanentResidence,2)).
domain(husband,(Man,1)).
domain(husband,(Woman,2)).
domain(identicalListItems,(List,1)).
domain(identicalListItems,(List,2)).
domain(identityElement,(BinaryFunction,1)).
domain(identityElement,(Entity,2)).
domain(inList,(Entity,1)).
domain(inList,(List,2)).
domain(inScopeOfInterest,(CognitiveAgent,1)).
domain(inScopeOfInterest,(Entity,2)).
domain(increasesLikelihood,(Formula,1)).
domain(increasesLikelihood,(Formula,2)).
domain(independentProbability,(Formula,1)).
domain(independentProbability,(Formula,2)).
domain(inhabits,(Object,2)).
domain(inhabits,(Organism,1)).
domain(instance,(Entity,1)).
domain(instance,(SetOrClass,2)).
domain(instrument,(Object,2)).
domain(instrument,(Process,1)).
domain(inverse,(BinaryRelation,1)).
domain(inverse,(BinaryRelation,2)).
domain(involvedInEvent,(Entity,2)).
domain(involvedInEvent,(Process,1)).
domain(irreflexiveOn,(BinaryRelation,1)).
domain(irreflexiveOn,(SetOrClass,2)).
domain(knows,(CognitiveAgent,1)).
domain(knows,(Formula,2)).
domain(larger,(Object,1)).
domain(larger,(Object,2)).
domain(leader,(Agent,1)).
domain(leader,(Human,2)).
domain(legalRelation,(Human,1)).
domain(legalRelation,(Human,2)).
domain(lessThan,(Quantity,1)).
domain(lessThan,(Quantity,2)).
domain(lessThanOrEqualTo,(Quantity,1)).
domain(lessThanOrEqualTo,(Quantity,2)).
domain(lineMeasure,(LengthMeasure,2)).
domain(lineMeasure,(OneDimensionalFigure,1)).
domain(linearExtent,(LengthMeasure,2)).
domain(links,(GraphArc,3)).
domain(links,(GraphNode,1)).
domain(links,(GraphNode,2)).
domain(located,(Object,2)).
domain(located,(Physical,1)).
domain(manner,(Process,1)).
domain(material,(CorpuscularObject,2)).
domain(measure,(Object,1)).
domain(measure,(PhysicalQuantity,2)).
domain(meetsSpatially,(Object,1)).
domain(meetsSpatially,(Object,2)).
domain(meetsTemporally,(TimeInterval,1)).
domain(meetsTemporally,(TimeInterval,2)).
domain(meltingPoint,(TemperatureMeasure,2)).
domain(member,(Collection,2)).
domain(member,(Object,1)).
domain(modalAttribute,(Formula,1)).
domain(modalAttribute,(NormativeAttribute,2)).
domain(monetaryValue,(CurrencyMeasure,2)).
domain(monetaryValue,(Physical,1)).
domain(mother,(Organism,1)).
domain(mother,(Organism,2)).
domain(moves,(Motion,1)).
domain(moves,(Object,2)).
domain(multiplicativeFactor,(Integer,1)).
domain(multiplicativeFactor,(Integer,2)).
domain(mutualAcquaintance,(Human,1)).
domain(mutualAcquaintance,(Human,2)).
domain(names,(SymbolicString,1)).
domain(needs,(CognitiveAgent,1)).
domain(needs,(Physical,2)).
domain(occupiesPosition,(Human,1)).
domain(occupiesPosition,(Organization,3)).
domain(occupiesPosition,(Position,2)).
domain(orientation,(Object,1)).
domain(orientation,(Object,2)).
domain(orientation,(PositionalAttribute,3)).
domain(origin,(Object,2)).
domain(origin,(Process,1)).
domain(overlapsPartially,(Object,1)).
domain(overlapsPartially,(Object,2)).
domain(overlapsTemporally,(TimeInterval,1)).
domain(overlapsTemporally,(TimeInterval,2)).
domain(parallel,(OneDimensionalFigure,1)).
domain(parallel,(OneDimensionalFigure,2)).
domain(parent,(Organism,1)).
domain(parent,(Organism,2)).
domain(part,(Object,1)).
domain(part,(Object,2)).
domain(partialOrderingOn,(BinaryRelation,1)).
domain(partialOrderingOn,(SetOrClass,2)).
domain(partiallyFills,(Hole,2)).
domain(partiallyFills,(Object,1)).
domain(partition,(Class,1)).
domain(partition,(Class,2)).
domain(partlyLocated,(Object,2)).
domain(partlyLocated,(Physical,1)).
domain(path,(Motion,1)).
domain(path,(Object,2)).
domain(pathLength,(GraphPath,1)).
domain(pathLength,(PositiveInteger,2)).
domain(patient,(Entity,2)).
domain(patient,(Process,1)).
domain(piece,(Substance,1)).
domain(piece,(Substance,2)).
domain(pointOfFigure,(GeometricFigure,2)).
domain(pointOfFigure,(GeometricPoint,1)).
domain(pointOfIntersection,(GeometricPoint,3)).
domain(pointOfIntersection,(OneDimensionalFigure,1)).
domain(pointOfIntersection,(OneDimensionalFigure,2)).
domain(possesses,(Agent,1)).
domain(possesses,(Object,2)).
domain(prefers,(CognitiveAgent,1)).
domain(prefers,(Formula,2)).
domain(prefers,(Formula,3)).
domain(premise,(Argument,1)).
domain(premise,(Proposition,2)).
domain(prevents,(Process,1)).
domain(properlyFills,(Hole,2)).
domain(properlyFills,(Object,1)).
domain(property,(Attribute,2)).
domain(property,(Entity,1)).
domain(publishes,(Organization,1)).
domain(radius,(Circle,1)).
domain(radius,(LengthMeasure,2)).
domain(range,(Function,1)).
domain(range,(SetOrClass,2)).
domain(rangeSubclass,(Function,1)).
domain(realization,(Process,1)).
domain(realization,(Proposition,2)).
domain(refers,(Entity,1)).
domain(refers,(Entity,2)).
domain(reflexiveOn,(BinaryRelation,1)).
domain(reflexiveOn,(SetOrClass,2)).
domain(relatedEvent,(Process,1)).
domain(relatedEvent,(Process,2)).
domain(relatedExternalConcept,(Entity,2)).
domain(relatedExternalConcept,(Language,3)).
domain(relatedExternalConcept,(SymbolicString,1)).
domain(relatedInternalConcept,(Entity,1)).
domain(relatedInternalConcept,(Entity,2)).
domain(relative,(Organism,1)).
domain(relative,(Organism,2)).
domain(representsForAgent,(Agent,3)).
domain(representsForAgent,(Entity,1)).
domain(representsForAgent,(Entity,2)).
domain(representsInLanguage,(Entity,2)).
domain(representsInLanguage,(Language,3)).
domain(representsInLanguage,(LinguisticExpression,1)).
domain(resource,(Object,2)).
domain(resource,(Process,1)).
domain(resourceExhausted,(Object,2)).
domain(resourceExhausted,(Process,1)).
domain(result,(Entity,2)).
domain(result,(Process,1)).
domain(sibling,(Organism,1)).
domain(sibling,(Organism,2)).
domain(side,(SelfConnectedObject,1)).
domain(side,(SelfConnectedObject,2)).
domain(sister,(Human,2)).
domain(sister,(Woman,1)).
domain(smaller,(Object,1)).
domain(smaller,(Object,2)).
domain(son,(Organism,1)).
domain(son,(Organism,2)).
domain(spouse,(Human,1)).
domain(spouse,(Human,2)).
domain(starts,(TimeInterval,1)).
domain(starts,(TimeInterval,2)).
domain(stays,(Human,1)).
domain(stays,(TemporaryResidence,2)).
domain(subAttribute,(Attribute,1)).
domain(subAttribute,(Attribute,2)).
domain(subCollection,(Collection,1)).
domain(subCollection,(Collection,2)).
domain(subGraph,(Graph,1)).
domain(subGraph,(Graph,2)).
domain(subList,(List,1)).
domain(subList,(List,2)).
domain(subOrganization,(Organization,1)).
domain(subOrganization,(Organization,2)).
domain(subPlan,(Plan,1)).
domain(subPlan,(Plan,2)).
domain(subProcess,(Process,1)).
domain(subProcess,(Process,2)).
domain(subProposition,(Proposition,1)).
domain(subProposition,(Proposition,2)).
domain(subSystem,(PhysicalSystem,1)).
domain(subSystem,(PhysicalSystem,2)).
domain(subclass,(SetOrClass,1)).
domain(subclass,(SetOrClass,2)).
domain(subrelation,(Relation,1)).
domain(subrelation,(Relation,2)).
domain(subset,(Set,1)).
domain(subset,(Set,2)).
domain(subsumesContentInstance,(ContentBearingPhysical,1)).
domain(subsumesContentInstance,(ContentBearingPhysical,2)).
domain(successorAttribute,(Attribute,1)).
domain(successorAttribute,(Attribute,2)).
domain(successorAttributeClosure,(Attribute,1)).
domain(successorAttributeClosure,(Attribute,2)).
domain(surface,(SelfConnectedObject,1)).
domain(surface,(SelfConnectedObject,2)).
domain(systemPart,(Physical,1)).
domain(systemPart,(PhysicalSystem,2)).
domain(temporalPart,(TimePosition,1)).
domain(temporalPart,(TimePosition,2)).
domain(temporallyBetween,(TimePoint,1)).
domain(temporallyBetween,(TimePoint,2)).
domain(temporallyBetween,(TimePoint,3)).
domain(temporallyBetweenOrEqual,(TimePoint,1)).
domain(temporallyBetweenOrEqual,(TimePoint,2)).
domain(temporallyBetweenOrEqual,(TimePoint,3)).
domain(termFormat,(Entity,2)).
domain(termFormat,(Language,1)).
domain(termFormat,(SymbolicString,3)).
domain(time,(Physical,1)).
domain(time,(TimePosition,2)).
domain(top,(SelfConnectedObject,1)).
domain(top,(SelfConnectedObject,2)).
domain(totalOrderingOn,(BinaryRelation,1)).
domain(totalOrderingOn,(SetOrClass,2)).
domain(transactionAmount,(CurrencyMeasure,2)).
domain(transactionAmount,(FinancialTransaction,1)).
domain(traverses,(Object,1)).
domain(traverses,(Object,2)).
domain(trichotomizingOn,(BinaryRelation,1)).
domain(trichotomizingOn,(SetOrClass,2)).
domain(truth,(Sentence,1)).
domain(truth,(TruthValue,2)).
domain(uses,(Agent,2)).
domain(uses,(Object,1)).
domain(valence,(PositiveInteger,2)).
domain(valence,(Relation,1)).
domain(wants,(CognitiveAgent,1)).
domain(wants,(Physical,2)).
domain(wears,(Animal,1)).
domain(wears,(WearableItem,2)).
domain(weight,(MassMeasure,2)).
domain(weight,(SelfConnectedObject,1)).
domain(wife,(Man,2)).
domain(wife,(Woman,1)).
equal(CardinalityFn(Continent),7).
domain(CardinalityFn,(UnionFn(SetOrClass,Collection),1)).
equal(MeasureFn(0,AngularDegree),MeasureFn(360,AngularDegree)).
forall(#NUMBER,equal(PredecessorFn(#NUMBER),SubtractionFn(#NUMBER,1))).
forall(#NUMBER,equal(SuccessorFn(#NUMBER),AdditionFn(#NUMBER,1))).
equal(MeasureFn(#NUMBER,Angstrom),MeasureFn(MultiplicationFn(#NUMBER,1),Meter)).
equal(MeasureFn(#NUMBER,Byte),MeasureFn(MultiplicationFn(#NUMBER,8),Bit)).
equal(MeasureFn(#NUMBER,Cup),MeasureFn(DivisionFn(#NUMBER,2),Pint)).
equal(MeasureFn(#NUMBER,DayDuration),MeasureFn(MultiplicationFn(#NUMBER,24),HourDuration)).
equal(MeasureFn(#NUMBER,HourDuration),MeasureFn(MultiplicationFn(#NUMBER,60),MinuteDuration)).
equal(MeasureFn(#NUMBER,KiloByte),MeasureFn(MultiplicationFn(#NUMBER,1024),Byte)).
equal(MeasureFn(#NUMBER,Kilogram),MeasureFn(MultiplicationFn(#NUMBER,1000),Gram)).
equal(MeasureFn(#NUMBER,Kilometer),MeasureFn(MultiplicationFn(#NUMBER,1000),Meter)).
equal(MeasureFn(#NUMBER,MegaByte),MeasureFn(MultiplicationFn(#NUMBER,1024),KiloByte)).
equal(MeasureFn(#NUMBER,MinuteDuration),MeasureFn(MultiplicationFn(#NUMBER,60),SecondDuration)).
greaterThanOrEqualTo(MeasureFn(#NUMBER,MonthDuration),MeasureFn(MultiplicationFn(#NUMBER,28),DayDuration)).
lessThanOrEqualTo(MeasureFn(#NUMBER,MonthDuration),MeasureFn(MultiplicationFn(#NUMBER,31),DayDuration)).
equal(MeasureFn(#NUMBER,Ounce),MeasureFn(DivisionFn(#NUMBER,8),Cup)).
equal(MeasureFn(#NUMBER,Pint),MeasureFn(DivisionFn(#NUMBER,2),Quart)).
equal(MeasureFn(#NUMBER,Quart),MeasureFn(DivisionFn(#NUMBER,4),UnitedStatesGallon)).
equal(MeasureFn(#NUMBER,WeekDuration),MeasureFn(MultiplicationFn(#NUMBER,7),DayDuration)).
equal(MeasureFn(#NUMBER,YearDuration),MeasureFn(MultiplicationFn(#NUMBER,365),DayDuration)).
equal(MeasureFn(#NUMBER,AngularDegree),MeasureFn(MultiplicationFn(#NUMBER,DivisionFn(Pi,180)),Radian)).
equal(MeasureFn(#NUMBER,CelsiusDegree),MeasureFn(DivisionFn(SubtractionFn(#NUMBER,32),"1.8"),FahrenheitDegree)).
(Attaching<->Putting).
(BeginNodeFn<->InitialNodeFn).
(Buying<->Selling).
(ChangeOfPossession<->possesses).
(Communication<->ContentDevelopment).
(ContentBearingObject<->containsInformation).
(Creation<->Destruction).
(CutSetFn<->MinimalCutSetFn).
(Day<->DayDuration).
(Day<->DayFn).
(Decreasing<->Removing).
(EndNodeFn<->TerminalNodeFn).
(Fillable<->fills).
(Hour<->HourDuration).
(Hour<->HourFn).
(Increasing<->Putting).
(Interpreting<->Reading).
(IntervalFn<->RecurrentTimeIntervalFn).
(Maintaining<->Repairing).
(MereologicalDifferenceFn<->MereologicalProductFn).
(MereologicalDifferenceFn<->MereologicalSumFn).
(MereologicalProductFn<->MereologicalSumFn).
(Minute<->MinuteDuration).
(Minute<->MinuteFn).
(Month<->MonthFn).
(Second<->SecondDuration).
(Second<->SecondFn).
(Transportation<->TransportationDevice).
(UnilateralGetting<->UnilateralGiving).
(UnitedKingdomGallon<->UnitedStatesGallon).
(WhenFn<->WhereFn).
(Year<->YearDuration).
(Year<->YearFn).
(before<->earlier).
(causes<->causesSubclass).
(confersObligation<->confersRight).
(connected<->meetsSpatially).
(containsInformation<->realization).
(desires<->wants).
(disjoint<->disjointDecomposition).
(disjoint<->disjointRelation).
(disjointDecomposition<->exhaustiveDecomposition).
(element<->member).
(equivalentContentClass<->equivalentContentInstance).
(equivalentContentInstance<->realization).
(exhaustiveDecomposition<->partition).
(hinders<->hindersSubclass).
(hinders<->prevents).
(hindersSubclass<->preventsSubclass).
(holdsDuring<->time).
(holdsObligation<->holdsRight).
(instance<->member).
(located<->time).
(prevents<->preventsSubclass).
(relatedExternalConcept<->relatedInternalConcept).
(subsumesContentClass<->subsumesContentInstance).
(successorAttribute<->successorAttributeClosure).
(AdditionFn($R10xyis)==>($R10xyis-->Quantity)).
(EndFn($R13y5er)==>($R13y5er-->TimePoint)).
(LogFn($R17terw)==>($R17terw-->RealNumber)).
(MaxFn($R184m5o)==>($R184m5o-->Quantity)).
(MinFn($R189imy)==>($R189imy-->Quantity)).
(PerFn($R19uffp)==>($R19uffp-->FunctionQuantity)).
(RelativeTimeFn($R3fll6n)==>($R3fll6n-->TimePosition)).
(TimeIntervalFn($R3tvad6)==>($R3tvad6-->TimeInterval)).
(RelativeComplementFn($R4dxga)==>($R4dxga-->SetOrClass)).
(MereologicalDifferenceFn($R4ga816)==>($R4ga816-->Object)).
(MinimalWeightedPathFn($R4i18kl)==>($R4i18kl-->GraphPath)).
(DivisionFn($R500l11)==>($R500l11-->Quantity)).
(SpeedFn($R5onxdd)==>($R5onxdd-->FunctionQuantity)).
(CenterOfCircleFn($R5rx4as)==>($R5rx4as-->GeometricPoint)).
(CosineFn($R63y81r)==>($R63y81r-->RealNumber)).
(SignumFn($R68fisd)==>($R68fisd-->Integer)).
(GeneralizedIntersectionFn($R6dcqeh)==>($R6dcqeh-->SetOrClass)).
(SuccessorFn($R6mdkry)==>($R6mdkry-->Integer)).
(ComplementFn($R7d4lea)==>($R7d4lea-->SetOrClass)).
(RealNumberFn($R7fa8tt)==>($R7fa8tt-->RealNumber)).
(DensityFn($R7zwths)==>($R7zwths-->FunctionQuantity)).
(InitialNodeFn($R88jp9q)==>($R88jp9q-->GraphNode)).
(IntegerSquareRootFn($R8skd17)==>($R8skd17-->NonnegativeInteger)).
(MagnitudeFn($R9eo4ig)==>($R9eo4ig-->RealNumber)).
(MaximalWeightedPathFn($Ra1e5s9)==>($Ra1e5s9-->GraphPath)).
(WealthFn($Rb35u2z)==>($Rb35u2z-->CurrencyMeasure)).
(TerminalNodeFn($Rbgrkfa)==>($Rbgrkfa-->GraphNode)).
(KappaFn($Rc0ya1f)==>($Rc0ya1f-->Class)).
(AbsoluteValueFn($Rc3b4ou)==>($Rc3b4ou-->NonnegativeRealNumber)).
(SubtractionFn($Rck1wsc)==>($Rck1wsc-->Quantity)).
(ListOrderFn($Rcs43dk)==>($Rcs43dk-->Entity)).
(HoleHostFn($Rdouufk)==>($Rdouufk-->Object)).
(EndNodeFn($Rdq5cl7)==>($Rdq5cl7-->GraphNode)).
(GeneralizedUnionFn($Re5pnr5)==>($Re5pnr5-->SetOrClass)).
(VelocityFn($Re7tet)==>($Re7tet-->FunctionQuantity)).
(ExponentiationFn($Re8tnvh)==>($Re8tnvh-->Quantity)).
(FloorFn($Rev0o9g)==>($Rev0o9g-->Integer)).
(MereologicalProductFn($Rf2llvy)==>($Rf2llvy-->Object)).
(CeilingFn($Rg7wa4l)==>($Rg7wa4l-->Integer)).
(PropertyFn($Rhninbx)==>($Rhninbx-->Set)).
(FrontFn($Rhp9t4h)==>($Rhp9t4h-->SelfConnectedObject)).
(IntersectionFn($Rhw3hdb)==>($Rhw3hdb-->SetOrClass)).
(SquareRootFn($Ri7dkbd)==>($Ri7dkbd-->Number)).
(ReciprocalFn($Ri82qoy)==>($Ri82qoy-->Quantity)).
(ListLengthFn($Rid4jx0)==>($Rid4jx0-->NonnegativeInteger)).
(ListConcatenateFn($Rievs5b)==>($Rievs5b-->List)).
(HoleSkinFn($Ritz02t)==>($Ritz02t-->Object)).
(ImmediateFutureFn($Rjgu5ic)==>($Rjgu5ic-->TimeInterval)).
(RoundFn($Rkl5dm2)==>($Rkl5dm2-->Quantity)).
(ImaginaryPartFn($Rkytlys)==>($Rkytlys-->ImaginaryNumber)).
(LeastCommonMultipleFn($Rl9dkyc)==>($Rl9dkyc-->Integer)).
(BeginNodeFn($Rlemonn)==>($Rlemonn-->GraphNode)).
(CardinalityFn($Rlhxhau)==>($Rlhxhau-->Number)).
(WhereFn($Rlsbi1d)==>($Rlsbi1d-->Region)).
(GreatestCommonDivisorFn($Rmjhv6q)==>($Rmjhv6q-->Integer)).
(UnionFn($Rmsf5xz)==>($Rmsf5xz-->SetOrClass)).
(ExtensionFn($Rnbpdtz)==>($Rnbpdtz-->Class)).
(BeginFn($Rnqpyy9)==>($Rnqpyy9-->TimePoint)).
(AssignmentFn($Rnt53sb)==>($Rnt53sb-->Entity)).
(MereologicalSumFn($Ro77faq)==>($Ro77faq-->Object)).
(NumeratorFn($Rp7l24x)==>($Rp7l24x-->Integer)).
(PathWeightFn($Rpcjad7)==>($Rpcjad7-->Quantity)).
(MilliFn($Rpx9sq3)==>($Rpx9sq3-->UnitOfMeasure)).
(MicroFn($Rq23zp0)==>($Rq23zp0-->UnitOfMeasure)).
(FutureFn($Rr0shzf)==>($Rr0shzf-->TimeInterval)).
(WhenFn($Rs75iym)==>($Rs75iym-->TimeInterval)).
(PremisesFn($Rsl054m)==>($Rsl054m-->Proposition)).
(UnitFn($Rt1vbsk)==>($Rt1vbsk-->UnitOfMeasure)).
(ImmediatePastFn($Rtgquzv)==>($Rtgquzv-->TimeInterval)).
(MeasureFn($Rtk9ina)==>($Rtk9ina-->PhysicalQuantity)).
(TeraFn($Rtnpqqg)==>($Rtnpqqg-->UnitOfMeasure)).
(ProbabilityFn($Ru0k6v1)==>($Ru0k6v1-->RealNumber)).
(SineFn($Ru2mnqj)==>($Ru2mnqj-->RealNumber)).
(DenominatorFn($Rue5dim)==>($Rue5dim-->Integer)).
(PicoFn($Rvhyccz)==>($Rvhyccz-->UnitOfMeasure)).
(PastFn($Rvm2dly)==>($Rvm2dly-->TimeInterval)).
(TangentFn($Rvyyuod)==>($Rvyyuod-->RealNumber)).
(ImmediateFamilyFn($Rwebx1f)==>($Rwebx1f-->FamilyGroup)).
(MultiplicationFn($Rwjqgwe)==>($Rwjqgwe-->Quantity)).
(NanoFn($Rwk8x1g)==>($Rwk8x1g-->UnitOfMeasure)).
(PredecessorFn($Rwn8ec1)==>($Rwn8ec1-->Integer)).
(BackFn($Rws4kdr)==>($Rws4kdr-->SelfConnectedObject)).
(MegaFn($Rwz84cm)==>($Rwz84cm-->UnitOfMeasure)).
(ListFn($Rxduifu)==>($Rxduifu-->List)).
(GovernmentFn($Rxi6ds7)==>($Rxi6ds7-->Government)).
(RationalNumberFn($Rxpoaqn)==>($Rxpoaqn-->RationalNumber)).
(KiloFn($Rxv0pg7)==>($Rxv0pg7-->UnitOfMeasure)).
(RemainderFn($Rz4o19)==>($Rz4o19-->Quantity)).
(GigaFn($Rz9tdms)==>($Rz9tdms-->UnitOfMeasure)).
(version(#ARTIFACT1,#ARTIFACT2)==>(#1-->#2)).
(knows(#AGENT,#FORMULA)==>believes(#AGENT,#FORMULA)).
(knows(#AGENT,#FORMULA)==>truth(#FORMULA,True)).
(needs(#AGENT,#OBJECT)==>wants(#AGENT,#OBJECT)).
(wears(#AGENT,#WI)==>located(#WI,#AGENT)).
(successorAttribute(#ATTR1,#ATTR2)==>successorAttributeClosure(#ATTR1,#ATTR2)).
(father(#CHILD,#FATHER)==>attribute(#FATHER,Male)).
(mother(#CHILD,#MOTHER)==>attribute(#MOTHER,Female)).
(daughter(#CHILD,#PARENT)==>attribute(#CHILD,Female)).
(parent(#CHILD,#PARENT)==>ancestor(#CHILD,#PARENT)).
(son(#CHILD,#PARENT)==>attribute(#CHILD,Male)).
(hole(#HOLE,#OBJ)==>connected(#HOLE,#OBJ)).
(overlapsPartially(#OBJ1,#OBJ2)==>overlapsSpatially(#OBJ1,#OBJ2)).
(destination(#PROCESS,#LOC)==>eventPartlyLocated(#PROCESS,#LOC)).
(origin(#PROCESS,#LOC)==>eventPartlyLocated(#PROCESS,#LOC)).
(penetrates(#X,#Y)==>meetsSpatially(#X,#Y)).
(modalAttribute(#FORMULA,Necessity)==>modalAttribute(#FORMULA,Possibility)).
(modalAttribute(#FORMULA,Obligation)==>modalAttribute(#FORMULA,Permission)).
(modalAttribute(#FORMULA,Permission)==>modalAttribute(#FORMULA,Possibility)).
(hasSkill(#PROC,#AGENT)==>capability(#PROC,agent,#AGENT)).
(attribute(#X,Flammable)==>capability(Combustion,patient,#X)).
(occupiesPosition(#AGENT,#POSITION,#ORG)==>attribute(#AGENT,#POSITION)).
(confersObligation(#FORMULA,#AGENT1,#AGENT2)==>holdsObligation(#FORMULA,#AGENT2)).
(confersRight(#FORMULA,#AGENT1,#AGENT2)==>holdsRight(#FORMULA,#AGENT2)).
(occupiesPosition(#PERSON,#POSITION,#ORGANIZATION)==>member(#PERSON,#ORGANIZATION)).
(representsForAgent(#REP,#ENTITY,#AGENT)==>represents(#REP,#ENTITY)).
(orientation(#OBJ1,#OBJ2,On)==>connected(#OBJ1,#OBJ2)).
(orientation(#OBJ1,#OBJ2,On)==>located(#OBJ1,#OBJ2)).
(connects(#ARC,#NODE1,#NODE2)==>connects(#ARC,#NODE2,#NODE1)).
(between(#END1,#MID,#END2)==>between(#END2,#MID,#END1)).
(links(#NODE1,#NODE2,#ARC)==>links(#NODE2,#NODE1,#ARC)).
(depth(#OBJ1,#OBJ2,#DEPTH)==>orientation(#OBJ1,#OBJ2,Below)).
(altitude(#OBJ1,#OBJ2,#HEIGHT)==>orientation(#OBJ1,#OBJ2,Above)).
(distance(#OBJ1,#OBJ2,#QUANT)==>distance(#OBJ2,#OBJ1,#QUANT)).
(geometricDistance(#POINT1,#POINT2,#LENGTH)==>geometricDistance(#POINT2,#POINT1,#LENGTH)).
(orientation(#OBJ1,#OBJ2,Near)==>orientation(#OBJ2,#OBJ1,Near)).
(betweenOnPath(#OBJ1,#OBJ2,#OBJ3,#PATH)==>between(#OBJ1,#OBJ2,#OBJ3)).
(possesses(#PERSON,#OBJ)==>modalAttribute(uses(#OBJ,#PERSON),Permission)).
(equal(EditionFn(#TEXT1,#NUMBER),#TEXT2)==>subsumesContentClass(#TEXT1,#TEXT2)).
(wants(#AGENT,#OBJ)==>exists(#PURP,hasPurposeForAgent(#OBJ,#PURP,#AGENT))).
(employs(#ORG,#PERSON)==>exists(#POSITION,occupiesPosition(#PERSON,#POSITION,#ORG))).
(hasPurpose(#THING,#PURPOSE)==>exists(#AGENT,hasPurposeForAgent(#THING,#PURPOSE,#AGENT))).
(causes(#P1,#P2)==>earlier(WhenFn(#P1),WhenFn(#P2))).
(subProcess(#SUBPROC,#PROC)==>temporalPart(WhenFn(#SUBPROC),WhenFn(#PROC))).
(representsInLanguage(#REP,#ENTITY,#LANGUAGE)==>exists(#AGENT,representsForAgent(#REP,#ENTITY,#AGENT))).
(equal(PredecessorFn(#INT1),PredecessorFn(#INT2))==>equal(#INT1,#INT2)).
(equal(SuccessorFn(#INT1),SuccessorFn(#INT2))==>equal(#INT1,#INT2)).
(equal(SquareRootFn(#NUMBER1),#NUMBER2)==>equal(MultiplicationFn(#NUMBER2,#NUMBER2),#NUMBER1)).
(believes(#AGENT,#FORMULA)==>exists(#TIME,holdsDuring(#TIME,considers(#AGENT,#FORMULA)))).
(inList(#ITEM,#LIST)==>exists(#NUMBER,equal(ListOrderFn(#LIST,#NUMBER),#ITEM))).
(holdsDuring(#TIME,leader(#X,#Y))==>holdsDuring(#TIME,attribute(#Y,Living))).
(exists(#TIME,holdsDuring(#TIME,fills(#OBJ,#HOLE)))==>attribute(#HOLE,Fillable)).
(equal(RemainderFn(#NUMBER1,#NUMBER2),#NUMBER)==>equal(SignumFn(#NUMBER2),SignumFn(#NUMBER))).
(measure(#OBJECT,VelocityFn(#DISTANCE,#TIME,#REF,#DIRECTION))==>measure(#OBJECT,SpeedFn(#DISTANCE,#TIME))).
(parent(#CHILD,#PARENT)==>before(BeginFn(WhenFn(#PARENT)),BeginFn(WhenFn(#CHILD)))).
(modalAttribute(#FORMULA,Likely)==>greaterThan(ProbabilityFn(truth(#FORMULA,True)),ProbabilityFn(truth(#FORMULA,False)))).
(modalAttribute(#FORMULA,Unlikely)==>greaterThan(ProbabilityFn(truth(#FORMULA,False)),ProbabilityFn(truth(#FORMULA,True)))).
(origin(#PROCESS,#OBJ)==>eventLocated(WhereFn(#PROCESS,BeginFn(WhenFn(#PROCESS))),WhereFn(#OBJ,BeginFn(WhenFn(#OBJ))))).
((contraryAttribute("@ROW1")&&identicalListItems(ListFn("@ROW1"),ListFn("@ROW2")))==>contraryAttribute("@ROW2")).
((rangeSubclass(#REL,#CLASS1)&&rangeSubclass(#REL,#CLASS2))==>(#1-->#2)).
((wears(#A,#C)&&part(#P,#C))==>wears(#A,#P)).
((parent(#CHILD,#PARENT)&&attribute(#PARENT,Female))==>mother(#CHILD,#PARENT)).
((parent(#CHILD,#PARENT)&&attribute(#PARENT,Male))==>father(#CHILD,#PARENT)).
((graphPart(#ELEMENT,#GRAPH1)&&subGraph(#GRAPH1,#GRAPH2))==>graphPart(#ELEMENT,#GRAPH2)).
((entails(#FORMULA1,#FORMULA2)&&modalAttribute(#FORMULA1,#PROP))==>modalAttribute(#FORMULA2,#PROP)).
((properPart(#HOLE2,#HOLE1)&&fills(#OBJ,#HOLE1))==>completelyFills(#OBJ,#HOLE2)).
((fills(#OBJ1,#HOLE)&&properPart(#OBJ2,#OBJ1))==>properlyFills(#OBJ2,#HOLE)).
((properlyFills(#OBJ1,#HOLE)&&connected(#OBJ2,#OBJ1))==>connected(#HOLE,#OBJ2)).
((sibling(#ORG1,#ORG2)&&parent(#ORG1,#PARENT))==>parent(#ORG2,#PARENT)).
((systemPart(#PART,#SUB)&&subSystem(#SUB,#SYSTEM))==>systemPart(#PART,#SYSTEM)).
((valence(#PRED1,#NUMBER)&&subrelation(#PRED1,#PRED2))==>valence(#PRED2,#NUMBER)).
((subrelation(#REL1,#REL2)&&rangeSubclass(#REL2,#CLASS1))==>rangeSubclass(#REL1,#CLASS1)).
((subProcess(#S1,#P)&&subProcess(#S2,#P))==>relatedEvent(#S1,#S2)).
((entails(#SITUATION1,#SITUATION2)&&holdsDuring(#TIME,#SITUATION1))==>holdsDuring(#TIME,#SITUATION2)).
((holdsDuring(#TIME1,#SITUATION)&&temporalPart(#TIME2,#TIME1))==>holdsDuring(#TIME2,#SITUATION)).
((boilingPoint(#TYPE,#BOIL)&&meltingPoint(#TYPE,#MELT))==>greaterThanOrEqualTo(#BOIL,#MELT)).
((domainSubclass(#REL,#NUMBER,#CLASS1)&&domainSubclass(#REL,#NUMBER,#CLASS2))==>(#1-->#2)).
(pointOfIntersection(#FIGURE1,#FIGURE2,#POINT)==>(pointOfFigure(#POINT,#FIGURE1)&&pointOfFigure(#POINT,#FIGURE2))).
((subrelation(#REL1,#REL2)&&domainSubclass(#REL2,#NUMBER,#CLASS1))==>domainSubclass(#REL1,#NUMBER,#CLASS1)).
((rangeSubclass(#FUNCTION,#CLASS)&&equal(AssignmentFn(#FUNCTION,"@ROW"),#VALUE))==>(#1-->#2)).
((domain(#REL,(#CLASS1,#NUMBER))&&domain(#REL,(#CLASS2,#NUMBER)))==>(#1-->#2)).
((greaterThanByQuality(#E1,#E2,#ATT)&&greaterThanByQuality(#E2,#E3,#ATT))==>greaterThanByQuality(#E1,#E3,#ATT)).
((&&,#1,#2,(rangeSubclass(#REL1,#CLASS1)&&rangeSubclass(#REL2,#CLASS2)))==>disjointRelation(#REL1,#REL2)).
(exploits(#OBJ,#AGENT)==>exists(#PROCESS,(agent(#PROCESS,#AGENT)&&resource(#PROCESS,#OBJ)))).
(uses(#OBJ,#AGENT)==>exists(#PROC,(agent(#PROC,#AGENT)&&instrument(#PROC,#OBJ)))).
(partiallyFills(#OBJ,#HOLE1)==>exists(#HOLE2,(part(#HOLE2,#HOLE1)&&completelyFills(#OBJ,#HOLE2)))).
(properlyFills(#OBJ,#HOLE1)==>exists(#HOLE2,(part(#HOLE2,#HOLE1)&&fills(#OBJ,#HOLE2)))).
(completelyFills(#OBJ1,#HOLE)==>exists(#OBJ2,(fills(#OBJ2,#HOLE)&&part(#OBJ2,#OBJ1)))).
(familyRelation(#ORGANISM1,#ORGANISM2)==>exists(#ORGANISM3,(ancestor(#ORGANISM3,#ORGANISM1)&&ancestor(#ORGANISM3,#ORGANISM2)))).
(eventPartlyLocated(#PROC,#OBJ)==>exists(#SUB,(eventLocated(#SUB,#OBJ)&&subProcess(#SUB,#PROC)))).
(transactionAmount(#TRANS,#AMOUNT)==>exists(#OBJ,(monetaryValue(#OBJ,#AMOUNT)&&patient(#TRANS,#OBJ)))).
((subrelation(#PRED1,#PRED2)&&domain(#PRED2,(#CLASS1,#NUMBER)))==>domain(#PRED1,(#CLASS1,#NUMBER))).
((&&,overlapsSpatially(#HOLE1,#HOLE2),hole(#HOLE1,#OBJ1),hole(#HOLE2,#OBJ2))==>overlapsSpatially(#OBJ1,#OBJ2)).
((&&,#1,#2,(domainSubclass(#REL1,#NUMBER,#CLASS1)&&domainSubclass(#REL2,#NUMBER,#CLASS2)))==>disjointRelation(#REL1,#REL2)).
(depth(#OBJ1,#OBJ2,#DEPTH)==>exists(#BOTTOM,(bottom(#BOTTOM,#OBJ1)&&distance(#BOTTOM,#OBJ2,#DEPTH)))).
(altitude(#OBJ1,#OBJ2,#HEIGHT)==>exists(#TOP,(top(#TOP,#OBJ1)&&distance(#TOP,#OBJ2,#HEIGHT)))).
((&&,bottom(#BOTTOM,#OBJECT),height(#OBJECT,#HEIGHT),top(#TOP,#OBJECT))==>distance(#TOP,#BOTTOM,#HEIGHT)).
((&&,#1,#2,(domain(#REL1,(#CLASS1,#NUMBER))&&domain(#REL2,(#CLASS2,#NUMBER))))==>disjointRelation(#REL1,#REL2)).
(graphMeasure(#G,#M)==>forall(#AC,(graphPart(#AC,#G)&&exists(#PC,abstractCounterpart(#AC,#PC))))).
((equal(#MONTH1,MonthFn(April,#YEAR))&&equal(#MONTH2,MonthFn(May,#YEAR)))==>meetsTemporally(#MONTH1,#MONTH2)).
((&&,decreasesLikelihood(#FORMULA1,#FORMULA2),conditionalProbability(#FORMULA1,#FORMULA2,#NUMBER2),equal(ProbabilityFn(#FORMULA2),#NUMBER1))==>lessThan(#NUMBER2,#NUMBER1)).
((&&,increasesLikelihood(#FORMULA1,#FORMULA2),conditionalProbability(#FORMULA1,#FORMULA2,#NUMBER2),equal(ProbabilityFn(#FORMULA2),#NUMBER1))==>greaterThan(#NUMBER2,#NUMBER1)).
((&&,independentProbability(#FORMULA1,#FORMULA2),conditionalProbability(#FORMULA1,#FORMULA2,#NUMBER2),equal(ProbabilityFn(#FORMULA2),#NUMBER1))==>equal(#NUMBER2,#NUMBER1)).
(during(#INTERVAL1,#INTERVAL2)==>(before(EndFn(#INTERVAL1),EndFn(#INTERVAL2))&&before(BeginFn(#INTERVAL2),BeginFn(#INTERVAL1)))).
(equal(ImmediateFamilyFn(#PERSON),#FAMILY)==>exists(#MEMBER,(&&,member(#MEMBER,#FAMILY),parent(#MEMBER,#PERSON),parent(#PERSON,#MEMBER)))).
((equal(BeginFn(#INTERVAL1),BeginFn(#INTERVAL2))&&equal(EndFn(#INTERVAL1),EndFn(#INTERVAL2)))==>equal(#INTERVAL1,#INTERVAL2)).
((hole(#HOLE,#OBJ1)&&hole(#HOLE,#OBJ2))==>exists(#OBJ3,(hole(#HOLE,#OBJ3)&&properPart(#OBJ3,MereologicalProductFn(#OBJ1,#OBJ2))))).
((successorAttributeClosure(#ATTR2,#ATTR1)&&holdsDuring(#TIME1,developmentalForm(#OBJ,#ATTR1)))==>exists(#TIME2,(earlier(#TIME2,#TIME1)&&holdsDuring(#TIME2,developmentalForm(#OBJ,#ATTR2))))).
((successorAttribute(#ATTR1,#ATTR2)&&holdsDuring(#TIME1,property(#ENTITY,#ATTR2)))==>exists(#TIME2,(temporalPart(#TIME2,PastFn(#TIME1))&&holdsDuring(#TIME2,property(#ENTITY,#ATTR1))))).
((&&,resource(#PROC,#OBJ),holdsDuring(BeginFn(WhenFn(#PROC)),measure(#OBJ,#QUANT1)),holdsDuring(EndFn(WhenFn(#PROC)),measure(#OBJ,#QUANT2)))==>greaterThan(#QUANT1,#QUANT2)).
((&&,equal(#LIST1,#LIST2),equal(#LIST1,ListFn("@ROW1")),equal(#LIST2,ListFn("@ROW2")))==>forall(#NUMBER,equal(ListOrderFn(ListFn("@ROW1"),#NUMBER),ListOrderFn(ListFn("@ROW2"),#NUMBER)))).
(connectedEngineeringComponents(#COMP1,#COMP2)==>((--,engineeringSubcomponent(#COMP1,#COMP2))&&(--,engineeringSubcomponent(#COMP2,#COMP1)))).
((||,attribute(#AGENT,Asleep),attribute(#AGENT,Awake))==>attribute(#AGENT,Living)).
(superficialPart(#OBJ1,#OBJ2)==>((--,interiorPart(#OBJ1,#OBJ2))&&(--,exists(#OBJ3,interiorPart(#OBJ3,#OBJ1))))).
((&&,(--,connected(#PART,#BOTTOM)),bottom(#BOTTOM,#OBJECT),part(#PART,#OBJECT))==>orientation(#PART,#BOTTOM,Above)).
((&&,(--,connected(#PART,#TOP)),part(#PART,#OBJECT),top(#TOP,#OBJECT))==>orientation(#PART,#TOP,Below)).
((&&,(--,connected(#PART,#SIDE)),part(#PART,#OBJECT),side(#SIDE,#OBJECT))==>exists(#DIRECT,orientation(#SIDE,#PART,#DIRECT))).
(holdsDuring(#TIME,confersNorm(#ENTITY,#FORMULA,#NORM))==>(holdsDuring(ImmediateFutureFn(#TIME),modalAttribute(#FORMULA,#NORM))&&holdsDuring(ImmediatePastFn(#TIME),(--,modalAttribute(#FORMULA,#NORM))))).
(holdsDuring(#TIME,deprivesNorm(#ENTITY,#FORMULA,#NORM))==>(holdsDuring(ImmediatePastFn(#TIME),modalAttribute(#FORMULA,#NORM))&&holdsDuring(ImmediateFutureFn(#TIME),(--,modalAttribute(#FORMULA,#NORM))))).
((&&,(--,equal(#ORGANISM1,#ORGANISM2)),(--,equal(#PARENT1,#PARENT2)),parent(#ORGANISM1,#PARENT1),parent(#ORGANISM1,#PARENT2),parent(#ORGANISM2,#PARENT1),parent(#ORGANISM2,#PARENT2))==>sibling(#ORGANISM1,#ORGANISM2)).
((#1-->#2)==>(#1-->[SetOrClass])).
(part(#SUBSTANCE,#MIXTURE)==>(#1-->[PureSubstance])).
((#1-->[CaseRole])==>subrelation(#R,involvedInEvent)).
((#1-->[Man])==>attribute(#MAN,Male)).
((#1-->[Solution])==>attribute(#OBJ,Liquid)).
((#1-->[Woman])==>attribute(#WOMAN,Female)).
((#1-->[Cloud])==>capability(Seeing,patient,#CLOUD)).
((#1-->[CognitiveAgent])==>capability(Reasoning,agent,#AGENT)).
((#1-->[MilitaryForce])==>capability(ViolentContest,agent,#ORG)).
((#1-->[MusicalInstrument])==>capability(MakingMusic,instrument,#INSTRUMENT)).
((#1-->[SentientAgent])==>capability(Perception,experiencer,#AGENT)).
((#1-->[TransportationDevice])==>capability(Transportation,instrument,#DEVICE)).
((#1-->[Weapon])==>capability(Damaging,instrument,#WEAPON)).
((#1-->[Integer])==>greaterThan(#INT,PredecessorFn(#INT))).
((#1-->[Integer])==>lessThan(#INT,SuccessorFn(#INT))).
((#1-->[NonNullSet])==>exists(#INST,(#1-->[#2]))).
((#1-->[SelfConnectedObject])==>side(BackFn(#OBJ),#OBJ)).
((#1-->[SelfConnectedObject])==>side(FrontFn(#OBJ),#OBJ)).
((#1-->[TimeInterval])==>meetsTemporally(#INTERVAL,FutureFn(#INTERVAL))).
((#1-->[TimeInterval])==>meetsTemporally(PastFn(#INTERVAL),#INTERVAL)).
(equal(#QUANT,MeasureFn(#N,AngularDegree))==>(#1-->[PlaneAngleMeasure])).
(equal(#QUANTITY,MeasureFn(#NUMBER,Becquerel))==>(#1-->[TimeDependentQuantity])).
(equal(#QUANTITY,MeasureFn(#NUMBER,Coulomb))==>(#1-->[TimeDependentQuantity])).
((#1-->[Circle])==>exists(#R,radius(#C,#R))).
((#1-->[Collection])==>exists(#OBJ,member(#OBJ,#COLL))).
((#1-->[ContentBearingPhysical])==>exists(#THING,represents(#OBJ,#THING))).
((#1-->[Creation])==>exists(#RESULT,result(#ACTION,#RESULT))).
((#1-->[Currency])==>exists(#MEASURE,monetaryValue(#CURRENCY,#MEASURE))).
((#1-->[Demonstrating])==>exists(#PERSON,attends(#DEMO,#PERSON))).
((#1-->[Graph])==>(MinimalCutSetFn(#1)-->CutSetFn(#1))).
((#1-->[Hole])==>exists(#HOLE2,properPart(#HOLE2,#HOLE1))).
((#1-->[Organ])==>exists(#PURP,hasPurpose(#ORGAN,#PURP))).
((#1-->[Organism])==>exists(#PARENT,parent(#ORGANISM,#PARENT))).
((#1-->[PermanentResidence])==>exists(#PERSON,home(#PERSON,#RESIDENCE))).
((#1-->[Process])==>exists(#PROC2,causes(#PROC2,#PROC1))).
((#1-->[Region])==>exists(#PHYS,located(#PHYS,#REGION))).
((#1-->[SingleAgentProcess])==>exists(#AGENT,agent(#PROC,#AGENT))).
((#1-->[Agent])==>exists(#PROC,capability(#PROC,agent,#AGENT))).
((#1-->[Device])==>exists(#PROC,capability(#PROC,instrument,#DEVICE))).
((#1-->[Integer])==>equal(#INT,SuccessorFn(PredecessorFn(#INT)))).
((#1-->[Integer])==>equal(#INT,PredecessorFn(SuccessorFn(#INT)))).
((#1-->[TimeInterval])==>before(BeginFn(#INTERVAL),EndFn(#INTERVAL))).
((#1-->[TimeInterval])==>starts(ImmediateFutureFn(#INTERVAL),FutureFn(#INTERVAL))).
((#1-->[TimeInterval])==>finishes(ImmediatePastFn(#INTERVAL),PastFn(#INTERVAL))).
((#1-->[Circle])==>exists(#P,equal(CenterOfCircleFn(#C),#P))).
(equal(MaximalWeightedPathFn(#NODE1,#NODE2),#PATH)==>(#1-->[GraphPathFn(#2,#3)])).
(equal(MinimalWeightedPathFn(#NODE1,#NODE2),#PATH)==>(#1-->[GraphPathFn(#2,#3)])).
((#1-->[EngineeringConnection])==>exists(((#COMP2)-->#COMP1),connectsEngineeringComponents(#CONNECTION,#COMP1,#COMP2))).
((#1-->[GraphArc])==>exists(((#NODE2)-->#NODE1),links(#NODE1,#NODE2,#ARC))).
((#1-->[GraphNode])==>exists(((#ARC)-->#OTHER),links(#NODE,#OTHER,#ARC))).
((#1-->[TimeInterval])==>equal(FutureFn(#INTERVAL),TimeIntervalFn(EndFn(#INTERVAL),PositiveInfinity))).
((#1-->[TimeInterval])==>equal(PastFn(#INTERVAL),TimeIntervalFn(NegativeInfinity,BeginFn(#INTERVAL)))).
(equal(#CLASS1,#CLASS2)==>forall(#THING,"<=>"((#1-->[#2]),(#1-->[#2])))).
(piece(#SUBSTANCE1,#SUBSTANCE2)==>forall(#CLASS,"=>"((#1-->[#2]),(#1-->[#2])))).
(equal(#THING1,#THING2)==>forall(#CLASS,"<=>"((#1-->[#2]),(#1-->[#2])))).
((#1-->[PlaneAngleMeasure])==>equal(TangentFn(#DEGREE),DivisionFn(SineFn(#DEGREE),CosineFn(#DEGREE)))).
((#1-->[IrreflexiveRelation])==>forall(#INST,(--,((#INST,#INST)-->#REL)))).
((patient(#PUB,#TEXT)&&(#1-->[Publication]))==>(#1-->Text)).
((((#AGENT,#FORMULA)-->#REL)&&(#1-->[PropositionalAttitude]))==>(#1-->[Formula])).
((((#AGENT,#THING)-->#REL)&&(#1-->[ObjectAttitude]))==>(#1-->[Physical])).
((attribute(#AGENT,#ATTR)&&(#1-->[PsychologicalAttribute]))==>(#1-->[SentientAgent])).
((member(#AGENT,#ORG)&&(#1-->[Organization]))==>(#1-->[Agent])).
((inhabits(#BACTERIUM,#OBJ)&&(#1-->[Bacterium]))==>(#1-->[Organism])).
((inhabits(#FUNGUS,#OBJ)&&(#1-->[Fungus]))==>(#1-->[Organism])).
((agent(#GRAD,#ORG)&&(#1-->[Graduation]))==>(#1-->[EducationalOrganization])).
((patient(#INVESTIGATE,#PROP)&&(#1-->[Investigating]))==>(#1-->[Formula])).
((agent(#LEARN,#AGENT)&&(#1-->[Learning]))==>(#1-->[CognitiveAgent])).
((agent(#MAT,#ORG)&&(#1-->[Matriculation]))==>(#1-->[EducationalOrganization])).
((member(#MEMB,#GROUP)&&(#1-->[Group]))==>(#1-->[Agent])).
((member(#MEMBER,#GROUP)&&(#1-->[GroupOfPeople]))==>(#1-->[Human])).
((attribute(#ORG,#ATT)&&(#1-->[BiologicalAttribute]))==>(#1-->[OrganicObject])).
((agent(#PERCEPT,#AGENT)&&(#1-->[Perception]))==>(#1-->[Animal])).
((attribute(#PERSON,#ATTRIBUTE)&&(#1-->[SocialRole]))==>(#1-->[Human])).
((experiencer(#PROC,#ORG)&&(#1-->[BiologicalProcess]))==>(#1-->[Organism])).
((inhabits(#VIRUS,#OBJ)&&(#1-->[Virus]))==>(#1-->[Organism])).
((resource(#ACT,#FOOD)&&(#1-->[Drinking]))==>attribute(#FOOD,Liquid)).
((resource(#ACT,#FOOD)&&(#1-->[Eating]))==>attribute(#FOOD,Solid)).
((agent(#AMBULATE,#AGENT)&&(#1-->[Ambulating]))==>attribute(#AGENT,Standing)).
((agent(#BUY,#AGENT)&&(#1-->[Buying]))==>destination(#BUY,#AGENT)).
((agent(#GET,#AGENT)&&(#1-->[Getting]))==>destination(#GET,#AGENT)).
((agent(#GIVE,#AGENT)&&(#1-->[Giving]))==>origin(#GIVE,#AGENT)).
((patient(#MOTION,#OBJ)&&(#1-->[GasMotion]))==>attribute(#OBJ,Gas)).
((patient(#MOTION,#OBJ)&&(#1-->[LiquidMotion]))==>attribute(#OBJ,Liquid)).
((partlyLocated(#OBJ1,#OBJ2)&&(#1-->[Object]))==>overlapsSpatially(#OBJ1,#OBJ2)).
((patient(#ORDER,#FORMULA)&&(#1-->[Ordering]))==>modalAttribute(#FORMULA,Obligation)).
((agent(#SELL,#AGENT)&&(#1-->[Selling]))==>origin(#SELL,#AGENT)).
(((#1-->[CompositeUnitOfMeasure])&&(#1-->[UnitOfMeasureMultiplier]))==>(((#1)-->#2)-->[CompositeUnitOfMeasure])).
(((#1-->[NonCompositeUnitOfMeasure])&&(#1-->[UnitOfMeasureMultiplier]))==>(((#1)-->#2)-->[NonCompositeUnitOfMeasure])).
((GreatestCommonDivisorFn("@ROW")&&inList(#ELEMENT,ListFn("@ROW")))==>(#1-->[Number])).
((LeastCommonMultipleFn("@ROW")&&inList(#ELEMENT,ListFn("@ROW")))==>(#1-->[Number])).
((contraryAttribute("@ROW")&&inList(#ELEMENT,ListFn("@ROW")))==>(#1-->[Attribute])).
((disjointDecomposition("@ROW")&&inList(#ELEMENT,ListFn("@ROW")))==>(#1-->[Class])).
((exhaustiveDecomposition("@ROW")&&inList(#ELEMENT,ListFn("@ROW")))==>(#1-->[Class])).
((resource(#ACT,#FOOD)&&(#1-->[Ingesting]))==>(#1-->[FoodForFn(Organism)])).
((orientation(#O1,#O2,#P)&&(#1-->[SymmetricPositionalAttribute]))==>orientation(#O2,#O1,#P)).
(((#1-->[CompositeUnitOfMeasure])&&(#1-->[MeasureFn(#2,#3)]))==>(#1-->[FunctionQuantity])).
(((#1-->[NonCompositeUnitOfMeasure])&&(#1-->[MeasureFn(#2,#3)]))==>(#1-->[ConstantQuantity])).
((#1-->[AbnormalAnatomicalStructure])==>exists(#PROC,(result(#PROC,#STRUCTURE)&&(#1-->[PathologicProcess])))).
((#1-->[Alga])==>exists(#WATER,(inhabits(#ALGA,#WATER)&&(#1-->[Water])))).
((#1-->[AnatomicalStructure])==>exists(#CELL,(part(#CELL,#PART)&&(#1-->[Cell])))).
((#1-->[Animal])==>exists(#ATTR,(attribute(#ANIMAL,#ATTR)&&(#1-->[SexAttribute])))).
((#1-->[Artifact])==>exists(#MAKING,(result(#MAKING,#ARTIFACT)&&(#1-->[Making])))).
((#1-->[Attaching])==>exists(#OBJ,(patient(#ATTACH,#OBJ)&&(#1-->[CorpuscularObject])))).
((#1-->[AttachingDevice])==>exists(#ATTACH,(instrument(#ATTACH,#DEVICE)&&(#1-->[Attaching])))).
((#1-->[Attack])==>exists(#CONTEST,(subProcess(#ATTACK,#CONTEST)&&(#1-->[ViolentContest])))).
((#1-->[Battle])==>exists(#ATTACK,(subProcess(#ATTACK,#BATTLE)&&(#1-->[ViolentContest])))).
((#1-->[Battle])==>exists(#WAR,(subProcess(#BATTLE,#WAR)&&(#1-->[War])))).
((#1-->[BiologicalProcess])==>exists(#OBJ,(eventLocated(#PROC,#OBJ)&&(#1-->[Organism])))).
((#1-->[BodyMotion])==>exists(#AGENT,(agent(#MOTION,#AGENT)&&(#1-->[Organism])))).
((#1-->[BodyPart])==>exists(#PROC,(result(#PROC,#PART)&&(#1-->[PhysiologicProcess])))).
((#1-->[Boiling])==>exists(#HEAT,(subProcess(#HEAT,#BOIL)&&(#1-->[Heating])))).
((#1-->[Bone])==>exists(#VERT,(part(#BONE,#VERT)&&(#1-->[Vertebrate])))).
((#1-->[Carrying])==>exists(#ANIMAL,(instrument(#CARRY,#ANIMAL)&&(#1-->[Animal])))).
((#1-->[Clothing])==>exists(#FABRIC,(part(#FABRIC,#CLOTHING)&&(#1-->[Fabric])))).
((#1-->[Combining])==>exists(#OBJ,(patient(#COMBINE,#OBJ)&&(#1-->[SelfConnectedObject])))).
((#1-->[CommercialService])==>exists(#AGENT,(agent(#BUSINESS,#AGENT)&&(#1-->[CommercialAgent])))).
((#1-->[ComputerProgramming])==>exists(#C,(result(#CP,#C)&&(#1-->[ComputerProgram])))).
((#1-->[Condensing])==>exists(#COOL,(subProcess(#COOL,#COND)&&(#1-->[Cooling])))).
((#1-->[Confining])==>exists(#AGENT,(patient(#CONFINE,#AGENT)&&(#1-->[Animal])))).
((#1-->[ConstructedLanguage])==>exists(#PLAN,(result(#PLAN,#LANG)&&(#1-->[Planning])))).
((#1-->[ContentDevelopment])==>exists(#OBJ,(result(#DEVELOP,#OBJ)&&(#1-->[ContentBearingObject])))).
((#1-->[County])==>exists(#LAND,(properPart(#STATE,#LAND)&&(#1-->[StateOrProvince])))).
((#1-->[DefensiveManeuver])==>exists(#CONTEST,(subProcess(#DEFENSE,#CONTEST)&&(#1-->[ViolentContest])))).
((#1-->[Detaching])==>exists(#OBJ,(patient(#DETACH,#OBJ)&&(#1-->[CorpuscularObject])))).
((#1-->[Digesting])==>exists(#DECOMP,(subProcess(#DECOMP,#DIGEST)&&(#1-->[ChemicalDecomposition])))).
((#1-->[Driving])==>exists(#VEHICLE,(patient(#DRIVE,#VEHICLE)&&(#1-->[Vehicle])))).
((#1-->[EngineeringComponent])==>exists(#DEVICE,(component(#COMP,#DEVICE)&&(#1-->[Device])))).
((#1-->[FinancialTransaction])==>exists(#OBJ,(patient(#TRANS,#OBJ)&&(#1-->[FinancialInstrument])))).
((#1-->[Fish])==>exists(#WATER,(inhabits(#FISH,#WATER)&&(#1-->[Water])))).
((#1-->[Freezing])==>exists(#COOL,(subProcess(#COOL,#FREEZE)&&(#1-->[Cooling])))).
((#1-->[Funding])==>exists(#MONEY,(patient(#FUND,#MONEY)&&(#1-->[Currency])))).
((#1-->[GraphElement])==>exists(#GRAPH,(graphPart(#PART,#GRAPH)&&(#1-->[Graph])))).
((#1-->[Hunting])==>exists(#T,(patient(#H,#T)&&(#1-->[Animal])))).
((#1-->[Injuring])==>exists(#STRUCT,(patient(#INJ,#STRUCT)&&(#1-->[AnatomicalStructure])))).
((#1-->[IntentionalProcess])==>exists(#AGENT,(agent(#PROC,#AGENT)&&(#1-->[CognitiveAgent])))).
((#1-->[Island])==>exists(#WATER,(meetsSpatially(#ISLE,#WATER)&&(#1-->[WaterArea])))).
((#1-->[LegalDecision])==>exists(#ACTION,(refers(#DECISION,#ACTION)&&(#1-->[LegalAction])))).
((#1-->[Making])==>exists(#ARTIFACT,(result(#MAKING,#ARTIFACT)&&(#1-->[Artifact])))).
((#1-->[MakingInstrumentalMusic])==>exists(#I,(instrument(#M,#I)&&(#1-->[MusicalInstrument])))).
((#1-->[Maneuver])==>exists(#CONTEST,(subProcess(#MOVE,#CONTEST)&&(#1-->[Contest])))).
((#1-->[Melting])==>exists(#HEAT,(subProcess(#HEAT,#MELT)&&(#1-->[Heating])))).
((#1-->[Morpheme])==>exists(#WORD,(part(#MORPH,#WORD)&&(#1-->[Word])))).
((#1-->[Motion])==>exists(#OBJ,(moves(#MOTION,#OBJ)&&(#1-->[Object])))).
((#1-->[NounPhrase])==>exists(#NOUN,(part(#NOUN,#PHRASE)&&(#1-->[Noun])))).
((#1-->[Organism])==>exists(#BIRTH,(experiencer(#BIRTH,#ORGANISM)&&(#1-->[Birth])))).
((#1-->[Organism])==>exists(#ATTR,(attribute(#ORG,#ATTR)&&(#1-->[AnimacyAttribute])))).
((#1-->[Organism])==>exists(#ATTR,(attribute(#ORG,#ATTR)&&(#1-->[DevelopmentalAttribute])))).
((#1-->[Poisoning])==>exists(#SUBSTANCE,(instrument(#POISON,#SUBSTANCE)&&(#1-->[BiologicallyActiveSubstance])))).
((#1-->[PoliticalOrganization])==>exists(#PROC,(agent(#PROC,#POL)&&(#1-->[PoliticalProcess])))).
((#1-->[Precipitation])==>exists(#STUFF,(patient(#PROCESS,#STUFF)&&(#1-->[Water])))).
((#1-->[PrepositionalPhrase])==>exists(#PREP,(part(#PREP,#PHRASE)&&(#1-->[ParticleWord])))).
((#1-->[Product])==>exists(#MANUFACTURE,(result(#MANUFACTURE,#PRODUCT)&&(#1-->[Manufacture])))).
((#1-->[PsychologicalProcess])==>exists(#ANIMAL,(experiencer(#PROCESS,#ANIMAL)&&(#1-->[Animal])))).
((#1-->[Pursuing])==>exists(#OBJ,(patient(#PURSUE,#OBJ)&&(#1-->[Object])))).
((#1-->[Reasoning])==>exists(#ARGUMENT,(realization(#REASON,#ARGUMENT)&&(#1-->[Argument])))).
((#1-->[Replication])==>exists(#BODY,(result(#REP,#BODY)&&(#1-->[ReproductiveBody])))).
((#1-->[RepresentationalArtWork])==>exists(#P,(represents(#RA,#P)&&(#1-->[Physical])))).
((#1-->[Room])==>exists(#BUILD,(properPart(#ROOM,#BUILD)&&(#1-->[Building])))).
((#1-->[Sentence])==>exists(#PROP,(containsInformation(#SENT,#PROP)&&(#1-->[Proposition])))).
((#1-->[Separating])==>exists(#OBJ,(patient(#SEPARATE,#OBJ)&&(#1-->[SelfConnectedObject])))).
((#1-->[ShoreArea])==>exists(#WATER,(meetsSpatially(#BANK,#WATER)&&(#1-->[WaterArea])))).
((#1-->[Singing])==>exists(#W,(patient(#S,#W)&&(#1-->[Word])))).
((#1-->[Smoke])==>exists(#BURNING,(result(#BURNING,#SMOKE)&&(#1-->[Combustion])))).
((#1-->[StateOrProvince])==>exists(#LAND,(properPart(#STATE,#LAND)&&(#1-->[Nation])))).
((#1-->[SubatomicParticle])==>exists(#ATOM,(part(#PARTICLE,#ATOM)&&(#1-->[Atom])))).
((#1-->[Summary])==>exists(#TEXT2,(subsumesContentInstance(#TEXT2,#TEXT)&&(#1-->[Text])))).
((#1-->[SymbolicString])==>exists(#PART,(part(#PART,#STRING)&&(#1-->[Character])))).
((#1-->[TactilePerception])==>exists(#TOUCH,(subProcess(#TOUCH,#TACTILE)&&(#1-->[Touching])))).
((#1-->[Text])==>exists(#PART,(part(#PART,#TEXT)&&(#1-->[LinguisticExpression])))).
((#1-->[Text])==>exists(#WRITE,(result(#WRITE,#TEXT)&&(#1-->[Writing])))).
((#1-->[TimeInterval])==>exists(#POINT,(temporalPart(#POINT,#INTERVAL)&&(#1-->[TimePoint])))).
((#1-->[TimePoint])==>exists(#INTERVAL,(temporalPart(#POINT,#INTERVAL)&&(#1-->[TimeInterval])))).
((#1-->[Tissue])==>exists(#PART,(part(#PART,#STUFF)&&(#1-->[Cell])))).
((#1-->[Tissue])==>exists(#ORGANISM,(part(#STUFF,#ORGANISM)&&(#1-->[Organism])))).
((#1-->[Transportation])==>exists(#DEVICE,(instrument(#TRANS,#DEVICE)&&(#1-->[TransportationDevice])))).
((#1-->[VerbPhrase])==>exists(#VERB,(part(#VERB,#PHRASE)&&(#1-->[Verb])))).
((#1-->[Voting])==>exists(#ELECT,(subProcess(#VOTE,#ELECT)&&(#1-->[Election])))).
((#1-->[War])==>exists(#BATTLE,(subProcess(#BATTLE,#WAR)&&(#1-->[Battle])))).
((#1-->[WaterCloud])==>exists(#WATER,(part(#WATER,#CLOUD)&&(#1-->[Water])))).
((#1-->[WaterMotion])==>exists(#WATER,(patient(#MOTION,#WATER)&&(#1-->[Water])))).
((#1-->[Wind])==>exists(#AIR,(patient(#WIND,#AIR)&&(#1-->[Air])))).
((#1-->[Word])==>exists(#PART,(part(#PART,#WORD)&&(#1-->[Morpheme])))).
((exhaustiveAttribute(#CLASS,"@ROW")&&inList(#ATTR,ListFn("@ROW")))==>(#1-->[Attribute])).
((leader(#AREA,#PERSON)&&(#1-->[GeopoliticalArea]))==>leader(GovernmentFn(#AREA),#PERSON)).
((leader(GovernmentFn(#AREA),#PERSON)&&(#1-->[GeopoliticalArea]))==>leader(#AREA,#PERSON)).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfAngularMeasure]))==>(#1-->[AngleMeasure])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfArea]))==>(#1-->[AreaMeasure])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfCurrency]))==>(#1-->[CurrencyMeasure])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfDuration]))==>(#1-->[TimeDuration])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfFrequency]))==>(#1-->[FrequencyMeasure])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfInformation]))==>(#1-->[InformationMeasure])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfLength]))==>(#1-->[LengthMeasure])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfMass]))==>(#1-->[MassMeasure])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfTemperature]))==>(#1-->[TemperatureMeasure])).
((equal(MeasureFn(#NUMBER,#UNIT),#QUANT)&&(#1-->[UnitOfVolume]))==>(#1-->[VolumeMeasure])).
((&&,(("@ROW")-->#REL1),subrelation(#REL1,#REL2),(#1-->[Predicate]))==>(("@ROW")-->#REL2)).
((&&,agent(#EVENT,#AGENT),(#1-->[Election]),(#1-->[GeopoliticalArea]))==>(#1-->[PoliticalProcess])).
((&&,agent(#PROCESS,#ORG),(#1-->[JudicialProcess]),(#1-->[Organization]))==>(#1-->[JudicialOrganization])).
((&&,part(#STRUCTURE,#ANIMAL),(#1-->[AnimalAnatomicalStructure]),(#1-->[Organism]))==>(#1-->[Animal])).
((&&,part(#STRUCTURE,#PLANT),(#1-->[Organism]),(#1-->[PlantAnatomicalStructure]))==>(#1-->[Plant])).
((&&,part(#SUBSTANCE,#ANIMAL),(#1-->[AnimalSubstance]),(#1-->[Organism]))==>(#1-->[Animal])).
((&&,part(#SUBSTANCE,#PLANT),(#1-->[Organism]),(#1-->[PlantSubstance]))==>(#1-->[Plant])).
(realization(#PROCESS,#PROP)==>exists(#OBJ,(containsInformation(#OBJ,#PROP)&&(#1-->[ContentBearingObject])))).
(equivalenceRelationOn(#RELATION,#CLASS)==>(&&,reflexiveOn(#RELATION,#CLASS),(#1-->[SymmetricRelation]),(#1-->[TransitiveRelation]))).
(partialOrderingOn(#RELATION,#CLASS)==>(&&,reflexiveOn(#RELATION,#CLASS),(#1-->[AntisymmetricRelation]),(#1-->[TransitiveRelation]))).
(attribute(#ORG,Embryonic)==>exists(#BODY,(located(#ORG,#BODY)&&(#1-->[ReproductiveBody])))).
((#1-->[GasMixture])==>exists(#PART,(part(#PART,#MIX)&&attribute(#PART,Gas)))).
((#1-->[LiquidMixture])==>exists(#PART,(part(#PART,#MIX)&&attribute(#PART,Liquid)))).
((#1-->[Wetting])==>exists(#OBJ,(patient(#WET,#OBJ)&&attribute(#OBJ,Liquid)))).
((wants(#AGENT,#OBJ)&&(#1-->[Object]))==>desires(#AGENT,possesses(#AGENT,#OBJ))).
((&&,part(#BODY,#ORG),(#1-->[Organism]),(#1-->[ReproductiveBody]))==>attribute(#ORG,Female)).
((&&,patient(#COMMIT,#FORMULA),(#1-->[Committing]),(#1-->[Formula]))==>modalAttribute(#FORMULA,Promise)).
((&&,agent(#KILL,#AGENT),patient(#KILL,#PATIENT),(#1-->[Killing]))==>(#1-->[Organism])).
((&&,agent(#PROC,#AGENT),instrument(#PROC,#LANG),(#1-->[ComputerLanguage]))==>(#1-->[Machine])).
((&&,agent(#PROC,#AGENT),instrument(#PROC,#LANG),(#1-->[HumanLanguage]))==>(#1-->[Human])).
((&&,resource(#PROC,#STUFF),result(#PROC,#STUFF),(#1-->[ChemicalProcess]))==>(#1-->[PureSubstance])).
((moves(#MOTION,#OBJ)&&(#1-->[BodyMotion]))==>(patient(#MOTION,#OBJ)&&(#1-->[BodyPart]))).
((agent(#PROC,#AGENT)&&(#1-->[IntentionalProcess]))==>exists(#PURP,hasPurposeForAgent(#PROC,#PURP,#AGENT))).
((&&,attribute(#OBJ,#ATTR),part(#PART,#OBJ),(#1-->[Substance]))==>attribute(#PART,#ATTR)).
((&&,attribute(#OBJ,#ATTRIBUTE),surface(#SURFACE,#OBJ),(#1-->[ShapeAttribute]))==>attribute(#SURFACE,#ATTRIBUTE)).
((&&,attribute(#OBJ,#ATTRIBUTE),surface(#SURFACE,#OBJ),(#1-->[TextureAttribute]))==>attribute(#SURFACE,#ATTRIBUTE)).
((&&,result(#REP,#CHILD),agent(#REP,#PARENT),(#1-->[Replication]))==>parent(#CHILD,#PARENT)).
((#1-->[Cooking])==>exists(#FOOD,(result(#COOK,#FOOD)&&(#1-->[FoodForFn(Organism)])))).
((#1-->[FiniteSet])==>exists(#NUMBER,(equal(#NUMBER,CardinalityFn(#SET))&&(#1-->[NonnegativeInteger])))).
((#1-->[FoodForFn(Animal)])==>exists(#ATTR,(attribute(#OBJ,#ATTR)&&(#1-->[TasteAttribute])))).
((#1-->[FoodForFn(#2)])==>exists(#NUTRIENT,(part(#NUTRIENT,#FOOD)&&(#1-->[Nutrient])))).
((#1-->[MakingFn(#2)])==>exists(#OBJECT,(result(#X,#OBJECT)&&(#1-->[#2])))).
((equal(InitialNodeFn(#ARC),#NODE)&&equal(TerminalNodeFn(#ARC),#NODE))==>(#1-->[GraphLoop])).
((&&,destination(#DROP,#FINISH),origin(#DROP,#START),(#1-->[Falling]))==>orientation(#FINISH,#START,Below)).
((#1-->[BodyCovering])==>exists(#BODY,(&&,superficialPart(#COVER,#BODY),(#1-->[BodyPart]),(#1-->[Organism])))).
((#1-->[BodyJunction])==>exists(((#OBJ2)-->#OBJ1),(connects(#JUNCT,#OBJ1,#OBJ2)&&(#1-->[BodyPart])))).
((#1-->[LandArea])==>exists(#LAND2,(&&,part(#LAND1,#LAND2),(#1-->[Continent]),(#1-->[Island])))).
((#1-->[MeasuringDevice])==>hasPurpose(#DEVICE,exists(#MEASURE,(instrument(#MEASURE,#DEVICE)&&(#1-->[Measuring]))))).
((#1-->[OrganOrTissueProcess])==>exists(#THING,(&&,eventLocated(#PROC,#THING),(#1-->[Organ]),(#1-->[Tissue])))).
((#1-->[Physical])==>exists(((#TIME)-->#LOC),(located(#PHYS,#LOC)&&time(#PHYS,#TIME)))).
((#1-->[Poisoning])==>exists(#THING,(&&,patient(#POISON,#THING),(#1-->[AnatomicalStructure]),(#1-->[Organism])))).
((#1-->[Transitway])==>hasPurpose(#WAY,exists(#TRANSPORT,(path(#TRANSPORT,#WAY)&&(#1-->[Transportation]))))).
((#1-->[WearableItem])==>hasPurpose(#WI,exists(#H,(wears(#H,#WI)&&(#1-->[Human]))))).
((agent(#PROCESS,#ORGANISM)&&(#1-->[Organism]))==>holdsDuring(WhenFn(#PROCESS),attribute(#ORGANISM,Living))).
((patient(#SEE,#OBJ)&&(#1-->[Seeing]))==>holdsDuring(WhenFn(#SEE),attribute(#OBJ,Illuminated))).
((precondition(#PROC1,#PROC2)&&exists(#INST2,(#1-->[#2])))==>exists(#INST1,(#1-->[#2]))).
((equal(#QUANT,MeasureFn(#NUMBER,#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MagnitudeFn(#QUANT),#NUMBER)).
((equal(#QUANT,MeasureFn(#NUMBER,#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(UnitFn(#QUANT),#UNIT)).
(((#1-->[MonthFn(April,#2)])&&(#1-->[MonthFn(March,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(August,#2)])&&(#1-->[MonthFn(July,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(August,#2)])&&(#1-->[MonthFn(September,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(December,#2)])&&(#1-->[MonthFn(November,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(February,#2)])&&(#1-->[MonthFn(January,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(February,#2)])&&(#1-->[MonthFn(March,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(July,#2)])&&(#1-->[MonthFn(June,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(June,#2)])&&(#1-->[MonthFn(May,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(November,#2)])&&(#1-->[MonthFn(October,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(((#1-->[MonthFn(October,#2)])&&(#1-->[MonthFn(September,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(multiplicativeFactor(#N1,#N2)==>exists(#I,(equal(#N2,MultiplicationFn(#N1,#I))&&(#1-->[Integer])))).
(equal(TemporalCompositionFn(#INTERVAL,#INTERVAL),#CLASS)==>exists(#TIME,(finishes(#TIME,#INTERVAL)&&(#1-->[#2])))).
(equal(TemporalCompositionFn(#INTERVAL,#INTERVAL),#CLASS)==>exists(#TIME,(starts(#TIME,#INTERVAL)&&(#1-->[#2])))).
((#1-->[LinguisticCommunication])==>exists(#OBJ,(&&,patient(#COMMUNICATE,#OBJ),represents(#COMMUNICATE,#OBJ),(#1-->[LinguisticExpression])))).
((holdsDuring(#T1,legalRelation(#A1,#A2))&&(#1-->[Organism]))==>holdsDuring(#T1,relative(#A1,#A2))).
((&&,orientation(#OBJ1,#OBJ2,#DIRECT),orientation(#OBJ2,#OBJ3,#DIRECT),(#1-->[DirectionalAttribute]))==>between(#OBJ1,#OBJ2,#OBJ3)).
((&&,(#1-->Process),((#ARG1,#ARG2)-->#ROLE),(#1-->[#2]),(#1-->[CaseRole]))==>capability(#PROC,#ROLE,#ARG2)).
((&&,((#AGENT,"@ROW")-->#REL),inList(#OBJ,ListFn("@ROW")),(#1-->[IntentionalRelation]))==>inScopeOfInterest(#AGENT,#OBJ)).
((&&,agent(#EAT,#CARNIVORE),patient(#EAT,#PREY),(#1-->[Carnivore]),(#1-->[Eating]))==>(#1-->[Animal])).
((&&,resource(#PROC,#SUBSTANCE1),result(#PROC,#SUBSTANCE2),(#1-->[CompoundSubstance]),(#1-->[ElementalSubstance]))==>(#1-->[ChemicalDecomposition])).
((&&,resource(#PROC,#SUBSTANCE1),result(#PROC,#SUBSTANCE2),(#1-->[CompoundSubstance]),(#1-->[ElementalSubstance]))==>(#1-->[ChemicalSynthesis])).
(capability(#PROCESS,#ROLE,#OBJ)==>modalAttribute(exists(#P,(((#P,#OBJ)-->#ROLE)&&(#1-->[#2]))),Possibility)).
((#1-->[LegalDecision])==>exists(#DECIDE,(earlier(WhenFn(#DECIDE),WhenFn(#DECISION))&&(#1-->[Deciding])))).
((experiencer(#BIRTH,#AGENT)&&(#1-->[Birth]))==>exists(#DEATH,(experiencer(#DEATH,#AGENT)&&(#1-->[Death])))).
((agent(#EMIT,#SOUND)&&(#1-->[RadiatingSound]))==>exists(#ATTR,(attribute(#SOUND,#ATTR)&&(#1-->[SoundAttribute])))).
((patient(#HEAR,#OBJ)&&(#1-->[Hearing]))==>exists(#ATTR,(attribute(#OBJ,#ATTR)&&(#1-->[SoundAttribute])))).
((patient(#PERCEPTION,#OBJ)&&(#1-->[Perception]))==>exists(#PROP,(attribute(#OBJ,#PROP)&&(#1-->[PerceptualAttribute])))).
((patient(#SMELL,#OBJ)&&(#1-->[Smelling]))==>exists(#ATTR,(attribute(#OBJ,#ATTR)&&(#1-->[OlfactoryAttribute])))).
((agent(#SWIM,#AGENT)&&(#1-->[Swimming]))==>exists(#AREA,(located(#AGENT,#AREA)&&(#1-->[WaterArea])))).
((patient(#TASTE,#OBJ)&&(#1-->[Tasting]))==>exists(#ATTR,(attribute(#OBJ,#ATTR)&&(#1-->[TasteAttribute])))).
((attribute(#OBJ,Pliable)&&(#1-->[Object]))==>exists(#CHANGE,(patient(#CHANGE,#OBJ)&&(#1-->[ShapeChange])))).
((&&,agent(#PURSUE,#AGENT),patient(#PURSUE,#OBJ),(#1-->[Pursuing]))==>holdsDuring(#PURSUE,wants(#AGENT,#OBJ))).
((&&,agent(#REQUEST,#AGENT),patient(#REQUEST,#FORMULA),(#1-->[Formula]),(#1-->[Requesting]))==>desires(#AGENT,#FORMULA)).
((#1-->[Argument])==>exists(((#CONCLUSION)-->#PREMISES),(conclusion(#CONCLUSION,#ARGUMENT)&&equal(PremisesFn(#ARGUMENT),#PREMISES)))).
((#1-->[RationalNumber])==>exists(((#INT2)-->#INT1),(equal(#NUMBER,DivisionFn(#INT1,#INT2))&&(#1-->[Integer])))).
((#1-->[Seed])==>exists(((#TIME)-->#PLANT),(holdsDuring(#TIME,part(#SEED,#PLANT))&&(#1-->[FloweringPlant])))).
((#1-->[Spore])==>exists(((#TIME)-->#PLANT),(holdsDuring(#TIME,part(#SPORE,#PLANT))&&(#1-->[NonFloweringPlant])))).
((patient(#DRY,#OBJ)&&(#1-->[Drying]))==>holdsDuring(EndFn(WhenFn(#DRY)),attribute(#OBJ,Dry))).
((partlyLocated(#OBJ1,#OBJ2)&&(#1-->[Object]))==>exists(#SUB,(part(#SUB,#OBJ1)&&located(#SUB,#OBJ2)))).
((holdsDuring(#INTERVAL,((#INST1,#INST2)-->#REL))&&(#1-->[Physical]))==>(time(#INST1,#INTERVAL)&&time(#INST2,#INTERVAL))).
((&&,((#OBJ1,#OBJ2)-->#REL),(#1-->[BinaryPredicate]),(#1-->[SpatialRelation]))==>overlapsTemporally(WhenFn(#OBJ1),WhenFn(#OBJ2))).
((&&,(("@ROW")-->#REL),domainSubclass(#REL,#NUMBER,#CLASS),(#1-->[Predicate]))==>(ListOrderFn(ListFn("@ROW"),#1)-->#2)).
((&&,agent(#DECIDE,#AGENT),patient(#DECIDE,#PROCESS),(#1-->[Deciding]))==>(agent(#PROCESS,#AGENT)&&(#1-->[IntentionalProcess]))).
((&&,agent(#INVESTIGATE,#AGENT),patient(#INVESTIGATE,#PROP),(#1-->[Investigating]))==>hasPurposeForAgent(#INVESTIGATE,knows(#AGENT,#PROP),#AGENT)).
((&&,parent(#ORGANISM,#PARENT1),parent(#ORGANISM,#PARENT2),result(#REP,#ORGANISM),(#1-->[AsexualReproduction]))==>equal(#PARENT1,#PARENT2)).
((&&,agent(#EVENT,#AGENT),(#1-->[Election]),(#1-->[GeopoliticalArea]),(#1-->[GovernmentFn(#2)]))==>(#1-->[PoliticalProcess])).
((#1-->[Device])==>exists(#PROC,hasPurpose(#DEVICE,exists(#INST,(instrument(#INST,#DEVICE)&&(#1-->[#2])))))).
((#1-->[Hormone])==>exists(((#GLAND)-->#PROCESS),(&&,instrument(#PROCESS,#GLAND),result(#PROCESS,#HORMONE),(#1-->[Gland])))).
((#1-->[Manufacturer])==>hasPurpose(#ORG,exists(#MANUFACTURE,(&&,agent(#MANUFACTURE,#ORG),(#1-->[CommercialService]),(#1-->[Manufacture]))))).
((#1-->[MercantileOrganization])==>hasPurpose(#ORG,exists(#SELL,(&&,agent(#SELL,#ORG),(#1-->[CommercialService]),(#1-->[Selling]))))).
((#1-->[Pretending])==>exists(((#PROP)-->#PERSON),(truth(#PROP,False)&&hasPurpose(#PRETEND,believes(#PERSON,#PROP))))).
((#1-->[Reading])==>exists(((#PROP)-->#TEXT),(&&,realization(#READ,#PROP),containsInformation(#TEXT,#PROP),(#1-->[Text])))).
((duration(#MONTH,MeasureFn(#NUMBER,DayDuration))&&(#1-->[Month]))==>equal(CardinalityFn(TemporalCompositionFn(#MONTH,Day)),#NUMBER)).
((&&,agent(#PROC,#HUMAN),(#1-->[Animal]),(#1-->[IntentionalProcess]))==>holdsDuring(WhenFn(#PROC),attribute(#HUMAN,Awake))).
(authors(#AGENT,#TEXTCLASS)==>exists(((#INSTANCE)-->#PROCESS),(&&,agent(#PROCESS,#AGENT),result(#PROCESS,#INSTANCE),(#1-->[#2])))).
((&&,((#PROCESS,#OBJ)-->#REL),(#1-->[CaseRole]),(#1-->[Object]))==>exists(#TIME,overlapsSpatially(WhereFn(#PROCESS,#TIME),#OBJ))).
((&&,(("@ROW")-->#REL),domain(#REL,(#CLASS,#NUMBER)),(#1-->[Predicate]))==>(ListOrderFn(ListFn("@ROW"),#1)-->[#2])).
((&&,holdsDuring(#TIME,attribute(#ORGANISM,#ATTR)),(#1-->[Organism]),(#1-->[PsychologicalAttribute]))==>holdsDuring(#TIME,attribute(#ORGANISM,Living))).
((&&,(#1-->FactualText),authors(#AGENT,#CLASS),subsumesContentInstance(#TEXT,#CONTENT),(#1-->[#2]),(#1-->[Formula]))==>believes(#AGENT,#CONTENT)).
((#1-->[ComplexNumber])==>exists(((#PART2)-->#PART1),(equal(#PART2,ImaginaryPartFn(#NUMBER))&&equal(#PART1,RealNumberFn(#NUMBER))))).
((patient(#EDUCATION,#PERSON)&&(#1-->[EducationalProcess]))==>hasPurpose(#EDUCATION,exists(#LEARN,(patient(#LEARN,#PERSON)&&(#1-->[Learning]))))).
((agent(#PROC,#AGENT)&&(#1-->[DiagnosticProcess]))==>exists(#CAUSE,hasPurposeForAgent(#PROC,knows(#AGENT,causes(#CAUSE,#PROC)),#AGENT))).
((result(#REP,#ORGANISM)&&(#1-->[SexualReproduction]))==>exists(((#FATHER)-->#MOTHER),(father(#ORGANISM,#FATHER)&&mother(#ORGANISM,#MOTHER)))).
((&&,result(#EVENT,#CBO),(#1-->[ContentBearingObject]),(#1-->[Planning]))==>exists(#PLAN,(containsInformation(#CBO,#PLAN)&&(#1-->[Plan])))).
((&&,containsInformation(#OBJ,#PLAN),(#1-->[ContentBearingObject]),(#1-->[Plan]))==>exists(#PLANNING,(result(#PLANNING,#OBJ)&&(#1-->[Planning])))).
((&&,agent(#PROC,#VIRUS),(#1-->[Replication]),(#1-->[Virus]))==>exists(#CELL,(located(#PROC,#CELL)&&(#1-->[Cell])))).
((&&,agent(#MEET,#AGENT1),agent(#MEET,#AGENT2),(#1-->[Meeting]))==>holdsDuring(WhenFn(#MEET),orientation(#AGENT1,#AGENT2,Near))).
((&&,holdsDuring(#TIME,possesses(#AGENT1,#OBJ)),holdsDuring(#TIME,possesses(#AGENT2,#OBJ)),(#1-->[TimePosition]))==>equal(#AGENT1,#AGENT2)).
((&&,temporalPart(#DAY1,#WEEK),temporalPart(#DAY2,#WEEK),(#1-->[Friday]),(#1-->[Saturday]),(#1-->[Week]))==>meetsTemporally(#DAY1,#DAY2)).
((&&,temporalPart(#DAY1,#WEEK),temporalPart(#DAY2,#WEEK),(#1-->[Friday]),(#1-->[Thursday]),(#1-->[Week]))==>meetsTemporally(#DAY1,#DAY2)).
((&&,temporalPart(#DAY1,#WEEK),temporalPart(#DAY2,#WEEK),(#1-->[Monday]),(#1-->[Tuesday]),(#1-->[Week]))==>meetsTemporally(#DAY1,#DAY2)).
((&&,temporalPart(#DAY1,#WEEK),temporalPart(#DAY2,#WEEK),(#1-->[Saturday]),(#1-->[Sunday]),(#1-->[Week]))==>meetsTemporally(#DAY1,#DAY2)).
((&&,temporalPart(#DAY1,#WEEK),temporalPart(#DAY2,#WEEK),(#1-->[Thursday]),(#1-->[Wednesday]),(#1-->[Week]))==>meetsTemporally(#DAY1,#DAY2)).
((&&,temporalPart(#DAY1,#WEEK),temporalPart(#DAY2,#WEEK),(#1-->[Tuesday]),(#1-->[Wednesday]),(#1-->[Week]))==>meetsTemporally(#DAY1,#DAY2)).
(legalRelation(#AGENT1,#AGENT2)==>exists(((#OBLIGATION)-->#DECLARE),(&&,confersObligation(#OBLIGATION,#DECLARE,#AGENT1),confersObligation(#OBLIGATION,#DECLARE,#AGENT2),(#1-->[Declaring])))).
((agent(#EXPRESS,#AGENT)&&(#1-->[Expressing]))==>exists(#STATE,(&&,attribute(#AGENT,#STATE),represents(#EXPRESS,#STATE),(#1-->[StateOfMind])))).
((patient(#KILL,#OBJ)&&(#1-->[Killing]))==>exists(#DEATH,(&&,experiencer(#DEATH,#OBJ),causes(#KILL,#DEATH),(#1-->[Death])))).
((publishes(#ORG,#TEXTCLASS)&&(#1-->[#2]))==>exists(#PUB,(&&,patient(#PUB,#INST),agent(#PUB,#ORG),(#1-->[Publication])))).
((holdsDuring(#TIME,age(#OBJ,#DURATION))&&(#1-->[TimePoint]))==>duration(TimeIntervalFn(BeginFn(WhenFn(#OBJ)),#TIME),#DURATION)).
(changesLocation(#EVENT,#OBJ)==>(&&,agent(#EVENT,#OBJ),experiencer(#EVENT,#OBJ),patient(#EVENT,#OBJ),((#1-->[Object])&&(#1-->[Translocation])))).
((#1-->[Atom])==>exists(((#ELECTRON)-->#PROTON),(&&,component(#ELECTRON,#ATOM),component(#PROTON,#ATOM),(#1-->[Electron]),(#1-->[Proton])))).
((#1-->[AtomicNucleus])==>exists(((#PROTON)-->#NEUTRON),(&&,component(#NEUTRON,#NUCLEUS),component(#PROTON,#NUCLEUS),(#1-->[Neutron]),(#1-->[Proton])))).
((#1-->[Combustion])==>exists(((#LIGHT)-->#HEAT),(&&,subProcess(#HEAT,#COMBUSTION),subProcess(#LIGHT,#COMBUSTION),(#1-->[Heating]),(#1-->[RadiatingLight])))).
((#1-->[Sentence])==>exists(((#PHRASE2)-->#PHRASE1),(&&,part(#PHRASE1,#SENTENCE),part(#PHRASE2,#SENTENCE),(#1-->[NounPhrase]),(#1-->[VerbPhrase])))).
((#1-->[Weapon])==>hasPurpose(#WEAPON,exists(((#PATIENT)-->#D),(&&,patient(#D,#PATIENT),instrument(#D,#WEAPON),(#1-->[Damaging]))))).
((#1-->[RecurrentTimeIntervalFn(#2,#3)])==>exists(((#TIME2)-->#TIME1),(&&,starts(#TIME1,#INTERVAL),finishes(#TIME2,#INTERVAL),(#1-->[#2])))).
((patient(#DISCOVER,#OBJ)&&(#1-->[Discovering]))==>exists(#PURSUE,(meetsTemporally(WhenFn(#PURSUE),WhenFn(#DISCOVER))&&(#1-->[Pursuing])))).
((&&,moves(#MOTION,#OBJ),destination(#MOTION,#PLACE),(#1-->[Motion]))==>holdsDuring(EndFn(WhenFn(#MOTION)),located(#OBJ,#PLACE))).
((&&,moves(#MOTION,#OBJ),origin(#MOTION,#PLACE),(#1-->[Motion]))==>holdsDuring(BeginFn(WhenFn(#MOTION)),located(#OBJ,#PLACE))).
((&&,destination(#PROCESS,#NAME),patient(#PROCESS,#THING),(#1-->[Naming]))==>holdsDuring(FutureFn(WhenFn(#PROCESS)),names(#NAME,#THING))).
((patient(#SEE,#OBJ)&&(#1-->[Seeing]))==>exists(#ATTR,(holdsDuring(WhenFn(#SEE),attribute(#OBJ,#ATTR))&&(#1-->[ColorAttribute])))).
((&&,agent(#COUNT,#AGENT),patient(#COUNT,#ENTITY),(#1-->[Counting]))==>exists(#NUMBER,knows(#AGENT,equal(CardinalityFn(#ENTITY),#NUMBER)))).
((&&,agent(#STATE,#AGENT),patient(#STATE,#FORMULA),(#1-->[Formula]),(#1-->[Stating]))==>holdsDuring(WhenFn(#STATE),believes(#AGENT,#FORMULA))).
((&&,causesProposition(#SIT1,#SIT2),holdsDuring(#T1,#SIT1),holdsDuring(#T2,#SIT2),(#1-->[TimeInterval]))==>beforeOrEqual(BeginFn(#T1),BeginFn(#T2))).
((&&,meetsTemporally(#Y1,#Y2),(#1-->[#2]),(#1-->[MonthFn(December,#2)]),(#1-->[MonthFn(January,#2)]))==>meetsTemporally(#MONTH1,#MONTH2)).
(holdsDuring(#T1,inhabits(#ORGANISM,#OBJ))==>exists(#TIME,(&&,temporalPart(#TIME,#T1),holdsDuring(#TIME,located(#ORGANISM,#OBJ)),(#1-->[TimeInterval])))).
((#1-->[Advertising])==>exists(#OBJ,(refers(#ADVERT,#OBJ)&&hasPurpose(#ADVERT,exists(#SALE,(patient(#SALE,#OBJ)&&(#1-->[Selling]))))))).
((#1-->[Translocation])==>exists(((#D,#P)-->#O),(&&,destination(#T,#D),origin(#T,#O),path(#T,#P),(#1-->[Object])))).
((patient(#H,#P)&&(#1-->[Hunting]))==>hasPurpose(#H,exists(#PROC,(&&,patient(#PROC,#P),(#1-->[Confining]),(#1-->[Killing]))))).
((experiencer(#PATH,#ORG)&&(#1-->[PathologicProcess]))==>exists(((#DISEASE)-->#PART),(&&,attribute(#PART,#DISEASE),part(#PART,#ORG),(#1-->[DiseaseOrSyndrome])))).
((&&,experiencer(#BIRTH,#ORG),equal(#BW,WhenFn(#BIRTH)),holdsDuring(#TIME,attribute(#ORG,Larval)),(#1-->[Birth]))==>meetsTemporally(#BW,#TIME)).
((#1-->[AnatomicalStructure])==>exists(((#TIME)-->#ORGANISM),(&&,temporalPart(#TIME,WhenFn(#ORGANISM)),holdsDuring(#TIME,part(#ANAT,#ORGANISM)),(#1-->[Organism])))).
((#1-->[BodyPart])==>exists(((#TIME)-->#ORGANISM),(&&,temporalPart(#TIME,WhenFn(#ORGANISM)),holdsDuring(#TIME,component(#PART,#ORGANISM)),(#1-->[Organism])))).
((#1-->[Building])==>exists(#HUMAN,(&&,inhabits(#HUMAN,#BUILDING),exists(#ACT,(located(#ACT,#BUILDING)&&agent(#ACT,#HUMAN))),(#1-->[Human])))).
((patient(#ACT,#ANIMAL)&&(#1-->[Surgery]))==>exists(#SUBACT,(&&,subProcess(#SUBACT,#ACT),patient(#SUBACT,#ANIMAL),(#1-->[Animal]),(#1-->[Cutting])))).
((&&,agent(#SEE,#AGENT),patient(#SEE,#OBJ),(#1-->[Seeing]))==>exists(#PROP,(knows(#AGENT,attribute(#OBJ,#PROP))&&(#1-->[ColorAttribute])))).
((&&,agent(#POKE,#AGENT),instrument(#POKE,#INST),patient(#POKE,#OBJ),(#1-->[Poking]))==>holdsDuring(WhenFn(#POKE),connects(#INST,#AGENT,#OBJ))).
((&&,temporalPart(#DAY1,#WEEK1),temporalPart(#DAY2,#WEEK2),meetsTemporally(#WEEK1,#WEEK2),(#1-->[Monday]),(#1-->[Sunday]),(#1-->[Week]))==>meetsTemporally(#DAY1,#DAY2)).
(attribute(#OBJ,FullyFormed)==>exists(#GROWTH,(&&,experiencer(#GROWTH,#OBJ),holdsDuring(BeginFn(WhenFn(#OBJ)),attribute(#OBJ,NonFullyFormed)),(#1-->[Growth])))).
((#1-->[ArtWork])==>hasPurpose(#AW,exists(((#P)-->#H),(&&,patient(#P,#AW),experiencer(#P,#H),(#1-->[Human]),(#1-->[Perception]))))).
((property(#THING,#ATTR)&&(#1-->[ContestAttribute]))==>exists(#CONTEST,(&&,agent(#CONTEST,#THING),patient(#CONTEST,#THING),subProcess(#THING,#CONTEST),(#1-->[Contest])))).
((&&,agent(#ATTACK,#AGENT),patient(#ATTACK,#OBJ),(#1-->[Attack]))==>hasPurposeForAgent(#ATTACK,exists(#DAMAGE,(patient(#DAMAGE,#OBJ)&&(#1-->[Damaging]))),#AGENT)).
((&&,origin(#MOVE,#FROM),instrument(#MOVE,#TRANSPORT),(#1-->[Translocation]),(#1-->[Vehicle]))==>holdsDuring(BeginFn(WhenFn(#MOVE)),located(#TRANSPORT,#FROM))).
((&&,destination(#MOVE,#TO),instrument(#MOVE,#TRANSPORT),(#1-->[Translocation]),(#1-->[Vehicle]))==>holdsDuring(BeginFn(WhenFn(#MOVE)),located(#TRANSPORT,#TO))).
((#1-->[Injecting])==>exists(((#ANIMAL)-->#SUBSTANCE),(&&,destination(#INJECT,#ANIMAL),patient(#INJECT,#SUBSTANCE),attribute(#SUBSTANCE,Liquid),(#1-->[Animal]),(#1-->[BiologicallyActiveSubstance])))).
((agent(#DIGEST,#ORGANISM)&&(#1-->[Digesting]))==>exists(#INGEST,(&&,agent(#INGEST,#ORGANISM),overlapsTemporally(WhenFn(#INGEST),WhenFn(#DIGEST)),(#1-->[Ingesting])))).
((patient(#IMPACT,#OBJ)&&(#1-->[Impacting]))==>exists(#IMPEL,(&&,patient(#IMPEL,#OBJ),earlier(WhenFn(#IMPEL),WhenFn(#IMPACT)),(#1-->[Impelling])))).
((patient(#REPAIR,#OBJ)&&(#1-->[Repairing]))==>exists(#DAMAGE,(&&,patient(#DAMAGE,#OBJ),earlier(WhenFn(#DAMAGE),WhenFn(#REPAIR)),(#1-->[Damaging])))).
((&&,equal(TimeIntervalFn(#POINT1,#POINT2),#INTERVAL),(#1-->[TimeInterval]),(#1-->[TimePoint]))==>(equal(BeginFn(#INTERVAL),#POINT1)&&equal(EndFn(#INTERVAL),#POINT2))).
((patient(#PREDICT,#FORMULA)&&(#1-->[Predicting]))==>exists(#TIME,(&&,holdsDuring(#TIME,#FORMULA),before(#TIME,WhenFn(#PREDICT)),earlier(#TIME,WhenFn(#PREDICT))))).
((patient(#REMEMBER,#FORMULA)&&(#1-->[Remembering]))==>exists(#TIME,(&&,holdsDuring(#TIME,#FORMULA),before(#TIME,WhenFn(#REMEMBER)),earlier(#TIME,WhenFn(#REMEMBER))))).
((#1-->[PoliticalProcess])==>exists(#POL,(&&,agent(#PROC,#POL),patient(#PROC,#POL),(#1-->[Government]),exists(#GOV,(member(#POL,#GOV)&&(#1-->[Government])))))).
((#1-->[Communication])==>exists(((#ENTITY,#AGENT1,#AGENT2)-->#PHYS),(&&,agent(#COMMUNICATE,#AGENT1),destination(#COMMUNICATE,#AGENT2),patient(#COMMUNICATE,#PHYS),refers(#PHYS,#ENTITY),(#1-->[CognitiveAgent])))).
((&&,graphPart(#ARC,#GRAPH),(#1-->[DirectedGraph]),(#1-->[GraphArc]))==>exists(((#NODE2)-->#NODE1),(equal(InitialNodeFn(#ARC),#NODE1)&&equal(TerminalNodeFn(#ARC),#NODE2)))).
((#1-->[WaterArea])==>exists(((#HOLE,#WATER)-->#BED),(&&,properlyFills(#WATER,#HOLE),equal(HoleHostFn(#HOLE),#BED),equal(MereologicalSumFn(#BED,#WATER),#AREA),(#1-->[Water])))).
(hinders(#X,#PROC)==>decreasesLikelihood((eventLocated(#X,#L)&&equal(WhenFn(#X),#T)),holdsDuring(#T,exists(#Y,(eventLocated(#Y,#L)&&(#1-->[#2])))))).
((#1-->[ArtWork])==>hasPurpose(#AW,exists(#P,((#1-->[Human])&&desires(#H,exists(#P,(&&,patient(#P,#AW),experiencer(#P,#H),(#1-->[Perception])))))))).
((&&,part(#ATOM,#SUBSTANCE),atomicNumber(#TYPE,#NUMBER),(#1-->[#2]),(#1-->[Atom]))==>equal(#NUMBER,CardinalityFn(KappaFn(#PROTON,(part(#PROTON,#ATOM)&&(#1-->[Proton])))))).
((patient(#KILL,#PATIENT)&&(#1-->[Killing]))==>(holdsDuring(BeginFn(WhenFn(#KILL)),attribute(#PATIENT,Living))&&holdsDuring(FutureFn(WhenFn(#KILL)),attribute(#PATIENT,Dead)))).
((&&,conclusion(#CONCLUSION,#ARGUMENT),equal(#PREMISES,PremisesFn(#ARGUMENT)),(#1-->[ValidDeductiveArgument]))==>exists(((#FORMULA2)-->#FORMULA1),(&&,containsInformation(#FORMULA1,#PREMISES),containsInformation(#FORMULA2,#CONCLUSION),entails(#PREMISES,#CONCLUSION)))).
((&&,agent(#INTERPRET,#AGENT),patient(#INTERPRET,#CONTENT),(#1-->[ContentBearingObject]),(#1-->[Interpreting]))==>exists(#PROP,holdsDuring(EndFn(WhenFn(#INTERPRET)),believes(#AGENT,containsInformation(#CONTENT,#PROP))))).
((&&,abstractCounterpart(#AA,#PA),abstractCounterpart(#AN,#PN),graphMeasure(#G,#M),arcWeight(#AA,MeasureFn(#N,#M)),(#1-->[GraphArc]),(#1-->[GraphNode]))==>measure(#PA,MeasureFn(#N,#M))).
((#1-->[Meeting])==>exists(((#AGENT2)-->#AGENT1),(&&,agent(#MEET,#AGENT1),agent(#MEET,#AGENT2),hasPurpose(#MEET,exists(#COMM,(&&,agent(#COMM,#AGENT1),agent(#COMM,#AGENT2),(#1-->[Communication]))))))).
((&&,agent(#KEEP,#AGENT),patient(#KEEP,#OBJ),(#1-->[Keeping]))==>exists(#PUT,(&&,agent(#PUT,#AGENT),patient(#PUT,#OBJ),earlier(WhenFn(#PUT),WhenFn(#KEEP)),(#1-->[Putting])))).
((&&,agent(#MEAS,#AGENT),patient(#MEAS,#OBJ),(#1-->[Measuring]))==>exists(((#UNIT)-->#QUANT),holdsDuring(EndFn(WhenFn(#MEAS)),knows(#AGENT,measure(#OBJ,MeasureFn(#QUANT,#UNIT)))))).
((&&,agent(#RETURN,#AGENT),destination(#RETURN,#DEST),(#1-->[GivingBack]))==>exists(#GIVE,(&&,destination(#GIVE,#AGENT),agent(#GIVE,#DEST),earlier(WhenFn(#GIVE),WhenFn(#RETURN)),(#1-->[Giving])))).
((&&,patient(#DISCOVER,#OBJ),holdsDuring(WhenFn(#DISCOVER),located(#OBJ,#PLACE)),(#1-->[Discovering]))==>exists(#LEARN,(&&,subProcess(#LEARN,#DISCOVER),patient(#LEARN,located(#OBJ,#PLACE)),(#1-->[Learning])))).
((&&,agent(#GIVE,#AGENT1),destination(#GIVE,#AGENT2),patient(#GIVE,#OBJ),(#1-->[Agent]),(#1-->[Giving]))==>exists(#GET,(&&,origin(#GET,#AGENT1),agent(#GET,#AGENT2),patient(#GET,#OBJ),(#1-->[Getting])))).
((&&,patient(#BOILING,#SUBSTANCE),boilingPoint(#TYPE,MeasureFn(#TEMP1,#MEASURE)),holdsDuring(WhenFn(#BOILING),measure(#SUBSTANCE,MeasureFn(#TEMP2,#MEASURE))),(#1-->[#2]),(#1-->[Boiling]),(#1-->[UnitOfTemperature]))==>greaterThanOrEqualTo(#TEMP2,#TEMP1)).
((patient(#BOIL,#OBJ)&&(#1-->[Boiling]))==>exists(#PART,(&&,part(#PART,#OBJ),holdsDuring(BeginFn(WhenFn(#BOIL)),attribute(#PART,Liquid)),holdsDuring(EndFn(WhenFn(#BOIL)),attribute(#PART,Gas))))).
((patient(#COND,#OBJ)&&(#1-->[Condensing]))==>exists(#PART,(&&,part(#PART,#OBJ),holdsDuring(BeginFn(WhenFn(#COND)),attribute(#PART,Gas)),holdsDuring(EndFn(WhenFn(#COND)),attribute(#PART,Liquid))))).
((patient(#FREEZE,#OBJ)&&(#1-->[Freezing]))==>exists(#PART,(&&,part(#PART,#OBJ),holdsDuring(BeginFn(WhenFn(#FREEZE)),attribute(#PART,Liquid)),holdsDuring(EndFn(WhenFn(#FREEZE)),attribute(#PART,Solid))))).
((patient(#MELT,#OBJ)&&(#1-->[Melting]))==>exists(#PART,(&&,part(#PART,#OBJ),holdsDuring(BeginFn(WhenFn(#MELT)),attribute(#PART,Solid)),holdsDuring(EndFn(WhenFn(#MELT)),attribute(#PART,Liquid))))).
((&&,(#1-->PureSubstance),greaterThan(#TEMP,#BOIL),greaterThan("29.92",#PRES),barometricPressure(#X,MeasureFn(#PRES,InchMercury)),boilingPoint(#Y,MeasureFn(#BOIL,KelvinDegree)),measure(#X,MeasureFn(#TEMP,KelvinDegree)),(#1-->[#2]))==>attribute(#X,Gas)).
((&&,(#1-->PureSubstance),lessThan(#TEMP,#BOIL),greaterThan(#TEMP,#MELT),boilingPoint(#Y,MeasureFn(#BOIL,KelvinDegree)),meltingPoint(#Y,MeasureFn(#MELT,KelvinDegree)),measure(#X,MeasureFn(#TEMP,KelvinDegree)),(#1-->[#2]))==>attribute(#X,Liquid)).
((&&,(#1-->PureSubstance),lessThan(#TEMP,#MELT),greaterThan(#PRES,"29.92"),barometricPressure(#X,MeasureFn(#PRES,InchMercury)),meltingPoint(#Y,MeasureFn(#MELT,KelvinDegree)),measure(#X,MeasureFn(#TEMP,KelvinDegree)),(#1-->[#2]))==>attribute(#X,Solid)).
(hindersSubclass(#PROC1,#PROC2)==>forall(((#PLACE)-->#TIME),decreasesLikelihood(holdsDuring(#TIME,exists(#INST1,(eventLocated(#INST1,#PLACE)&&(#1-->[#2])))),holdsDuring(#TIME,exists(#INST2,(eventLocated(#INST2,#PLACE)&&(#1-->[#2]))))))).
((&&,agent(#SOUND,#OBJ),attribute(#SOUND,Audible),(#1-->[RadiatingSound]))==>exists(#HUMAN,((#1-->[Human])&&capability(KappaFn(#HEAR,(&&,agent(#HEAR,#HUMAN),destination(#HEAR,#HUMAN),origin(#HEAR,#OBJ),(#1-->[Hearing]))),agent,#HUMAN)))).
((#1-->[Searching])==>exists(((#OBJ,#LOC)-->#AGENT),(&&,located(#OBJ,#LOC),agent(#S,#AGENT),patient(#S,#OBJ),hasPurposeForAgent(#S,knows(#AGENT,located(#OBJ,#LOC)),#AGENT),(#1-->[CognitiveAgent]),(#1-->[Object]),(#1-->[Physical])))).
((patient(#DECODE,#DOC1)&&(#1-->[Decoding]))==>exists(((#DOC2,#TIME)-->#ENCODE),(&&,containsInformation(#DOC1,#PROP),containsInformation(#DOC2,#PROP),temporalPart(#TIME,PastFn(WhenFn(#DECODE))),holdsDuring(#TIME,(patient(#ENCODE,#DOC2)&&(#1-->[Encoding])))))).
((&&,patient(#S,#OBJ),(#1-->[Physical]),(#1-->[Searching]))==>exists(((#AGENT)-->#LOC),(&&,located(#OBJ,#LOC),agent(#S,#AGENT),hasPurposeForAgent(#S,knows(#AGENT,located(#OBJ,#LOC)),#AGENT),(#1-->[CognitiveAgent]),(#1-->[Object])))).
((attribute(#OBJ,#ATR)&&(#1-->[SubjectiveAssessmentAttribute]))==>exists(((#JUDGE,#AGENT)-->#TIME),(&&,agent(#JUDGE,#AGENT),patient(#JUDGE,#OBJ),patient(#JUDGE,attribute(#OBJ,#ATR)),holdsDuring(#TIME,believes(#AGENT,property(#OBJ,#ATR))),(#1-->[Judging])))).
((&&,origin(#CHANGE,#AGENT1),destination(#CHANGE,#AGENT2),patient(#CHANGE,#OBJ),(#1-->[Agent]),(#1-->[ChangeOfPossession]))==>(holdsDuring(BeginFn(WhenFn(#CHANGE)),possesses(#AGENT1,#OBJ))&&holdsDuring(EndFn(WhenFn(#CHANGE)),possesses(#AGENT2,#OBJ)))).
((&&,agent(#RUN,#AGENT),agent(#WALK,#AGENT),holdsDuring(WhenFn(#RUN),measure(#AGENT,SpeedFn(#LENGTH2,#TIME))),holdsDuring(WhenFn(#WALK),measure(#AGENT,SpeedFn(#LENGTH1,#TIME))),(#1-->[Running]),(#1-->[Walking]))==>greaterThan(#LENGTH2,#LENGTH1)).
((patient(#DECREASE,#OBJ)&&(#1-->[Decreasing]))==>exists(((#QUANT1,#QUANT2)-->#UNIT),(&&,lessThan(#QUANT2,#QUANT1),holdsDuring(BeginFn(WhenFn(#DECREASE)),equal(MeasureFn(#OBJ,#UNIT),#QUANT1)),holdsDuring(EndFn(WhenFn(#DECREASE)),equal(MeasureFn(#OBJ,#UNIT),#QUANT2))))).
((patient(#INCREASE,#OBJ)&&(#1-->[Increasing]))==>exists(((#QUANT1,#QUANT2)-->#UNIT),(&&,greaterThan(#QUANT2,#QUANT1),holdsDuring(BeginFn(WhenFn(#INCREASE)),equal(MeasureFn(#OBJ,#UNIT),#QUANT1)),holdsDuring(EndFn(WhenFn(#INCREASE)),equal(MeasureFn(#OBJ,#UNIT),#QUANT2))))).
((&&,greaterThan(#INT2,#INT1),patient(#PUB1,#CBO1),date(#PUB1,#DATE1),patient(#PUB2,#CBO2),date(#PUB2,#DATE2),equal(EditionFn(#TEXT,#INT1),#EDITION1),equal(EditionFn(#TEXT,#INT2),#EDITION2),(#1-->[#2]),(#1-->[Publication]))==>before(EndFn(#DATE1),EndFn(#DATE2))).
((patient(#COOL,#OBJ)&&(#1-->[Cooling]))==>exists(((#QUANT1,#QUANT2)-->#UNIT),(&&,lessThan(#QUANT2,#QUANT1),holdsDuring(BeginFn(WhenFn(#COOL)),equal(MeasureFn(#OBJ,#UNIT),#QUANT1)),holdsDuring(EndFn(WhenFn(#COOL)),equal(MeasureFn(#OBJ,#UNIT),#QUANT2)),(#1-->[TemperatureMeasure])))).
((patient(#HEAT,#OBJ)&&(#1-->[Heating]))==>exists(((#QUANT1,#QUANT2)-->#UNIT),(&&,greaterThan(#QUANT2,#QUANT1),holdsDuring(BeginFn(WhenFn(#HEAT)),equal(MeasureFn(#OBJ,#UNIT),#QUANT1)),holdsDuring(EndFn(WhenFn(#HEAT)),equal(MeasureFn(#OBJ,#UNIT),#QUANT2)),(#1-->[TemperatureMeasure])))).
((&&,patient(#EVAP,#OBJ),boilingPoint(#OBJ,MeasureFn(#BOILVAL,#MEAS)),measure(#OBJ,MeasureFn(#VAL,#MEAS)),(#1-->[Evaporating]),(#1-->[UnitOfTemperature]))==>exists(#PART,(&&,greaterThan(#BOILVAL,#VAL),part(#PART,#OBJ),holdsDuring(BeginFn(WhenFn(#EVAP)),attribute(#PART,Liquid)),holdsDuring(EndFn(WhenFn(#EVAP)),attribute(#PART,Gas))))).
((&&,destination(#T1,#D1),origin(#T1,#O1),experiencer(#T1,#P),origin(#T2,#D1),destination(#T2,#D2),experiencer(#T2,#P),(#1-->[Translocation]))==>exists(#T,(&&,destination(#T,#D2),origin(#T,#O1),experiencer(#T,#P),subProcess(#T1,#T),subProcess(#T2,#T),starts(WhenFn(#T1),WhenFn(#T)),finishes(WhenFn(#T2),WhenFn(#T)),(#1-->[Translocation])))).
((||,#1,#2)==>forall(#INST,(--,(#1-->[#2])))).
(((--,equal(#POINT,NegativeInfinity))&&(#1-->[TimePoint]))==>before(NegativeInfinity,#POINT)).
(((--,equal(#POINT,PositiveInfinity))&&(#1-->[TimePoint]))==>before(#POINT,PositiveInfinity)).
(((--,equal(#POINT,NegativeInfinity))&&(#1-->[TimePoint]))==>exists(#OTHERPOINT,temporallyBetween(NegativeInfinity,#OTHERPOINT,#POINT))).
(((--,equal(#POINT,PositiveInfinity))&&(#1-->[TimePoint]))==>exists(#OTHERPOINT,temporallyBetween(#POINT,#OTHERPOINT,PositiveInfinity))).
((&&,agent(#PROC,#AGENT),instrument(#PROC,#LANG),(#1-->[AnimalLanguage]))==>((--,(#1-->[Human]))&&(#1-->[Animal]))).
((&&,agent(#PURSUE,#AGENT),patient(#PURSUE,#OBJ),(#1-->[Pursuing]))==>holdsDuring(#PURSUE,(--,possesses(#AGENT,#OBJ)))).
((properPart(#HOLE2,#HOLE1)&&(#1-->[Hole]))==>exists(#OBJ,((--,meetsSpatially(#HOLE2,#OBJ))&&meetsSpatially(#HOLE1,#OBJ)))).
((#1-->[Certificate])==>exists(((#NORM)-->#PROP),(||,confersNorm(#DOC,#PROP,#NORM),deprivesNorm(#DOC,#PROP,#NORM)))).
((#1-->[Declaring])==>exists(((#NORM)-->#PROP),(||,confersNorm(#DECLARE,#PROP,#NORM),deprivesNorm(#DECLARE,#PROP,#NORM)))).
((#1-->[DualObjectProcess])==>exists(((#OBJ2)-->#OBJ1),(&&,(--,equal(#OBJ1,#OBJ2)),patient(#PROCESS,#OBJ1),patient(#PROCESS,#OBJ2)))).
((&&,agent(#INVESTIGATE,#AGENT),patient(#INVESTIGATE,#PROP),(#1-->[Investigating]))==>holdsDuring(WhenFn(#INVESTIGATE),(--,knows(#AGENT,#PROP)))).
((agent(#DEFENSE,#AGENT)&&(#1-->[DefensiveManeuver]))==>hasPurposeForAgent(#DEFENSE,(--,exists(#DAMAGE,(patient(#DAMAGE,#AGENT)&&(#1-->[Damaging])))),#AGENT)).
((#1-->[CorpuscularObject])==>exists(((#SUBSTANCE2)-->#SUBSTANCE1),(&&,(--,equal(#SUBSTANCE1,#SUBSTANCE2)),(#1-->Substance),material(#SUBSTANCE1,#OBJ),material(#SUBSTANCE2,#OBJ)))).
((#1-->[Disseminating])==>exists(((#AGENT2)-->#AGENT1),(&&,(--,equal(#AGENT1,#AGENT2)),destination(#DISSEMINATE,#AGENT1),destination(#DISSEMINATE,#AGENT2),(#1-->[CognitiveAgent])))).
((#1-->[Machine])==>exists(((#COMP2)-->#COMP1),(&&,(--,equal(#COMP1,#COMP2)),part(#COMP1,#MACHINE),part(#COMP2,#MACHINE),(#1-->[EngineeringComponent])))).
((#1-->[Mixture])==>exists(((#PURE2)-->#PURE1),(&&,(--,equal(#PURE1,#PURE2)),part(#PURE1,#MIXTURE),part(#PURE2,#MIXTURE),(#1-->[PureSubstance])))).
((#1-->[Molecule])==>exists(((#ATOM2)-->#ATOM1),(&&,(--,equal(#ATOM1,#ATOM2)),part(#ATOM1,#MOLE),part(#ATOM2,#MOLE),(#1-->[Atom])))).
((#1-->[Phrase])==>exists(((#PART2)-->#PART1),(&&,(--,equal(#PART1,#PART2)),part(#PART1,#PHRASE),part(#PART2,#PHRASE),(#1-->[Word])))).
((#1-->[SocialInteraction])==>exists(((#AGENT2)-->#AGENT1),(&&,(--,equal(#AGENT1,#AGENT2)),involvedInEvent(#INTERACTION,#AGENT1),involvedInEvent(#INTERACTION,#AGENT2),(#1-->[Agent])))).
((&&,agent(#QUESTION,#AGENT),patient(#QUESTION,#FORMULA),(#1-->[Formula]),(#1-->[Questioning]))==>holdsDuring(WhenFn(#QUESTION),(--,knows(#AGENT,#FORMULA)))).
((&&,(#1-->FictionalText),authors(#AGENT,#CLASS),(#1-->[#2]))==>exists(#CONTENT,(&&,(--,believes(#AGENT,#CONTENT)),subsumesContentInstance(#TEXT,#CONTENT),(#1-->[Formula])))).
((#1-->[TotalOrderingRelation])==>forall(((#INST2)-->#INST1),(&&,(--,((#INST1,#INST2)-->#REL)),(--,((#INST2,#INST1)-->#REL)),((#INST1,#INST2)-->#REL),((#INST2,#INST1)-->#REL)))).
((resourceExhausted(#P,#R)&&(#1-->[#2]))==>holdsDuring(ImmediateFutureFn(WhenFn(#P)),(--,exists(#OBJ1,(part(#OBJ1,#R)&&(#1-->[#2])))))).
((origin(#MOVEMENT,#PLACE1)&&(#1-->[Translocation]))==>exists(((#STAGE)-->#PLACE2),(&&,(--,equal(#PLACE1,#PLACE2)),subProcess(#STAGE,#MOVEMENT),located(#STAGE,#PLACE2),(#1-->[Region])))).
((&&,agent(#PROC,#AGENT_1),agent(#PROC,#AGENT_2),(#1-->[SingleAgentProcess]))==>((--,exists(#AGENT_3,((--,equal(#AGENT_3,#AGENT_1))&&agent(#PROC,#AGENT_3))))&&equal(#AGENT_1,#AGENT_2))).
((&&,patient(#TRANSLATE,#EXPRESSION1),result(#TRANSLATE,#EXPRESSION2),(#1-->[Translating]))==>exists(((#LANGUAGE2,#ENTITY)-->#LANGUAGE1),(&&,(--,equal(#LANGUAGE1,#LANGUAGE2)),representsInLanguage(#EXPRESSION1,#ENTITY,#LANGUAGE1),representsInLanguage(#EXPRESSION2,#ENTITY,#LANGUAGE2)))).
(attribute(#OBJ,Polychromatic)==>exists(((#PART2,#COLOR1,#COLOR2)-->#PART1),(&&,(--,equal(#COLOR1,#COLOR2)),attribute(#PART1,#COLOR1),superficialPart(#PART1,#OBJ),attribute(#PART2,#COLOR2),superficialPart(#PART2,#OBJ),(#1-->[ColorAttribute])))).
((#1-->[StationaryArtifact])==>exists(#PLACE,((--,exists(#P2,((--,equal(#PLACE,#P2))&&holdsDuring(WhenFn(#ARTIFACT),located(#ARTIFACT,#P2)))))&&holdsDuring(WhenFn(#ARTIFACT),located(#ARTIFACT,#PLACE))))).
((#1-->[Wetting])==>exists(#OBJ,(&&,patient(#WET,#OBJ),holdsDuring(EndFn(WhenFn(#WET)),attribute(#OBJ,Damp)),holdsDuring(BeginFn(WhenFn(#WET)),(--,attribute(#OBJ,Damp)))))).
((#1-->[TrichotomizingRelation])==>forall(((#INST2)-->#INST1),(--,(&&,(--,((#INST1,#INST2)-->#REL)),(--,((#INST2,#INST1)-->#REL)),(--,equal(#INST1,#INST2)),((#INST1,#INST2)-->#REL),((#INST2,#INST1)-->#REL),equal(#INST1,#INST2))))).
((&&,patient(#ATTACH,#OBJ1),patient(#ATTACH,#OBJ2),(#1-->[Attaching]))==>(holdsDuring(EndFn(WhenFn(#ATTACH)),connected(#OBJ1,#OBJ2))&&holdsDuring(BeginFn(WhenFn(#ATTACH)),(--,connected(#OBJ1,#OBJ2))))).
((&&,patient(#DETACH,#OBJ1),patient(#DETACH,#OBJ2),(#1-->[Detaching]))==>(holdsDuring(BeginFn(WhenFn(#DETACH)),connected(#OBJ1,#OBJ2))&&holdsDuring(EndFn(WhenFn(#DETACH)),(--,connected(#OBJ1,#OBJ2))))).
((&&,agent(#GRAB,#AGENT),patient(#GRAB,#THING),(#1-->[Grabbing]))==>(holdsDuring(EndFn(WhenFn(#GRAB)),grasps(#AGENT,#THING))&&holdsDuring(BeginFn(WhenFn(#GRAB)),(--,grasps(#AGENT,#THING))))).
((&&,agent(#GRAB,#AGENT),patient(#GRAB,#THING),(#1-->[Releasing]))==>(holdsDuring(BeginFn(WhenFn(#RELEASE)),grasps(#AGENT,#THING))&&holdsDuring(EndFn(WhenFn(#RELEASE)),(--,grasps(#AGENT,#THING))))).
((&&,agent(#GRAB,#AGENT),patient(#GRAB,#THING),(#1-->[Ungrasping]))==>(holdsDuring(BeginFn(WhenFn(#RELEASE)),grasps(#AGENT,#THING))&&holdsDuring(EndFn(WhenFn(#RELEASE)),(--,grasps(#AGENT,#THING))))).
((&&,patient(#INSERT,#OBJ1),destination(#INSERT,#OBJ2),(#1-->[Inserting]))==>(holdsDuring(EndFn(WhenFn(#INSERT)),contains(#OBJ2,#OBJ1))&&holdsDuring(BeginFn(WhenFn(#INSERT)),(--,contains(#OBJ2,#OBJ1))))).
((&&,agent(#JUDGE,#AGENT),patient(#JUDGE,#PROPOSITION),(#1-->[Judging]))==>(holdsDuring(EndFn(WhenFn(#JUDGE)),believes(#AGENT,#PROPOSITION))&&holdsDuring(BeginFn(WhenFn(#JUDGE)),(--,believes(#AGENT,#PROPOSITION))))).
((&&,agent(#LEARN,#AGENT),patient(#LEARN,#PROP),(#1-->[Learning]))==>(holdsDuring(EndFn(WhenFn(#LEARN)),knows(#AGENT,#PROP))&&holdsDuring(BeginFn(WhenFn(#LEARN)),(--,knows(#AGENT,#PROP))))).
((&&,patient(#PUT,#OBJ),destination(#PUT,#PLACE),(#1-->[Putting]))==>(holdsDuring(EndFn(WhenFn(#PUT)),located(#OBJ,#PLACE))&&holdsDuring(BeginFn(WhenFn(#PUT)),(--,located(#OBJ,#PLACE))))).
((&&,patient(#REMOVE,#OBJ),origin(#REMOVE,#PLACE),(#1-->[Removing]))==>(holdsDuring(BeginFn(WhenFn(#REMOVE)),located(#OBJ,#PLACE))&&holdsDuring(EndFn(WhenFn(#REMOVE)),(--,located(#OBJ,#PLACE))))).
((&&,agent(#TOUCH,#OBJ1),patient(#TOUCH,#OBJ2),(#1-->[Touching]))==>(holdsDuring(EndFn(WhenFn(#TOUCH)),connected(#OBJ1,#OBJ2))&&holdsDuring(BeginFn(WhenFn(#TOUCH)),(--,connected(#OBJ1,#OBJ2))))).
((#1-->[Contest])==>exists(((#AGENT2,#PURP1,#PURP2)-->#AGENT1),(&&,(--,equal(#AGENT1,#AGENT2)),(--,equal(#PURP1,#PURP2)),agent(#CONTEST,#AGENT1),agent(#CONTEST,#AGENT2),hasPurposeForAgent(#CONTEST,#PURP1,#AGENT1),hasPurposeForAgent(#CONTEST,#PURP2,#AGENT2)))).
((&&,agent(#FIRE,#ORG),patient(#FIRE,#PERSON),(#1-->[Organization]),(#1-->[TerminatingEmployment]))==>(holdsDuring(BeginFn(WhenFn(#FIRE)),employs(#ORG,#PERSON))&&holdsDuring(EndFn(WhenFn(#FIRE)),(--,employs(#ORG,#PERSON))))).
((&&,agent(#HIRE,#ORG),patient(#HIRE,#PERSON),(#1-->[Hiring]),(#1-->[Organization]))==>(holdsDuring(EndFn(WhenFn(#HIRE)),employs(#ORG,#PERSON))&&holdsDuring(BeginFn(WhenFn(#HIRE)),(--,employs(#ORG,#PERSON))))).
((&&,patient(#JOIN,#ORG),agent(#JOIN,#PERSON),(#1-->[JoiningAnOrganization]),(#1-->[Organization]))==>(holdsDuring(EndFn(WhenFn(#JOIN)),member(#PERSON,#ORG))&&holdsDuring(BeginFn(WhenFn(#JOIN)),(--,member(#PERSON,#ORG))))).
((&&,patient(#LEAVE,#ORG),agent(#LEAVE,#PERSON),(#1-->[LeavingAnOrganization]),(#1-->[Organization]))==>(holdsDuring(BeginFn(WhenFn(#LEAVE)),member(#PERSON,#ORG))&&holdsDuring(EndFn(WhenFn(#LEAVE)),(--,member(#PERSON,#ORG))))).
((#1-->[Disagreeing])==>exists(((#A2,#STATE1,#STATE2,#STMT1,#STMT2)-->#A1),(&&,(--,equal(#A1,#A2)),(--,consistent(#STMT1,#STMT2)),agent(#STATE1,#A1),subProcess(#STATE1,#DIS),containsInformation(#STATE1,#STMT1),agent(#STATE2,#A2),subProcess(#STATE2,#DIS),containsInformation(#STATE2,#STMT2)))).
((#1-->[Substituting])==>exists(((#REMOVE,#OBJ1,#OBJ2,#PLACE)-->#PUT),(&&,(--,equal(#OBJ1,#OBJ2)),patient(#PUT,#OBJ2),destination(#PUT,#PLACE),subProcess(#PUT,#SUB),patient(#REMOVE,#OBJ1),origin(#REMOVE,#PLACE),subProcess(#REMOVE,#SUB),(#1-->[Putting]),(#1-->[Removing])))).
((patient(#PROCESS,#OBJ)&&(#1-->[StateChange]))==>exists(((#STATE1,#STATE2)-->#PART),(&&,(--,equal(#STATE1,#STATE2)),part(#PART,#OBJ),holdsDuring(BeginFn(WhenFn(#PROCESS)),attribute(#PART,#STATE1)),holdsDuring(EndFn(WhenFn(#PROCESS)),attribute(#PART,#STATE2)),(#1-->[PhysicalState])))).
((#1-->[Transaction])==>exists(((#AGENT2,#GIVE1,#GIVE2,#OBJ1,#OBJ2)-->#AGENT1),(&&,(--,equal(#AGENT1,#AGENT2)),(--,equal(#OBJ1,#OBJ2)),agent(#GIVE1,#AGENT1),destination(#GIVE1,#AGENT2),patient(#GIVE1,#OBJ1),subProcess(#GIVE1,#TRANS),destination(#GIVE2,#AGENT1),agent(#GIVE2,#AGENT2),patient(#GIVE2,#OBJ2),subProcess(#GIVE2,#TRANS),(#1-->[Giving])))).
((#1-->[DirectionChange])==>exists(#ATTR,(&&,holdsDuring(BeginFn(WhenFn(#PROC)),manner(#PROC,#ATTR)),holdsDuring(EndFn(WhenFn(#PROC)),manner(#PROC,#ATTR)),holdsDuring(BeginFn(WhenFn(#PROC)),(--,manner(#PROC,#ATTR))),holdsDuring(EndFn(WhenFn(#PROC)),(--,manner(#PROC,#ATTR))),(#1-->[DirectionalAttribute])))).
((#1-->[Graph])==>exists(((#NODE2,#NODE3,#ARC1,#ARC2)-->#NODE1),(&&,(--,equal(#ARC1,#ARC2)),(--,equal(#NODE1,#NODE2)),(--,equal(#NODE1,#NODE3)),(--,equal(#NODE2,#NODE3)),graphPart(#ARC1,#GRAPH),graphPart(#ARC2,#GRAPH),graphPart(#NODE1,#GRAPH),graphPart(#NODE2,#GRAPH),graphPart(#NODE3,#GRAPH),links(#NODE1,#NODE2,#ARC1),links(#NODE2,#NODE3,#ARC2)))).
((patient(#ALT,#OBJ)&&(#1-->[ShapeChange]))==>exists(#PROPERTY,(&&,holdsDuring(BeginFn(WhenFn(#ALT)),attribute(#OBJ,#PROPERTY)),holdsDuring(EndFn(WhenFn(#ALT)),attribute(#OBJ,#PROPERTY)),holdsDuring(BeginFn(WhenFn(#ALT)),(--,attribute(#OBJ,#PROPERTY))),holdsDuring(EndFn(WhenFn(#ALT)),(--,attribute(#OBJ,#PROPERTY))),(#1-->[ShapeAttribute])))).
((patient(#CHANGE,#OBJ)&&(#1-->[InternalChange]))==>exists(#PROPERTY,(||,holdsDuring(BeginFn(WhenFn(#CHANGE)),attribute(#OBJ,#PROPERTY)),holdsDuring(EndFn(WhenFn(#CHANGE)),attribute(#OBJ,#PROPERTY)),holdsDuring(BeginFn(WhenFn(#CHANGE)),(--,attribute(#OBJ,#PROPERTY))),holdsDuring(EndFn(WhenFn(#CHANGE)),(--,attribute(#OBJ,#PROPERTY)))))).
((patient(#ALT,#OBJ)&&(#1-->[SurfaceChange]))==>exists(((#PROPERTY)-->#PART),(&&,superficialPart(#PART,#OBJ),holdsDuring(BeginFn(WhenFn(#ALT)),attribute(#PART,#PROPERTY)),holdsDuring(EndFn(WhenFn(#ALT)),attribute(#PART,#PROPERTY)),holdsDuring(BeginFn(WhenFn(#ALT)),(--,attribute(#PART,#PROPERTY))),holdsDuring(EndFn(WhenFn(#ALT)),(--,attribute(#PART,#PROPERTY)))))).
((&&,(--,equal(#NODE1,#NODE2)),graphPart(#NODE1,#GRAPH),graphPart(#NODE2,#GRAPH),(#1-->[Graph]),(#1-->[GraphNode]))==>exists(((#PATH)-->#ARC),(||,links(#NODE1,#NODE2,#ARC),equal(BeginNodeFn(#PATH),#NODE1),equal(BeginNodeFn(#PATH),#NODE2),equal(EndNodeFn(#PATH),#NODE1),equal(EndNodeFn(#PATH),#NODE2),(subGraph(#PATH,#GRAPH)&&(#1-->[GraphPath]))))).
((patient(#COLORING,#OBJ)&&(#1-->[Coloring]))==>exists(((#PART)-->#PROPERTY),(&&,holdsDuring(BeginFn(WhenFn(#COLORING)),attribute(#PART,#PROPERTY)),holdsDuring(EndFn(WhenFn(#COLORING)),attribute(#PART,#PROPERTY)),holdsDuring(BeginFn(WhenFn(#COLORING)),(--,attribute(#PART,#PROPERTY))),holdsDuring(EndFn(WhenFn(#COLORING)),(--,attribute(#PART,#PROPERTY))),(part(#PART,#OBJ)&&(#1-->[ColorAttribute]))))).
(subAttribute(#ATTR1,#ATTR2)==>forall(#OBJ,(property(#OBJ,#ATTR1)==>property(#OBJ,#ATTR2)))).
(completelyFills(#OBJ1,#HOLE)==>forall(#OBJ2,(connected(#OBJ2,#HOLE)==>connected(#OBJ2,#OBJ1)))).
(copy(#OBJ1,#OBJ2)==>forall(#ATTR,(attribute(#OBJ1,#ATTR)==>attribute(#OBJ2,#ATTR)))).
(located(#OBJ1,#OBJ2)==>forall(#SUB,(part(#SUB,#OBJ1)==>located(#SUB,#OBJ2)))).
(subsumesContentInstance(#OBJ1,#OBJ2)==>forall(#INFO,(containsInformation(#OBJ2,#INFO)==>containsInformation(#OBJ1,#INFO)))).
(surface(#OBJ1,#OBJ2)==>forall(#OBJ3,(superficialPart(#OBJ3,#OBJ2)==>part(#OBJ3,#OBJ1)))).
(eventLocated(#PROCESS,#OBJ)==>forall(#SUB,(subProcess(#SUB,#PROCESS)==>eventLocated(#SUB,#OBJ)))).
(subset(#SUBSET,#SET)==>forall(#ELEMENT,(element(#ELEMENT,#SUBSET)==>element(#ELEMENT,#SET)))).
(disjointDecomposition(#CLASS,"@ROW")==>forall(#ITEM,(inList(#ITEM,ListFn("@ROW"))==>(#1-->#2)))).
(radius(#CIRCLE,#RADIUS)==>exists(#POINT,forall(#PART,(pointOfFigure(#PART,#CIRCLE)==>geometricDistance(#PART,#POINT,#RADIUS))))).
(holdsDuring(#TIME,direction(#PROC,#ATTR1))==>forall(#ATTR2,(holdsDuring(#TIME,direction(#PROC,#ATTR2))==>equal(#ATTR2,#ATTR1)))).
(holdsDuring(#TIME,faces(#PROC,#ATTR1))==>forall(#ATTR2,(holdsDuring(#TIME,faces(#PROC,#ATTR2))==>equal(#ATTR2,#ATTR1)))).
(interiorPart(#OBJ1,#OBJ2)==>forall(#PART,(--,(superficialPart(#PART,#OBJ2)==>overlapsSpatially(#OBJ1,#PART))))).
(result(#PROC,#OBJ)==>forall(#TIME,(--,(before(#TIME,BeginFn(WhenFn(#PROC)))==>time(#OBJ,#TIME))))).
(subProposition(#PROP1,#PROP2)==>forall(((#OBJ2)-->#OBJ1),((containsInformation(#OBJ1,#PROP1)&&containsInformation(#OBJ2,#PROP2))==>subsumesContentInstance(#OBJ2,#OBJ1)))).
(attribute(#OBJ,Wet)==>forall(#PART,(part(#PART,#OBJ)==>exists(#SUBPART,(part(#SUBPART,#PART)&&attribute(#SUBPART,Liquid)))))).
((hole(#HOLE1,#OBJ)&&hole(#HOLE2,#OBJ))==>forall(#HOLE3,(part(#HOLE3,MereologicalSumFn(#HOLE1,#HOLE2))==>hole(#HOLE3,#OBJ)))).
((((($Ro31y)-->#REL)==>($Ro31y-->#CLASS1))&&((($Ro31y)-->#REL)==>($Ro31y-->#CLASS2)))==>(#1-->#2)).
((&&,subrelation(#REL1,#REL2),(($Rkqmpn)-->#REL1),((($Rkqmpo)-->#REL2)==>($Rkqmpo-->#CLASS1)))==>($Rkqmpn-->#CLASS1)).
((&&,#1,#2,(((($Rkqmpn)-->#REL1)==>($Rkqmpn-->#CLASS1))&&((($Rkqmpo)-->#REL2)==>($Rkqmpo-->#CLASS2))))==>disjointRelation(#REL1,#REL2)).
(equal(BeginFn(#INTERVAL),#POINT)==>forall(#OTHERPOINT,(((--,equal(#OTHERPOINT,#POINT))&&temporalPart(#OTHERPOINT,#INTERVAL))==>before(#POINT,#OTHERPOINT)))).
(equal(EndFn(#INTERVAL),#POINT)==>forall(#OTHERPOINT,(((--,equal(#OTHERPOINT,#POINT))&&temporalPart(#OTHERPOINT,#INTERVAL))==>before(#OTHERPOINT,#POINT)))).
(equal(ImmediateFamilyFn(#P),#FAMILY)==>forall(#MEMBER,(member(#MEMBER,#FAMILY)==>exists(#OTHER,(||,parent(#MEMBER,#OTHER),parent(#OTHER,#MEMBER)))))).
(disjointDecomposition(#CLASS,"@ROW")==>forall(((#ITEM2)-->#ITEM1),(--,((&&,(--,equal(#ITEM1,#ITEM2)),inList(#ITEM1,ListFn("@ROW")),inList(#ITEM2,ListFn("@ROW")))==>((--,#1)&&(--,#2)))))).
((&&,(--,greaterThan(#MEASURE1,#DISTANCE)),length(#PATH1,#MEASURE1),destination(#PROCESS,#DEST),path(#PROCESS,#PATH1),origin(#PROCESS,#SOURCE),distance(#SOURCE,#DEST,#DISTANCE))==>forall(#OBJ,(part(#OBJ,#PATH1)==>between(#SOURCE,#OBJ,#DEST)))).
(contraryAttribute("@ROW")==>forall(((#ATTR2)-->#ATTR1),(--,((&&,(--,equal(#NUMBER1,#NUMBER2)),property(#OBJ,#ATTR1),equal(#ATTR1,ListOrderFn(ListFn("@ROW"),#NUMBER1)),equal(#ATTR2,ListOrderFn(ListFn("@ROW"),#NUMBER2)))==>property(#OBJ,#ATTR2))))).
((&&,arcWeight(#ARC1,#NUMBER1),graphPart(#ARC1,#PATH),subGraph(#SUBPATH,#PATH),equal(PathWeightFn(#PATH),#SUM),forall(#ARC2,(--,(graphPart(#ARC2,#PATH)==>((--,equal(#ARC2,#ARC1))&&(--,graphPart(#ARC2,#SUBPATH)))))))==>equal(#SUM,AdditionFn(PathWeightFn(#SUBPATH),#NUMBER1))).
((&&,arcWeight(#ARC1,#NUMBER1),graphPart(#ARC1,#PATH),arcWeight(#ARC2,#NUMBER2),graphPart(#ARC2,#PATH),equal(PathWeightFn(#PATH),#SUM),forall(#ARC3,(--,(graphPart(#ARC3,#PATH)==>((--,equal(#ARC3,#ARC1))&&(--,equal(#ARC3,#ARC2)))))))==>equal(PathWeightFn(#PATH),AdditionFn(#NUMBER1,#NUMBER2))).
(average(#LIST,#AVERAGE)==>forall(#LISTITEM,(inList(#LISTITEM,#LIST)==>(#1-->[RealNumber])))).
((#1-->[SocialUnit])==>exists(#HOME,(member(#MEMBER,#UNIT)==>home(#MEMBER,#HOME)))).
((#1-->[SymmetricRelation])==>forall(((#INST2)-->#INST1),(((#INST1,#INST2)-->#REL)==>((#INST2,#INST1)-->#REL)))).
((#1-->[BeliefGroup])==>exists(#BELIEF,forall(#MEMB,(member(#MEMB,#GROUP)==>believes(#MEMB,#BELIEF))))).
((#1-->[Organization])==>exists(#PURP,forall(#MEMBER,(member(#MEMBER,#ORG)==>hasPurpose(#MEMBER,#PURP))))).
((#1-->[Cooperation])==>exists(#PURP,forall(#AGENT,(agent(#COOPERATE,#AGENT)==>hasPurposeForAgent(#COOPERATE,#PURP,#AGENT))))).
(equal(MinimalCutSetFn(#GRAPH),#PATHCLASS)==>exists(#NUMBER,forall(#PATH,((#1-->[#2])==>pathLength(#PATH,#NUMBER))))).
((#1-->[UniqueList])==>forall(((#NUMBER2)-->#NUMBER1),(equal(ListOrderFn(#LIST,#NUMBER1),ListOrderFn(#LIST,#NUMBER2))==>equal(#NUMBER1,#NUMBER2)))).
((reflexiveOn(#RELATION,#CLASS)&&(#1-->[Predicate]))==>forall(#INST,((#1-->[#2])==>((#INST,#INST)-->#RELATION)))).
(causesSubclass(#PROC1,#PROC2)==>forall(#INST2,((#1-->[#2])==>exists(#INST1,(causes(#INST1,#INST2)&&(#1-->[#2])))))).
((#1-->[AntisymmetricRelation])==>forall(((#INST2)-->#INST1),((((#INST1,#INST2)-->#REL)&&((#INST2,#INST1)-->#REL))==>equal(#INST1,#INST2)))).
((#1-->[FamilyGroup])==>forall(((#MEMB2)-->#MEMB1),((member(#MEMB1,#GROUP)&&member(#MEMB2,#GROUP))==>familyRelation(#MEMB1,#MEMB2)))).
((#1-->[TransitiveRelation])==>forall(((#INST2,#INST3)-->#INST1),((((#INST1,#INST2)-->#REL)&&((#INST2,#INST3)-->#REL))==>((#INST1,#INST3)-->#REL)))).
((valence(#REL,#NUMBER)&&(#1-->[Predicate]))==>forall("@ROW",((("@ROW")-->#REL)==>equal(ListLengthFn(ListFn("@ROW")),#NUMBER)))).
(exhaustiveDecomposition(#CLASS,"@ROW")==>forall(#OBJ,((#1-->[#2])==>exists(#ITEM,(inList(#ITEM,ListFn("@ROW"))&&(#1-->[#2])))))).
(exhaustiveAttribute(#CLASS,"@ROW")==>forall(#ATTR1,((#1-->[#2])==>exists(#ATTR2,(equal(#ATTR1,#ATTR2)&&inList(#ATTR2,ListFn("@ROW"))))))).
((#1-->[Atom])==>forall(((#NUCLEUS2)-->#NUCLEUS1),((&&,component(#NUCLEUS1,#ATOM),component(#NUCLEUS2,#ATOM),(#1-->[AtomicNucleus]))==>equal(#NUCLEUS1,#NUCLEUS2)))).
((#1-->[Machine])==>forall(#PROC,(instrument(#PROC,#MACHINE)==>exists(((#RESULT)-->#RESOURCE),(resource(#PROC,#RESOURCE)&&result(#PROC,#RESULT)))))).
((&&,attribute(#PART,#COLOR),superficialPart(#PART,#OBJ),attribute(#OBJ,Monochromatic),(#1-->[PrimaryColor]))==>forall(#ELEMENT,(superficialPart(#ELEMENT,#OBJ)==>attribute(#ELEMENT,#COLOR)))).
(equal(TemporalCompositionFn(#INTERVAL,#INTERVAL),#CLASS)==>forall(((#TIME2)-->#TIME1),((#1-->[#2])==>exists(#DURATION,(duration(#TIME1,#DURATION)&&duration(#TIME2,#DURATION)))))).
((patient(#KEEP,#OBJ)&&(#1-->[Keeping]))==>exists(#PLACE,forall(#TIME,(temporalPart(#TIME,WhenFn(#KEEP))==>holdsDuring(#TIME,located(#OBJ,#PLACE)))))).
(subsumesContentClass(#CLASS1,#CLASS2)==>forall(((#INFO)-->#OBJ2),((containsInformation(#OBJ2,#INFO)&&(#1-->[#2]))==>exists(#OBJ1,(containsInformation(#OBJ1,#INFO)&&(#1-->[#2])))))).
(frequency(#PROC,#TIME1)==>forall(#TIME2,(duration(#TIME2,#TIME1)==>exists(#POSITION,(temporalPart(#POSITION,#TIME2)&&holdsDuring(#POSITION,exists(#INST,(#1-->[#2])))))))).
(equal(TemporalCompositionFn(#INTERVAL,#INTERVAL),#CLASS)==>forall(#TIME,((temporalPart(#TIME,#INTERVAL)&&(#1-->[TimePoint]))==>exists(#INSTANCE,(temporalPart(#TIME,#INSTANCE)&&(#1-->[#2])))))).
((#1-->[Bacterium])==>exists(#CELL1,(&&,component(#CELL1,#BACTERIUM),(#1-->[Cell]),forall(#CELL2,((component(#CELL2,#BACTERIUM)&&(#1-->[Cell]))==>equal(#CELL1,#CELL2)))))).
((#1-->[AgeGroup])==>forall(((#MEMB2,#AGE1,#AGE2)-->#MEMB1),((&&,age(#MEMB1,#AGE1),member(#MEMB1,#GROUP),age(#MEMB2,#AGE2),member(#MEMB2,#GROUP))==>equal(#AGE1,#AGE2)))).
((&&,((#NUMBER1,#NUMBER2)-->#REL),(#1-->[BinaryRelation]),(#1-->[RealNumber]),(#1-->[RelationExtendedToQuantities]))==>forall(#UNIT,((#1-->[UnitOfMeasure])==>((MeasureFn(#NUMBER1,#UNIT),MeasureFn(#NUMBER2,#UNIT))-->#REL)))).
((#1-->[Meat])==>forall(#PART,(part(#PART,#MEAT)==>exists(((#TIME,#ANIMAL)-->#SUBPART),(part(#SUBPART,#PART)&&holdsDuring(#TIME,(part(#SUBPART,#ANIMAL)&&(#1-->[Animal])))))))).
((#1-->[Object])==>exists(((#TIME2)-->#TIME1),(&&,before(#TIME1,#TIME2),(#1-->[TimePoint]),forall(#TIME,((beforeOrEqual(#TIME,#TIME2)&&beforeOrEqual(#TIME1,#TIME))==>time(#OBJ,#TIME)))))).
((equal(PathWeightFn(#PATH),#NUMBER1)&&equal(MaximalWeightedPathFn(#NODE1,#NODE2),#PATH))==>forall(#PATH2,((equal(PathWeightFn(#PATH2),#NUMBER2)&&(#1-->[GraphPathFn(#2,#3)]))==>lessThanOrEqualTo(#NUMBER2,#NUMBER1)))).
((equal(PathWeightFn(#PATH),#NUMBER1)&&equal(MinimalWeightedPathFn(#NODE1,#NODE2),#PATH))==>forall(#PATH2,((equal(PathWeightFn(#PATH2),#NUMBER2)&&(#1-->[GraphPathFn(#2,#3)]))==>greaterThanOrEqualTo(#NUMBER2,#NUMBER1)))).
((#1-->[SingleFamilyResidence])==>hasPurpose(#RESIDENCE,forall(((#AGENT2)-->#AGENT1),((home(#AGENT1,#RESIDENCE)&&home(#AGENT2,#RESIDENCE))==>exists(#UNIT,(&&,member(#AGENT1,#UNIT),member(#AGENT2,#UNIT),(#1-->[SocialUnit]))))))).
((&&,experiencer(#DEATH,#ORG),(#1-->[Death]),(#1-->[Organism]))==>exists(#REM,(&&,result(#DEATH,#REM),holdsDuring(FutureFn(WhenFn(#DEATH)),attribute(#REM,Dead)),(#1-->[OrganicObject]),(holdsDuring(ImmediateFutureFn(WhenFn(#DEATH)),part(#OBJ,#REM))==>holdsDuring(ImmediatePastFn(WhenFn(#DEATH)),part(#OBJ,#ORG)))))).
(((#1-->[SequenceFunction])&&((($Ro3ss)-->#SEQ)==>($Ro3ss-->#CLASS)))==>(#1-->Integer)).
((equal(AssignmentFn(#FUNCTION,"@ROW"),#VALUE)&&((($Rg07a4l)-->#FUNCTION)==>($Rg07a4l-->#CLASS)))==>(#1-->[#2])).
((irreflexiveOn(#RELATION,#CLASS)&&(#1-->[Predicate]))==>forall(#INST,(--,((#1-->[#2])==>((#INST,#INST)-->#RELATION))))).
((#1-->[PairwiseDisjointClass])==>forall(((#CLASS2)-->#CLASS1),(--,((#1-->[#2])==>(&&,(--,#1),(--,#2),(--,equal(#CLASS1,#CLASS2))))))).
((#1-->[IntransitiveRelation])==>forall(((#INST2,#INST3)-->#INST1),(--,((((#INST1,#INST2)-->#REL)&&((#INST2,#INST3)-->#REL))==>((#INST1,#INST3)-->#REL))))).
(equal(TemporalCompositionFn(#INTERVAL,#INTERVAL),#CLASS)==>forall(#TIME1,(((--,finishes(#TIME1,#INTERVAL))&&(#1-->[#2]))==>exists(#TIME2,(meetsTemporally(#TIME1,#TIME2)&&(#1-->[#2])))))).
(equal(TemporalCompositionFn(#INTERVAL,#INTERVAL),#CLASS)==>forall(#TIME1,(((--,starts(#TIME1,#INTERVAL))&&(#1-->[#2]))==>exists(#TIME2,(meetsTemporally(#TIME2,#TIME1)&&(#1-->[#2])))))).
((trichotomizingOn(#RELATION,#CLASS)&&(#1-->[Predicate]))==>forall(((#INST2)-->#INST1),(--,((#1-->[#2])==>(&&,(--,((#INST1,#INST2)-->#RELATION)),(--,((#INST2,#INST1)-->#RELATION)),(--,equal(#INST1,#INST2))))))).
((#1-->[WaterCloud])==>forall(#PART,(((--,(#1-->[Water]))&&part(#PART,#CLOUD))==>exists(#WATER,(&&,greaterThan(#MEASURE1,#MEASURE2),measure(#PART,#MEASURE2),part(#WATER,#CLOUD),measure(#WATER,#MEASURE1),(#1-->[Water])))))).
(preventsSubclass(#PROC1,#PROC2)==>forall(((#PLACE)-->#TIME),(--,(holdsDuring(#TIME,exists(#INST1,(eventLocated(#INST1,#PLACE)&&(#1-->[#2]))))==>holdsDuring(#TIME,exists(#INST2,(eventLocated(#INST2,#PLACE)&&(#1-->[#2])))))))).
(equal(TemporalCompositionFn(#INTERVAL,#INTERVAL),#CLASS)==>forall(((#TIME2)-->#TIME1),(--,(((--,equal(#TIME1,#TIME2))&&(#1-->[#2]))==>(&&,(--,earlier(#TIME1,#TIME2)),(--,meetsTemporally(#TIME1,#TIME2)),(--,earlier(#TIME2,#TIME1)),(--,meetsTemporally(#TIME2,#TIME1))))))).
(equal(#ATTR1,#ATTR2)==>forall(#THING,(property(#THING,#ATTR1)<=>property(#THING,#ATTR2)))).
(equal(#THING1,#THING2)==>forall(#ATTR,(property(#THING1,#ATTR)<=>property(#THING2,#ATTR)))).
(forall(#ELEMENT,(element(#ELEMENT,#SET1)<=>element(#ELEMENT,#SET2)))==>equal(#SET1,#SET2)).
(equal(#OBJ3,MereologicalProductFn(#OBJ1,#OBJ2))==>forall(#PART,(part(#PART,#OBJ3)<=>(part(#PART,#OBJ1)&&part(#PART,#OBJ2))))).
(equal(#OBJ1,HoleSkinFn(#HOLE))==>forall(#OBJ2,(overlapsSpatially(#OBJ2,#OBJ1)<=>exists(#OBJ3,(&&,meetsSpatially(#HOLE,#OBJ3),overlapsSpatially(#OBJ2,#OBJ3),superficialPart(#OBJ3,HoleHostFn(#HOLE))))))).
(equal(#OBJ3,MereologicalDifferenceFn(#OBJ1,#OBJ2))==>forall(#PART,(properPart(#PART,#OBJ3)<=>((--,properPart(#PART,#OBJ2))&&properPart(#PART,#OBJ1))))).
(equal(#OBJ3,MereologicalSumFn(#OBJ1,#OBJ2))==>forall(#PART,(--,(part(#PART,#OBJ3)<=>((--,part(#PART,#OBJ1))&&(--,part(#PART,#OBJ2))))))).
((&&,equal(TimeIntervalFn(#POINT1,#POINT2),#INTERVAL),(#1-->[TimeInterval]),(#1-->[TimePoint]))==>forall(#POINT,(temporalPart(#POINT,#INTERVAL)<=>temporallyBetweenOrEqual(#POINT1,#POINT,#POINT2)))).
(equal(RelativeTimeFn(#TIME1,CentralTimeZone),#TIME2)==>equal(#TIME2,AdditionFn(#TIME1,6))).
(equal(RelativeTimeFn(#TIME1,EasternTimeZone),#TIME2)==>equal(#TIME2,AdditionFn(#TIME1,5))).
(equal(RelativeTimeFn(#TIME1,MountainTimeZone),#TIME2)==>equal(#TIME2,AdditionFn(#TIME1,7))).
(equal(RelativeTimeFn(#TIME1,PacificTimeZone),#TIME2)==>equal(#TIME2,AdditionFn(#TIME1,8))).
(measure(#ANGLE,MeasureFn(#NUMBER,AngularDegree))==>(greaterThanOrEqualTo(#NUMBER,0)&&lessThanOrEqualTo(#NUMBER,360))).
(diameter(#CIRCLE,#LENGTH)==>exists(#HALF,(radius(#CIRCLE,#HALF)&&equal(MultiplicationFn(#HALF,2),#LENGTH)))).
((#1-->[BinaryFunction])==>valence(#FUNCTION,2)).
((#1-->[BinaryPredicate])==>valence(#REL,2)).
((#1-->[NegativeInteger])==>greaterThan(0,#X)).
((#1-->[NonnegativeInteger])==>greaterThan(#X,-1)).
((#1-->[PositiveInteger])==>greaterThan(#X,0)).
((#1-->[QuaternaryFunction])==>valence(#FUNCTION,4)).
((#1-->[QuaternaryPredicate])==>valence(#REL,4)).
((#1-->[QuintaryPredicate])==>valence(#REL,5)).
((#1-->[TernaryFunction])==>valence(#FUNCTION,3)).
((#1-->[TernaryPredicate])==>valence(#REL,3)).
((#1-->[UnaryFunction])==>valence(#FUNCTION,1)).
((#1-->[NegativeRealNumber])==>equal(SignumFn(#NUMBER),-1)).
((#1-->[PositiveRealNumber])==>equal(SignumFn(#NUMBER),1)).
((#1-->[April])==>duration(#MONTH,MeasureFn(30,DayDuration))).
((#1-->[August])==>duration(#MONTH,MeasureFn(31,DayDuration))).
((#1-->[Day])==>duration(#DAY,MeasureFn(1,DayDuration))).
((#1-->[December])==>duration(#MONTH,MeasureFn(31,DayDuration))).
((#1-->[EvenInteger])==>equal(RemainderFn(#NUMBER,2),0)).
((#1-->[Hour])==>duration(#HOUR,MeasureFn(1,HourDuration))).
((#1-->[January])==>duration(#MONTH,MeasureFn(31,DayDuration))).
((#1-->[July])==>duration(#MONTH,MeasureFn(31,DayDuration))).
((#1-->[June])==>duration(#MONTH,MeasureFn(30,DayDuration))).
((#1-->[March])==>duration(#MONTH,MeasureFn(31,DayDuration))).
((#1-->[May])==>duration(#MONTH,MeasureFn(31,DayDuration))).
((#1-->[Minute])==>duration(#MINUTE,MeasureFn(1,MinuteDuration))).
((#1-->[November])==>duration(#MONTH,MeasureFn(30,DayDuration))).
((#1-->[October])==>duration(#MONTH,MeasureFn(31,DayDuration))).
((#1-->[OddInteger])==>equal(RemainderFn(#NUMBER,2),1)).
((#1-->[Second])==>duration(#SECOND,MeasureFn(1,SecondDuration))).
((#1-->[September])==>duration(#MONTH,MeasureFn(30,DayDuration))).
((#1-->[Week])==>duration(#WEEK,MeasureFn(1,WeekDuration))).
((#1-->[Year])==>duration(#YEAR,MeasureFn(1,YearDuration))).
((#1-->[DayFn(#2,#3)])==>lessThanOrEqualTo(#NUMBER,31)).
((#1-->[HourFn(#2,#3)])==>lessThan(#NUMBER,24)).
((#1-->[MinuteFn(#2,#3)])==>lessThan(#NUMBER,60)).
((#1-->[SecondFn(#2,#3)])==>lessThan(#NUMBER,60)).
((#1-->[Day])==>equal(CardinalityFn(TemporalCompositionFn(#DAY,Hour)),24)).
((#1-->[Hour])==>equal(CardinalityFn(TemporalCompositionFn(#HOUR,Minute)),60)).
((#1-->[Minute])==>equal(CardinalityFn(TemporalCompositionFn(#MINUTE,Second)),60)).
((#1-->[Quantity])==>equal(ReciprocalFn(#NUMBER),ExponentiationFn(#NUMBER,-1))).
((#1-->[Quantity])==>equal(1,MultiplicationFn(#NUMBER,ReciprocalFn(#NUMBER)))).
((#1-->[Week])==>equal(CardinalityFn(TemporalCompositionFn(#WEEK,Day)),7)).
((#1-->[Year])==>equal(CardinalityFn(TemporalCompositionFn(#YEAR,Month)),12)).
((#1-->[RealNumber])==>equal(MeasureFn(#N,Horsepower),MeasureFn(MultiplicationFn(#N,746),Watt))).
(((#1-->[Year])&&equal(SubtractionFn(#YEAR2,#YEAR1),1))==>meetsTemporally(#YEAR1,#YEAR2)).
(((#1-->[DayFn(#2,#3)])&&equal(SubtractionFn(#NUMBER2,#NUMBER1),1))==>meetsTemporally(#DAY1,#DAY2)).
(((#1-->[HourFn(#2,#3)])&&equal(SubtractionFn(#NUMBER2,#NUMBER1),1))==>meetsTemporally(#HOUR1,#HOUR2)).
(((#1-->[MinuteFn(#2,#3)])&&equal(SubtractionFn(#NUMBER2,#NUMBER1),1))==>meetsTemporally(#MINUTE1,#MINUTE2)).
(((#1-->[SecondFn(#2,#3)])&&equal(SubtractionFn(#NUMBER2,#NUMBER1),1))==>meetsTemporally(#SECOND1,#SECOND2)).
((#1-->[ImaginaryNumber])==>exists(#REAL,((#1-->[RealNumber])&&equal(#NUMBER,MultiplicationFn(#REAL,SquareRootFn(-1)))))).
((equal(#GIGAUNIT,GigaFn(#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MeasureFn(1,#GIGAUNIT),MeasureFn(1000000000,#UNIT))).
((equal(#KILOUNIT,KiloFn(#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MeasureFn(1,#KILOUNIT),MeasureFn(1000,#UNIT))).
((equal(#MEGAUNIT,MegaFn(#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MeasureFn(1,#MEGAUNIT),MeasureFn(1000000,#UNIT))).
((equal(#MICROUNIT,MicroFn(#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MeasureFn(1,#MICROUNIT),MeasureFn("1.0E-6",#UNIT))).
((equal(#MILLIUNIT,MilliFn(#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MeasureFn(1,#MILLIUNIT),MeasureFn("0.001",#UNIT))).
((equal(#NANOUNIT,NanoFn(#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MeasureFn(1,#NANOUNIT),MeasureFn("1.0E-9",#UNIT))).
((equal(#PICOUNIT,PicoFn(#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MeasureFn(1,#PICOUNIT),MeasureFn("1.0E-12",#UNIT))).
((equal(#TERAUNIT,TeraFn(#UNIT))&&(#1-->[UnitOfMeasure]))==>equal(MeasureFn(1,#TERAUNIT),MeasureFn(2147483647,#UNIT))).
((&&,(#1-->[#2]),(#1-->[LeapYear]),(#1-->[MonthFn(February,#2)]))==>duration(#MONTH,MeasureFn(29,DayDuration))).
((#1-->[ComplexNumber])==>exists(((#REAL2)-->#REAL1),((#1-->[RealNumber])&&equal(#NUMBER,AdditionFn(#REAL1,MultiplicationFn(#REAL2,SquareRootFn(-1))))))).
((&&,(--,(#1-->[LeapYear])),(#1-->[#2]),(#1-->[MonthFn(February,#2)]))==>duration(#MONTH,MeasureFn(28,DayDuration))).
(equal(GreatestCommonDivisorFn("@ROW"),#NUMBER)==>forall(#ELEMENT,(inList(#ELEMENT,ListFn("@ROW"))==>equal(RemainderFn(#ELEMENT,#NUMBER),0)))).
(equal(LeastCommonMultipleFn("@ROW"),#NUMBER)==>forall(#ELEMENT,(inList(#ELEMENT,ListFn("@ROW"))==>equal(RemainderFn(#NUMBER,#ELEMENT),0)))).
(identityElement(#FUNCTION,#ID)==>forall(#INST,(((#1-->[#2])&&domain(#FUNCTION,(#CLASS,1)))==>equal(AssignmentFn(#FUNCTION,#ID,#INST),#INST)))).
((#1-->[CommutativeFunction])==>forall(((#INST2)-->#INST1),(((#1-->[#2])&&domain(#FUNCTION,(#CLASS,1)))==>equal(AssignmentFn(#FUNCTION,#INST1,#INST2),AssignmentFn(#FUNCTION,#INST2,#INST1))))).
((#1-->[AssociativeFunction])==>forall(((#INST2,#INST3)-->#INST1),(((#1-->[#2])&&domain(#FUNCTION,(#CLASS,1)))==>equal(AssignmentFn(#FUNCTION,#INST1,AssignmentFn(#FUNCTION,#INST2,#INST3)),AssignmentFn(#FUNCTION,AssignmentFn(#FUNCTION,#INST1,#INST2),#INST3))))).
((#1-->[PrimeNumber])==>forall(#NUMBER,(--,(equal(RemainderFn(#PRIME,#NUMBER),0)==>((--,equal(#NUMBER,#PRIME))&&(--,equal(#NUMBER,1))))))).
((#1-->[OneToOneFunction])==>forall(((#ARG2)-->#ARG1),(--,((&&,(--,equal(#ARG1,#ARG2)),(#1-->[#2]),domain(#FUN,(#CLASS,1)))==>equal(AssignmentFn(#FUN,#ARG1),AssignmentFn(#FUN,#ARG2)))))).
(connects(#OBJ1,#OBJ2,#OBJ3)<=>between(#OBJ2,#OBJ1,#OBJ3)).
(orientation(#OBJ1,#OBJ2,East)<=>orientation(#OBJ2,#OBJ1,West)).
(orientation(#OBJ1,#OBJ2,Horizontal)<=>orientation(#OBJ2,#OBJ1,Horizontal)).
(orientation(#OBJ2,#OBJ1,Left)<=>orientation(#OBJ1,#OBJ2,Right)).
(orientation(#OBJ1,#OBJ2,North)<=>orientation(#OBJ2,#OBJ1,South)).
(orientation(#OBJ1,#OBJ2,Vertical)<=>orientation(#OBJ2,#OBJ1,Vertical)).
(time(#THING,#POS)<=>temporalPart(#POS,WhenFn(#THING))).
(connectedEngineeringComponents(#COMP1,#COMP2)<=>exists(#CONNECTION,connectsEngineeringComponents(#CONNECTION,#COMP1,#COMP2))).
(expressedInLanguage(#EXPRESS,#LANGUAGE)<=>exists(#PROP,representsInLanguage(#EXPRESS,#PROP,#LANGUAGE))).
(earlier(#INTERVAL1,#INTERVAL2)<=>before(EndFn(#INTERVAL1),BeginFn(#INTERVAL2))).
(meetsTemporally(#INTERVAL1,#INTERVAL2)<=>equal(EndFn(#INTERVAL1),BeginFn(#INTERVAL2))).
(cooccur(#PHYS1,#PHYS2)<=>equal(WhenFn(#PHYS1),WhenFn(#PHYS2))).
(monetaryValue(PropertyFn(#PERSON),#AMOUNT)<=>equal(WealthFn(#PERSON),#AMOUNT)).
(holdsDuring(#TIME,exactlyLocated(#THING,#REGION))<=>equal(WhereFn(#THING,#TIME),#REGION)).
(equal(RemainderFn(#NUMBER1,#NUMBER2),#NUMBER)<=>equal(AdditionFn(MultiplicationFn(FloorFn(DivisionFn(#NUMBER1,#NUMBER2)),#NUMBER2),#NUMBER),#NUMBER1)).
(partition("@ROW")<=>(disjointDecomposition("@ROW")&&exhaustiveDecomposition("@ROW"))).
(equivalentContentClass(#CLASS1,#CLASS2)<=>(subsumesContentClass(#CLASS1,#CLASS2)&&subsumesContentClass(#CLASS2,#CLASS1))).
(equivalentContentInstance(#OBJ1,#OBJ2)<=>(subsumesContentInstance(#OBJ1,#OBJ2)&&subsumesContentInstance(#OBJ2,#OBJ1))).
(totalOrderingOn(#RELATION,#CLASS)<=>(partialOrderingOn(#RELATION,#CLASS)&&trichotomizingOn(#RELATION,#CLASS))).
(temporallyBetween(#POINT1,#POINT2,#POINT3)<=>(before(#POINT1,#POINT2)&&before(#POINT2,#POINT3))).
(temporallyBetweenOrEqual(#POINT1,#POINT2,#POINT3)<=>(beforeOrEqual(#POINT1,#POINT2)&&beforeOrEqual(#POINT2,#POINT3))).
(contains(#OBJ1,#OBJ2)<=>exists(#HOLE,(hole(#HOLE,#OBJ1)&&properlyFills(#OBJ2,#HOLE)))).
(overlapsSpatially(#OBJ1,#OBJ2)<=>exists(#OBJ3,(part(#OBJ3,#OBJ1)&&part(#OBJ3,#OBJ2)))).
(finishes(#INTERVAL1,#INTERVAL2)<=>(before(BeginFn(#INTERVAL2),BeginFn(#INTERVAL1))&&equal(EndFn(#INTERVAL2),EndFn(#INTERVAL1)))).
(starts(#INTERVAL1,#INTERVAL2)<=>(equal(BeginFn(#INTERVAL1),BeginFn(#INTERVAL2))&&before(EndFn(#INTERVAL1),EndFn(#INTERVAL2)))).
(width(#OBJECT,#WIDTH)<=>exists(((#SIDE2)-->#SIDE1),(&&,side(#SIDE1,#OBJECT),side(#SIDE2,#OBJECT),distance(#SIDE1,#SIDE2,#WIDTH)))).
(properPart(#OBJ1,#OBJ2)<=>((--,part(#OBJ2,#OBJ1))&&part(#OBJ1,#OBJ2))).
(connects(#OBJ1,#OBJ2,#OBJ3)<=>(&&,(--,connected(#OBJ2,#OBJ3)),connected(#OBJ1,#OBJ2),connected(#OBJ1,#OBJ3))).
(overlapsPartially(#OBJ1,#OBJ2)<=>(&&,(--,part(#OBJ1,#OBJ2)),(--,part(#OBJ2,#OBJ1)),exists(#OBJ3,(part(#OBJ3,#OBJ1)&&part(#OBJ3,#OBJ2))))).
((#1-->Entity)<=>(#1-->[Class])).
(possesses(#PERSON,#OBJ)<=>(#1-->[PropertyFn(#2)])).
(exists(#OBJ,hole(#HOLE,#OBJ))<=>(#1-->[Hole])).
(exists(#NODE,links(#NODE,#NODE,#LOOP))<=>(#1-->[GraphLoop])).
((#1-->[AsymmetricRelation])<=>((#1-->[AntisymmetricRelation])&&(#1-->[IrreflexiveRelation]))).
((#1-->[GovernmentOrganization])<=>exists(#GOV,(subOrganization(#ORG,#GOV)&&(#1-->[Government])))).
((#1-->[PseudoGraph])<=>exists(#LOOP,(graphPart(#LOOP,#GRAPH)&&(#1-->[GraphLoop])))).
((#1-->[StationaryArtifact])<=>exists(#BUILD,(result(#BUILD,#ARTIFACT)&&(#1-->[Constructing])))).
((#1-->[Substance])<=>exists(#ATTR,(attribute(#OBJ,#ATTR)&&(#1-->[PhysicalState])))).
(attribute(#HOLE1,Fillable)<=>exists(#HOLE2,(part(#HOLE1,#HOLE2)&&(#1-->[Hole])))).
((#1-->[IntervalFn(#2,#3)])<=>(greaterThanOrEqualTo(#QUANTITY,#FROM)&&lessThanOrEqualTo(#QUANTITY,#TO))).
((#1-->[SyntheticSubstance])<=>exists(#PROCESS,(&&,result(#PROCESS,#SUBSTANCE),(#1-->[IntentionalProcess]),(#1-->[Substance])))).
(attribute(#REGION,Illuminated)<=>exists(#EMIT,(&&,patient(#EMIT,#REGION),(#1-->[RadiatingLight]),(#1-->[Region])))).
((#1-->[Injuring])<=>((#1-->[Damaging])&&exists(#ORGANISM,(patient(#INJ,#ORGANISM)&&(#1-->[Organism]))))).
(overlapsTemporally(#INTERVAL1,#INTERVAL2)<=>exists(#INTERVAL3,(&&,temporalPart(#INTERVAL3,#INTERVAL1),temporalPart(#INTERVAL3,#INTERVAL2),(#1-->[TimeInterval])))).
(exists(#ATTR,(attribute(#AGENT,#ATTR)&&(#1-->[ConsciousnessAttribute])))<=>(attribute(#AGENT,Living)&&(#1-->[SentientAgent]))).
(exists(#NODE,(equal(BeginNodeFn(#GRAPH),#NODE)&&equal(EndNodeFn(#GRAPH),#NODE)))<=>(#1-->[GraphCircuit])).
(inScopeOfInterest(#AGENT,#OBJECT)<=>exists(#PROCESS,(&&,agent(#PROCESS,#AGENT),patient(#PROCESS,#OBJECT),(#1-->[CognitiveAgent]),(#1-->[IntentionalProcess])))).
(temporallyBetweenOrEqual(BeginFn(WhenFn(#PHYS)),#TIME,EndFn(WhenFn(#PHYS)))<=>(time(#PHYS,#TIME)&&(#1-->[TimePoint]))).
(exists(#BORROW,(&&,agent(#BORROW,#AGENT1),origin(#BORROW,#AGENT2),patient(#BORROW,#OBJECT),(#1-->[Borrowing])))<=>exists(#LEND,(&&,destination(#LEND,#AGENT1),agent(#LEND,#AGENT2),patient(#LEND,#OBJECT),(#1-->[Lending])))).
(exists(#BUY,(&&,agent(#BUY,#AGENT1),origin(#BUY,#AGENT2),patient(#BUY,#OBJECT),(#1-->[Buying])))<=>exists(#SELL,(&&,destination(#SELL,#AGENT1),agent(#SELL,#AGENT2),patient(#SELL,#OBJECT),(#1-->[Selling])))).
(attribute(#PERSON,Unemployed)<=>(forall(#ORG,(--,employs(#ORG,#PERSON)))&&(#1-->[Human]))).
(holdsDuring(#TIME,(||,capability(LegalAction,agent,#AGENT),capability(LegalAction,patient,#AGENT)))<=>holdsDuring(#TIME,(#1-->[LegalAgent]))).
(exists(#PATIENT,(&&,(--,time(#PATIENT,BeginFn(WhenFn(#PROCESS)))),patient(#PROCESS,#PATIENT),time(#PATIENT,EndFn(WhenFn(#PROCESS)))))<=>(#1-->[Creation])).
(exists(#PATIENT,(&&,(--,time(#PATIENT,EndFn(WhenFn(#PROCESS)))),patient(#PROCESS,#PATIENT),time(#PATIENT,BeginFn(WhenFn(#PROCESS)))))<=>(#1-->[Destruction])).
((#1-->[CompoundSubstance])<=>exists(((#ELEMENT2,#PROCESS)-->#ELEMENT1),(&&,(--,equal(#ELEMENT1,#ELEMENT2)),result(#PROCESS,#COMPOUND),resource(#PROCESS,#ELEMENT1),resource(#PROCESS,#ELEMENT2),(#1-->[ChemicalSynthesis]),(#1-->[ElementalSubstance])))).
((holdsDuring(EndFn(WhenFn(#COMBINE)),part(#OBJ1,#OBJ2))&&holdsDuring(BeginFn(WhenFn(#COMBINE)),(--,part(#OBJ1,#OBJ2))))<=>(&&,resource(#COMBINE,#OBJ1),result(#COMBINE,#OBJ2),(#1-->[Combining]))).
(exists(((#ARC2,#NODE1,#NODE2)-->#ARC1),(&&,(--,equal(#ARC1,#ARC2)),graphPart(#ARC1,#GRAPH),graphPart(#ARC2,#GRAPH),graphPart(#NODE1,#GRAPH),graphPart(#NODE2,#GRAPH),links(#NODE1,#NODE2,#ARC1),links(#NODE1,#NODE2,#ARC2)))<=>(#1-->[MultiGraph])).
(subCollection(#COLL1,#COLL2)<=>forall(#MEMBER,(member(#MEMBER,#COLL1)==>member(#MEMBER,#COLL2)))).
((#1-->[SelfConnectedObject])<=>forall(((#PART2)-->#PART1),(equal(#OBJ,MereologicalSumFn(#PART1,#PART2))==>connected(#PART1,#PART2)))).
(larger(#OBJ1,#OBJ2)<=>forall(((#QUANT2,#UNIT)-->#QUANT1),((&&,measure(#OBJ1,MeasureFn(#QUANT1,#UNIT)),measure(#OBJ2,MeasureFn(#QUANT2,#UNIT)),(#1-->[UnitOfLength]))==>greaterThan(#QUANT1,#QUANT2)))).
(exists(#VALENCE,(&&,valence(#REL,#VALENCE),(#1-->[Relation]),(forall(((#ELEMENT,#CLASS)-->#NUMBER),((&&,lessThan(#NUMBER,#VALENCE),domain(#REL,(#CLASS,#NUMBER)),equal(#ELEMENT,ListOrderFn(ListFn("@ROW"),#NUMBER)))==>(#1-->[#2])))==>exists(#ITEM,(("@ROW",#ITEM)-->#REL)))))<=>((#1-->[Predicate])&&(#1-->[TotalValuedRelation]))).
((#1-->[NegativeRealNumber])<=>((#1-->[RealNumber])&&lessThan(#NUMBER,0))).
((#1-->[NonnegativeRealNumber])<=>((#1-->[RealNumber])&&greaterThanOrEqualTo(#NUMBER,0))).
((#1-->[PositiveRealNumber])<=>((#1-->[RealNumber])&&greaterThan(#NUMBER,0))).
